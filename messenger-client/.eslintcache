[{"/home/mukul/mukul/messenger/messenger-client/src/index.tsx":"1","/home/mukul/mukul/messenger/messenger-client/src/components/main.tsx":"2","/home/mukul/mukul/messenger/messenger-client/src/components/home/home.tsx":"3","/home/mukul/mukul/messenger/messenger-client/src/components/home/home.render.tsx":"4","/home/mukul/mukul/messenger/messenger-client/src/components/login/login.tsx":"5","/home/mukul/mukul/messenger/messenger-client/src/components/login/login.render.tsx":"6","/home/mukul/mukul/messenger/messenger-client/src/shared/material-modules.ts":"7","/home/mukul/mukul/messenger/messenger-client/src/shared/utils.ts":"8","/home/mukul/mukul/messenger/messenger-client/src/redux/index.ts":"9","/home/mukul/mukul/messenger/messenger-client/src/utils/routes.ts":"10","/home/mukul/mukul/messenger/messenger-client/src/components/profile/profile.tsx":"11","/home/mukul/mukul/messenger/messenger-client/src/components/thridpartylogin/thridpartylogin.tsx":"12","/home/mukul/mukul/messenger/messenger-client/src/shared/components/toast/toast.tsx":"13","/home/mukul/mukul/messenger/messenger-client/src/redux/reducers.ts":"14","/home/mukul/mukul/messenger/messenger-client/src/components/profile/profile.render.tsx":"15","/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/navbar/navbar.tsx":"16","/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/chat-section/chat.tsx":"17","/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/requests/request.tsx":"18","/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/chat-section/chat.render.tsx":"19","/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/navbar/navbar.render.tsx":"20","/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/requests/requestRender.tsx":"21","/home/mukul/mukul/messenger/messenger-client/src/redux/actions.ts":"22","/home/mukul/mukul/messenger/messenger-client/src/shared/components/backdrop/backdrop.tsx":"23","/home/mukul/mukul/messenger/messenger-client/src/utils/server.ts":"24","/home/mukul/mukul/messenger/messenger-client/src/utils/server-routes.ts":"25","/home/mukul/mukul/messenger/messenger-client/src/shared/components/otp/otp.tsx":"26","/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/chat-section/chat-components/chat-friends/chat-friends.tsx":"27","/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/chat-section/chat-components/message-area/message-area.render.tsx":"28","/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/chat-section/chat-components/chat-friends/chat-friends-render.tsx":"29"},{"size":345,"mtime":1612455113719,"results":"30","hashOfConfig":"31"},{"size":2389,"mtime":1612645937888,"results":"32","hashOfConfig":"31"},{"size":141,"mtime":1612696482742,"results":"33","hashOfConfig":"31"},{"size":990,"mtime":1612902547587,"results":"34","hashOfConfig":"31"},{"size":4034,"mtime":1612643447526,"results":"35","hashOfConfig":"31"},{"size":3591,"mtime":1612465092827,"results":"36","hashOfConfig":"31"},{"size":3139,"mtime":1612890091433,"results":"37","hashOfConfig":"31"},{"size":1881,"mtime":1612466496011,"results":"38","hashOfConfig":"31"},{"size":269,"mtime":1612459925845,"results":"39","hashOfConfig":"31"},{"size":416,"mtime":1612902507826,"results":"40","hashOfConfig":"31"},{"size":3437,"mtime":1612646749610,"results":"41","hashOfConfig":"31"},{"size":1286,"mtime":1612460483388,"results":"42","hashOfConfig":"31"},{"size":1245,"mtime":1612645968517,"results":"43","hashOfConfig":"31"},{"size":903,"mtime":1612468430685,"results":"44","hashOfConfig":"31"},{"size":3488,"mtime":1612552525843,"results":"45","hashOfConfig":"31"},{"size":149,"mtime":1612456651219,"results":"46","hashOfConfig":"31"},{"size":141,"mtime":1612456571511,"results":"47","hashOfConfig":"31"},{"size":152,"mtime":1612456690327,"results":"48","hashOfConfig":"31"},{"size":1012,"mtime":1612890480859,"results":"49","hashOfConfig":"31"},{"size":1789,"mtime":1612903059757,"results":"50","hashOfConfig":"31"},{"size":5016,"mtime":1612899756136,"results":"51","hashOfConfig":"31"},{"size":213,"mtime":1612459784061,"results":"52","hashOfConfig":"31"},{"size":710,"mtime":1612460526974,"results":"53","hashOfConfig":"31"},{"size":4030,"mtime":1612646181354,"results":"54","hashOfConfig":"31"},{"size":823,"mtime":1612466133002,"results":"55","hashOfConfig":"31"},{"size":4850,"mtime":1612384440450,"results":"56","hashOfConfig":"31"},{"size":170,"mtime":1612649642511,"results":"57","hashOfConfig":"31"},{"size":2214,"mtime":1612886800670,"results":"58","hashOfConfig":"31"},{"size":1504,"mtime":1612890479591,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1ailxs8",{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"62"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/home/mukul/mukul/messenger/messenger-client/src/index.tsx",[],["128","129"],"/home/mukul/mukul/messenger/messenger-client/src/components/main.tsx",["130","131"],"import React, { useEffect, useState } from 'react';\nimport {\n    BrowserRouter,\n    Switch,\n    Route,\n    Redirect,\n    useHistory,\n} from \"react-router-dom\";\nimport Routes from '../utils/routes';\nimport Home from './home/home'\nimport Login from './login/login'\nimport './main.scss'\nimport Profile from './profile/profile';\nimport { ThirdPartyLogin } from './thridpartylogin/thridpartylogin';\nimport ToastMessage from '../shared/components/toast/toast';\nimport BackdropLoader from '../shared/components/backdrop/backdrop';\nimport { toastMessage } from '../shared/utils';\nimport { useDispatch } from 'react-redux';\nimport actions from '../redux/actions';\nimport API from '../utils/server';\n\nexport default function Main() {\n    const defaultRedirect = () => <Redirect to={Routes.login} />;\n    const [intercepted, setIntercept] = useState(false)\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch({ type : actions.SHOW_LOADER })\n        API.initApiInterceptor();\n        toastMessage.subscribe((data) => {\n            if (data.logout) {\n                localStorage.clear();\n                dispatch({ type : actions.STORE_USER, data : { name : null, image : null } })\n                setTimeout(() => window.location.href = Routes.default, 2000)\n            }\n            dispatch({ type : actions.TOAST_MESSAGE, data : { message : data.message, type : data.type } })\n        })\n        setIntercept(true)\n        dispatch({ type : actions.STOP_LOADER })\n    },[])\n    return (\n        <>\n            {\n                intercepted ? \n                <>\n                    <BackdropLoader/>\n                    <ToastMessage/>\n                    <BrowserRouter>\n                        <Switch>\n                            <Route path={Routes.login} component={Login}></Route>\n                            <Route path={Routes.home} component={Home}></Route>\n                            <Route path={Routes.profile} component={Profile}></Route>\n                            <Route path={Routes.thridPartyLogin} component={ThirdPartyLogin}></Route>\n                            <Route path={Routes.notFound} component={defaultRedirect}></Route>\n                            <Route path={Routes.default} component={defaultRedirect}></Route>\n                        </Switch>\n                    </BrowserRouter>\n                </>:null\n            }\n        </>\n    )\n}\n","/home/mukul/mukul/messenger/messenger-client/src/components/home/home.tsx",[],"/home/mukul/mukul/messenger/messenger-client/src/components/home/home.render.tsx",["132"],"/home/mukul/mukul/messenger/messenger-client/src/components/login/login.tsx",["133","134"],"import React, { useEffect, useReducer } from 'react'\nimport LoginRender from './login.render'\nimport { useHistory } from \"react-router-dom\";\nimport Routes from '../../utils/routes';\nimport { setGlobalToggleFunc } from '../../shared/utils';\nimport { useDispatch } from 'react-redux';\nimport { IToastStore } from '../../interfaces/redux';\nimport actions from '../../redux/actions';\nimport serverRoutes from '../../utils/server-routes';\nimport API from '../../utils/server';\nimport IApiResponse from '../../interfaces/data-models';\nimport Otp from '../../shared/components/otp/otp';\nimport { AxiosRequestConfig } from 'axios';\nexport default function Login() {\n    const history = useHistory()\n    const dispatch  = useDispatch() \n    const loginContextData = { redirect : true, identity : '', otpReady : false, otp : '', isLoading : false, type : '' }\n    const [loginContext, setLoginContext] = useReducer(setGlobalToggleFunc, loginContextData)\n    const authenticate = async (identity : string, type : 'Login' | 'google' | 'Register') => {\n        try{\n            if(type === 'google'){\n                window.location.href = serverRoutes.GOOGLE;\n                return;\n            }\n            setLoginContext({ isLoading : true, type : type, identity : identity})\n            const response : IApiResponse = await (type === 'Login' ? API.login : API.register)(identity, false)\n            dispatch({ type : actions.TOAST_MESSAGE, data : { type : true, message : `OTP sent to ${identity}` } })\n            setLoginContext({ isLoading : false, otpReady : true })\n            console.log(response)\n        }catch(e){\n            setLoginContext({ isLoading : false })\n            dispatch({ type : actions.TOAST_MESSAGE, data : { type : false, message : e } })\n        }\n    }\n    const setStorage = (token : string, refreshToken : string) : void => {\n        localStorage.setItem('token', token)\n        localStorage.setItem('refreshToken',refreshToken)\n    }\n    const submitOtp = async (otp : string) => {\n        try{\n            setLoginContext({ isLoading : true, otpReady : false })\n            const response : AxiosRequestConfig = await (loginContext.type === 'Login' ? API.login : API.register)(loginContext.identity, true, otp)\n            const data = response.data.message;\n            setStorage(data.token, data.refresh_token)\n            if(response.data.statusCode === 201){\n                const dispatchData = { identity: loginContext.identity, name: '', image: null, id : data.id }\n                dispatch({ type : actions.STORE_USER, data : dispatchData })\n                setLoginContext({ isLoading : false })\n                history.push({ pathname: '/profile', state: { header: 'Complete your profile', identity: loginContext.identity } })\n                return\n            }\n            const profileResponse : AxiosRequestConfig = await API.getProfile()\n            const { userId, displayName } = profileResponse.data.message;\n            dispatch({ type : actions.STORE_USER, data : { identity: loginContext.identity, name: displayName, image: null, id : userId } })\n            history.push({ pathname: '/home'})\n        }catch(e){\n            setLoginContext({ isLoading : false, otpReady : true })\n            dispatch({ type : actions.TOAST_MESSAGE, data : { type : false, message : e } })\n        }\n    }\n    useEffect(() => {\n        document.title = 'Messenger';\n        if (localStorage.length === 0) {\n            document.title = 'Messenger - Login';\n            setLoginContext({ redirect: false })\n        } else {\n            history.push(Routes.home)\n        }\n    }, []);\n    const otp = loginContext.otpReady ?\n    <Otp \n        verifyOtp={submitOtp} \n        resend={() => authenticate(loginContext.identity, loginContext.type)} \n        cancelOtp={() => setLoginContext({ otpReady: false })} \n    /> : null;\n\n    return (\n        loginContext.redirect ? null :\n        <>\n            <LoginRender {...loginContext} authenticate={authenticate}/>\n            {otp}\n        </>\n    )\n}\n","/home/mukul/mukul/messenger/messenger-client/src/components/login/login.render.tsx",[],"/home/mukul/mukul/messenger/messenger-client/src/shared/material-modules.ts",[],"/home/mukul/mukul/messenger/messenger-client/src/shared/utils.ts",[],"/home/mukul/mukul/messenger/messenger-client/src/redux/index.ts",[],"/home/mukul/mukul/messenger/messenger-client/src/utils/routes.ts",[],"/home/mukul/mukul/messenger/messenger-client/src/components/profile/profile.tsx",["135","136"],"import React, { useEffect, useReducer } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Routes from '../../utils/routes';\nimport API from '../../utils/server';\nimport Utils, { setGlobalToggleFunc, toastMessage } from '../../shared/utils';\nimport ProfileRenderer from './profile.render';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { IUserStore } from '../../interfaces/redux';\nimport actions from '../../redux/actions';\nexport default function Profile() {\n    const userStore : IUserStore = useSelector((state : any) => state.userService)\n    const dispatch = useDispatch()\n    const history = useHistory();\n    const stateData = { loading: true, name: '', blob: null, user: userStore.id , profileTouched: {} };\n    const [state, setState] = useReducer(setGlobalToggleFunc, stateData);\n    const updateProfile = async () => {\n        try {\n            if (Object.keys(state.profileTouched).length > 0) {\n                setState({ loading: true })\n                let params = [state.name, state.blob];\n                if (!state.profileTouched.blob) {\n                    params.pop();\n                }\n                await API.updateProfile(state.name)\n                setState({ loading: false })\n                const dispatchData = { name: state.name, blob: state.blob }\n                dispatch({ type : actions.STORE_USER, data : dispatchData })\n                toastMessage.next({ type: true, message: 'Profile updated successfully' });\n            }\n            history.push(Routes.home)\n        } catch (e) {\n            setState({ loading: false })\n            toastMessage.next({ type: false, message: e, duration: 2000 })\n        }\n    }\n    const getProfile = async () => {\n        document.title = 'Messenger - Profile';\n        if (localStorage.length === 0) {\n            history.push(Routes.login);\n        }\n        else if (!userStore.name) {\n            try {\n                setState({ loading: true })\n                const profileResponse: any = await API.getProfile();\n                const profile = profileResponse.data?.message;\n                setState({ loading: false })\n                if (profile.displayName) {\n                    const blob = null//`${profile.image_blob}` == 'null' ? null : profile.image_blob;\n                    const dispatchData = { name: profile.displayName, image: null }\n                    dispatch({ type : actions.STORE_USER, data : dispatchData })\n                    setState({ loading: false, name: profile.displayName, blob: blob, user: profile.identity })\n                } else {\n                    const dispatchData = { name: profile.displayName, id: profile.userId, identity : profile.identity }\n                    dispatch({ type : actions.STORE_USER, data : dispatchData })\n                    setState({ loading: false, name: profile.displayName, blob: null, user: profile.identity })\n                    // toastMessage.next({ type: false, message: 'Profile not set' })\n                }\n            } catch (e) {\n                setState({ loading: false })\n                toastMessage.next({ type: false, message: e })\n            }\n        } else {\n            setState({ loading: false, name: userStore.name, blob: userStore.image, user: userStore.identity })\n        }\n    }\n    useEffect(() => { getProfile(); }, [])\n    return (<ProfileRenderer {...state} updateProfile={updateProfile} setForm={setState} />)\n}","/home/mukul/mukul/messenger/messenger-client/src/components/thridpartylogin/thridpartylogin.tsx",[],"/home/mukul/mukul/messenger/messenger-client/src/shared/components/toast/toast.tsx",[],"/home/mukul/mukul/messenger/messenger-client/src/redux/reducers.ts",[],"/home/mukul/mukul/messenger/messenger-client/src/components/profile/profile.render.tsx",["137"],"import React, { createRef } from 'react';\nimport './profile.scss'\nimport emptyProfile from '../../assets/emptyProfile.webp';\nimport { TextField, Button, CircularProgress } from '../../shared/material-modules';\nexport default function ProfileRenderer(props: any) {\n    const { loading, name, user, setForm, updateProfile, blob, profileTouched } = props;\n    const fileInp = (createRef() as any);\n    const setProfileImage = (evt: any) => {\n        var f = evt.target.files[0];\n        if (f) {\n            const r = new FileReader();\n            r.onload = (e: any) => setForm({ blob: e.target.result, profileTouched: { ...profileTouched, blob: true } })\n            r.readAsDataURL(f);\n        }\n    }\n    return (\n        <>\n            <input type='file' hidden id='hidden-file' ref={fileInp} onChange={setProfileImage} />\n            <div className=\"profile-layout\">\n                <p id='heading'>My Profile</p>\n                <div className=\"profile\">\n                    <div className=\"profile-form\">\n                        <div className=\"profile-img\">\n                            <img src={blob ? blob : emptyProfile} width=\"100px\" height=\"100px\" onClick={e => fileInp.current.click()} />\n                            {\n                                blob ?\n                                    <div className=\"remove-img\" onClick={e => setForm({ blob: null, profileTouched: { ...profileTouched, blob: true } })}>x</div>\n                                    : null\n                            }\n                        </div>\n                        <div className=\"profile-name form-inp\">\n                            <div id='inp-text'><strong>Name</strong></div>\n                            <TextField\n                                id=\"outlined-basic\"\n                                placeholder=\"Name\"\n                                variant=\"outlined\"\n                                className=\"input-text\"\n                                disabled={loading}\n                                value={name || ''}\n                                onChange={e => setForm({ name: e.target.value, profileTouched: { ...profileTouched, name: true } })}\n                            />\n                        </div>\n                        <div className=\"profile-emailMobile form-inp\">\n                            <div id='inp-text'><strong>Email or Mobile</strong></div>\n                            <TextField\n                                id=\"outlined-basic\"\n                                placeholder=\"Email or Mobile\"\n                                variant=\"outlined\"\n                                className=\"input-text\"\n                                disabled={true}\n                                value={user || ''}\n                            />\n                        </div>\n                        <div className=\"submit-profile\">\n                            <Button variant=\"contained\" color=\"primary\"\n                                disabled={loading}\n                                onClick={e => updateProfile()}\n                            >\n                                {\n                                    loading ?\n                                        <CircularProgress className=\"submit-profile__loader\" /> :\n                                        'Submit'\n                                }\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}","/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/navbar/navbar.tsx",[],"/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/chat-section/chat.tsx",[],"/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/requests/request.tsx",[],"/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/chat-section/chat.render.tsx",["138"],"import React, { createRef, useState } from 'react'\nimport ChatFriends from './chat-components/chat-friends/chat-friends'\nimport MessageAreaRender from './chat-components/message-area/message-area.render'\nimport './chat.scss'\nexport default function ChatRender() {\n    const [friendRef, setFriendRef] = useState<any>(createRef())\n    return (\n        <div className=\"chat-render\">\n            <div className=\"chat-render--chatfriends\" id='chat-friends' ref={friendRef}>\n                <ChatFriends/>\n            </div>\n            <div className=\"chat-render--chatfriends-mob\" onClick={() => friendRef.current.classList.toggle('chat-render-showFriends')}>\n                <div>F</div>\n                <div>R</div>\n                <div>I</div>\n                <div>E</div>\n                <div>N</div>\n                <div>D</div>\n                <div>S</div>\n            </div>\n            <div className=\"chat-render--messagearea\">\n                <MessageAreaRender/>\n            </div>\n        </div>\n    )\n}\n","/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/navbar/navbar.render.tsx",["139","140"],"/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/requests/requestRender.tsx",["141","142","143","144"],"import React, { useState } from 'react'\nimport { SearchIcon, QueryBuilderIcon, Pagination, SendIcon, CheckCircleOutlineIcon, CancelIcon, TextField } from '../../../../shared/material-modules'\nimport './request.scss'\nimport emptyProfile from '../../../../assets/emptyProfile.webp'\nexport default function RequestRender() {\n    const [requestNav, setRequestNav] = useState<number>(1)\n    return (\n        <div className=\"request-render\">\n            <div className=\"request-render--nav\">\n                <div className={requestNav === 1 ? 'request-nav-item request-active-nav' : 'request-nav-item'} onClick={() => setRequestNav(1)}>\n                    <SendIcon/>\n                    <span>Sent Requests</span>\n                </div>\n                <div className={requestNav === 2 ? 'request-nav-item request-active-nav' : 'request-nav-item'} onClick={() => setRequestNav(2)}>\n                    <SearchIcon/>\n                    <span>Search</span>\n                </div>\n                <div className={requestNav === 3 ? 'request-nav-item request-active-nav' : 'request-nav-item'} onClick={() => setRequestNav(3)}>\n                    <QueryBuilderIcon/>\n                    <span>Pending Requests</span>\n                </div>\n            </div>\n            <div className=\"request-content\">\n                { requestNav === 1 ? <SentRequests/> : null }\n                { requestNav === 2 ? <>\n                    <TextField className=\"request-search-inp\" id=\"outlined-basic\" variant=\"outlined\" placeholder=\"Enter User\"/>\n                    <SearchRequests/>\n                </> : null }\n                { requestNav === 3 ? <PendingRequests/> : null }\n            </div>\n        </div>\n    )\n}\n\nfunction SentRequests(){\n    return(\n        <div className=\"request-content--SentRequests\">\n           {\n               Array(212).fill(1).map(v => {\n                   return (\n                        <div className=\"sentrequests-item\">\n                        <div className=\"request-profile\">\n                            <div className=\"requestitem-profile\">\n                                <img src={emptyProfile} />\n                            </div>\n                            <div className=\"requestitem-profilename\">\n                                Mukul Dutt\n                            </div>\n                        </div>\n                        <div className=\"requestitem-actions\">\n                            <button>\n                                <CancelIcon/>\n                                <span>Revoke</span>\n                            </button>\n                        </div>\n                    </div>\n                   )\n               })\n           }\n        </div>\n    )\n}\n\nfunction SearchRequests(){\n    return(\n        <div className=\"request-content--SentRequests request-content--SentRequests-min\">\n           {\n               Array(122).fill(1).map(v => {\n                   return (\n                        <div className=\"sentrequests-item\">\n                        <div className=\"request-profile\">\n                            <div className=\"requestitem-profile\">\n                                <img src={emptyProfile} />\n                            </div>\n                            <div className=\"requestitem-profilename\">\n                                Mukul Dutt\n                            </div>\n                        </div>\n                        <div className=\"requestitem-actions\">\n                            <button className=\"send-r-btn\">\n                                <SendIcon/>\n                                <span>Send Request</span>\n                            </button>\n                        </div>\n                    </div>\n                   )\n               })\n           }\n        </div>\n    )\n}\n\nfunction PendingRequests(){\n    return(\n        <div className=\"request-content--SentRequests\">\n           {\n               Array(12).fill(1).map(v => {\n                   return (\n                        <div className=\"sentrequests-item\">\n                        <div className=\"request-profile\">\n                            <div className=\"requestitem-profile\">\n                                <img src={emptyProfile} />\n                            </div>\n                            <div className=\"requestitem-profilename\">\n                                Mukul Dutt\n                            </div>\n                        </div>\n                        <div className=\"requestitem-actions\">\n                            <button className=\"accept-r-btn\">\n                                <CheckCircleOutlineIcon/>\n                                <span>Accept</span>\n                            </button>\n                            <button className=\"reject-r-btn\">\n                                <CancelIcon/>\n                                <span>Reject</span>\n                            </button>\n                        </div>\n                    </div>\n                   )\n               })\n           }\n        </div>\n    )\n}","/home/mukul/mukul/messenger/messenger-client/src/redux/actions.ts",[],"/home/mukul/mukul/messenger/messenger-client/src/shared/components/backdrop/backdrop.tsx",[],"/home/mukul/mukul/messenger/messenger-client/src/utils/server.ts",["145","146"],"import sR from './server-routes'\nimport axios, { AxiosRequestConfig } from 'axios'\nimport Utils, { toastMessage } from '../shared/utils';\nexport default class API{\n    public static nonSecretEndPoints = [sR.BASE + sR.LOGIN, sR.BASE + sR.REGISTER, sR.BASE + sR.LOGIN, sR.BASE + sR.AUTHORIZE]\n    public static initApiInterceptor() {\n        axios.interceptors.request.use(\n            (config: any) => {\n                if (!this.nonSecretEndPoints.includes(config.url)) {\n                    const token = localStorage.getItem('token');\n                    if (!token) {\n                        toastMessage.next({ message: 'Session timed out', type: false, duration: 5000, logout: true });\n                        return;\n                    }\n                    config.headers = { ...config.headers, token: token, type: \"WEB-MESSENGER\" };\n                    return config;\n                }\n                config.headers = { ...config.headers, type: \"WEB-MESSENGER\" };\n                return config;\n            },\n            (error) => Promise.reject({ type: \"intercept\", message: sR.clientAccessDenied })\n        );\n        axios.interceptors.response.use((null as any), (error : any) => {\n            const pendingRequest = error.config;\n            if (\n                error?.response?.status === 401 &&\n                !this.nonSecretEndPoints.includes(error.config.url) &&\n                !pendingRequest._retry\n            ) {\n                pendingRequest._retry = true;\n                axios.get(sR.BASE + sR.REFRESH + `?token=${localStorage.getItem('refreshToken')}`). \n                then(response => {\n                    if(response.status === 200 && response.data?.message){\n                        localStorage.setItem('refreshToken', response.data?.message?.refresh_token)\n                        localStorage.setItem('token', response.data?.message?.token)\n                        // return axios(pendingRequest)\n                        window.location.reload()\n                    }else{\n                        localStorage.clear()\n                        toastMessage.next({ message: 'Re-Login again', type: false, duration: 5000, logout: true });\n                    }\n                }). \n                catch(e => {\n                    localStorage.clear()\n                    toastMessage.next({ message: 'Re-Login again', type: false, duration: 5000, logout: true });\n                })\n            }\n            return Promise.reject(error);\n        });\n    }\n    public static login(identity : string, isOtp : boolean, otp ?:string) : Promise<any> {\n        return new Promise((resolve, reject) => {\n            const body = { identity : identity, otp :  isOtp ? otp : null}\n            axios.post(sR.BASE+sR.LOGIN, body).then((response: AxiosRequestConfig) => resolve(response)).catch(e => reject(Utils.parseError(e)))\n        })\n    }\n\n    public static register(identity : string, isOtp : boolean, otp ?:string) : Promise<any> {\n        return new Promise((resolve, reject) => {\n            const body = { identity : identity, otp :  isOtp ? otp : null}\n            axios.post(sR.BASE+sR.REGISTER, body).then((response: AxiosRequestConfig) => resolve(response)).catch(e => reject(Utils.parseError(e)))\n        })\n    }\n\n    public static getProfile(id ?: string[]) : Promise<any> {\n        return new Promise((resolve, reject) => {\n            const url = sR.BASE+sR.PROFILE\n            if(!id){\n                return axios.get(url).then((response: AxiosRequestConfig) => resolve(response)).catch(e => reject(Utils.parseError(e)))\n            }\n            axios.post(url, id).then((response: AxiosRequestConfig) => resolve(response)).catch(e => reject(Utils.parseError(e)))\n        })\n    }\n\n    public static updateProfile(name : string): Promise<any> {\n        return new Promise((resolve, reject) => {\n            axios.put(sR.BASE+sR.PROFILE, { displayName : name }).then((response: AxiosRequestConfig) => resolve(response)).catch(e => reject(Utils.parseError(e)))\n        })\n    }\n\n}","/home/mukul/mukul/messenger/messenger-client/src/utils/server-routes.ts",[],"/home/mukul/mukul/messenger/messenger-client/src/shared/components/otp/otp.tsx",["147","148","149"],"import React, { createRef, useEffect, useState } from 'react';\nimport './otp.scss'\nimport {\n    Dialog, Button, ReplayIcon, CloseIcon, CheckCircleOutlineIcon\n} from '../../material-modules';\nexport default function Otp(props: any) {\n    const { verifyOtp, resend } = props;\n    const [focusOn, setFocusOn] = useState(0)\n    const [values, setValues] = useState(({ 0: '', 1: '', 2: '', 3: '', 4: '', 5: '' } as any))\n    const [focuses, setFocuses] = useState((Array(6).fill(true).map(_ => createRef()) as any))\n    const [otpValid, setOtpValid] = useState(('' as any))\n    const [inProgress, setInProgress] = useState(false)\n    const onClic = (e: any) => {\n        setFocusOn(e)\n    }\n    useEffect(() => {\n        const otp = Object.values(values).map(v => v).join('')\n        if (`${otp}`.length === 6) {\n            setOtpValid(otp)\n            return;\n        }\n        setOtpValid(null)\n    }, [values])\n\n    const resendOtp = (e: any) => {\n    }\n\n    const onKeyU = (e: any, i: number) => {\n        if (e.key <= 9 || e.key >= 0) {\n            if (i < 5) {\n                setFocusOn(i + 1)\n                focuses[i + 1].current.focus()\n            }\n        }\n    }\n    const verify = () => {\n        if (!otpValid || inProgress) { return }\n        verifyOtp(otpValid);\n    }\n    const onKeyP = (e: any, i: number) => {\n        if (e.keyCode === 13) {\n            verify()\n            return;\n        }\n        if (e.keyCode === 8 && (focusOn) > 0) {\n            const cV: any = { ...values }\n            cV[i] = ''\n            setValues(cV)\n            if (values[i] === '') {\n                setFocusOn(focusOn - 1)\n                focuses[focusOn - 1].current.focus()\n            }\n        }\n    }\n\n    const onChang = (e: any, i: number) => {\n        const val = `${e.target.value}`;\n        if (!isNaN(Number(val))) {\n            const cV: any = { ...values }\n            cV[i] = val.length === 1 ? val : val.charAt(val.length - 1)\n            setValues(cV)\n        }\n    }\n    const isEnabled = otpValid && !inProgress\n    return (\n        <div className='otp-parent'>\n            <Dialog\n                open={true}>\n                <div className='otp-modal'>\n                    <div className='goBack'>\n                        {\n                            !inProgress ?\n                                <CloseIcon className=\"close-otp\" onClick={(e : any) => {\n                                    if (!inProgress) { props.cancelOtp() }\n                                }} /> :\n                                null\n                        }\n\n                    </div>\n                    <div className=\"otp-title\">\n                        Enter OTP\n                    </div>\n                    <div className=\"otp-input\">\n                        {Array(6).fill(true).map((v, i) => {\n                            return <input\n                                className='otp-inp'\n                                key={i}\n                                ref={focuses[i]}\n                                id={`otp-inp-${i}`}\n                                // autoFocus={i == focusOn}\n                                onClick={e => onClic(i)}\n                                onKeyPress={e => onKeyU(e, i)}\n                                value={values[i]}\n                                onKeyDown={e => onKeyP(e, i)}\n                                onChange={e => onChang(e, i)}\n                                onFocus={e => e.target.select()}\n                                autoFocus={i === 0}\n                            />\n                        })}\n                    </div>\n                    <div className=\"otp-btns\">\n                        <span className='otp-verify'>\n                            <Button\n                                variant=\"contained\"\n                                className={isEnabled ? 'otp-verify-btn' : 'otp-verify-btn bg-empty-dis'}\n                                onClick={verify}\n                                disabled={!isEnabled}\n                            >\n                                Verify\n                                <CheckCircleOutlineIcon className=\"icon\" />\n                            </Button>\n                        </span>\n                        <span className='otp-resend'>\n                            <Button\n                                variant=\"contained\"\n                                className={!inProgress ? 'otp-resend-btn' : 'otp-resend-btn bg-empty-dis'}\n                                disabled={inProgress}\n                                onClick={resend}\n                            >\n                                Resend\n                                <ReplayIcon className=\"icon\" />\n                            </Button>\n                        </span>\n                    </div>\n                </div>\n            </Dialog>\n        </div>)\n}","/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/chat-section/chat-components/chat-friends/chat-friends.tsx",[],"/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/chat-section/chat-components/message-area/message-area.render.tsx",["150"],"import React from 'react'\nimport defaultPic from '../../../../../../assets/emptyProfile.webp'\nimport './message-area.scss'\nimport { MoreVertIcon, TextField } from '../../../../../../shared/material-modules'\nexport default function MessageAreaRender() {\n    return (\n        <div className=\"message-area-render\">\n            <div className=\"message-profile\">\n                <div className=\"selected-pro\">\n                    <div className=\"profile--pic\">\n                        <img src={defaultPic} className=\"d_ps\" />\n                    </div>\n                    <div className=\"profile--name\">\n                        Mukul\n                    </div>\n                </div>\n                <MoreVertIcon/>\n            </div>\n            <div className=\"messages-area\">\n                {\n                    Array(20).fill(1).map(v => {\n                        return <>\n                        <div className={ Math.floor(Math.random()*100) % 2 === 0 ? 'message-area-friend' : 'message-area-me' }>\n                            <p>\n                                Lorem ipsum dolor, sit amet consectetur adipisicing\n                                Lorem ipsum dolor, sit amet consectetur adipisicing\n                                Lorem ipsum dolor, sit amet consectetur adipisicing\n                                Lorem ipsum dolor, sit amet consectetur adipisicing\n                            </p>\n                        </div>\n                        {/* <div className=\"message-area-friend\">\n                            <p>\n                                Lorem ipsum dolor, sit amet consectetur adipisicing\n                            </p>\n                        </div> */}\n                        </>\n                    })\n                }\n            </div>\n            <div className=\"send-message-area\">\n                <TextField \n                    id=\"outlined-basic\" \n                    variant=\"outlined\" \n                    rowsMax={2} \n                    multiline\n                    placeholder=\"Type a message\"\n                    className=\"text-msg-inp\"\n                />\n                <button className=\"default-input\">Send</button>\n            </div>\n        </div>\n    )\n}\n","/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/chat-section/chat-components/chat-friends/chat-friends-render.tsx",[],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":7,"column":5,"nodeType":"157","messageId":"158","endLine":7,"endColumn":15},{"ruleId":"159","severity":1,"message":"160","line":39,"column":7,"nodeType":"161","endLine":39,"endColumn":9,"suggestions":"162"},{"ruleId":"155","severity":1,"message":"163","line":5,"column":5,"nodeType":"157","messageId":"158","endLine":5,"endColumn":18},{"ruleId":"155","severity":1,"message":"164","line":7,"column":10,"nodeType":"157","messageId":"158","endLine":7,"endColumn":21},{"ruleId":"159","severity":1,"message":"165","line":69,"column":8,"nodeType":"161","endLine":69,"endColumn":10,"suggestions":"166"},{"ruleId":"155","severity":1,"message":"167","line":5,"column":8,"nodeType":"157","messageId":"158","endLine":5,"endColumn":13},{"ruleId":"159","severity":1,"message":"168","line":66,"column":40,"nodeType":"161","endLine":66,"endColumn":42,"suggestions":"169"},{"ruleId":"170","severity":1,"message":"171","line":24,"column":29,"nodeType":"172","endLine":24,"endColumn":137},{"ruleId":"155","severity":1,"message":"173","line":6,"column":23,"nodeType":"157","messageId":"158","endLine":6,"endColumn":35},{"ruleId":"155","severity":1,"message":"156","line":2,"column":16,"nodeType":"157","messageId":"158","endLine":2,"endColumn":26},{"ruleId":"155","severity":1,"message":"174","line":4,"column":8,"nodeType":"157","messageId":"158","endLine":4,"endColumn":14},{"ruleId":"155","severity":1,"message":"175","line":2,"column":40,"nodeType":"157","messageId":"158","endLine":2,"endColumn":50},{"ruleId":"170","severity":1,"message":"171","line":44,"column":33,"nodeType":"172","endLine":44,"endColumn":59},{"ruleId":"170","severity":1,"message":"171","line":73,"column":33,"nodeType":"172","endLine":73,"endColumn":59},{"ruleId":"170","severity":1,"message":"171","line":102,"column":33,"nodeType":"172","endLine":102,"endColumn":59},{"ruleId":"176","severity":1,"message":"177","line":31,"column":99,"nodeType":"178","messageId":"179","endLine":31,"endColumn":100,"fix":"180"},{"ruleId":"176","severity":1,"message":"177","line":42,"column":19,"nodeType":"178","messageId":"179","endLine":42,"endColumn":20,"fix":"181"},{"ruleId":"155","severity":1,"message":"182","line":10,"column":21,"nodeType":"157","messageId":"158","endLine":10,"endColumn":31},{"ruleId":"155","severity":1,"message":"183","line":12,"column":24,"nodeType":"157","messageId":"158","endLine":12,"endColumn":37},{"ruleId":"155","severity":1,"message":"184","line":25,"column":11,"nodeType":"157","messageId":"158","endLine":25,"endColumn":20},{"ruleId":"170","severity":1,"message":"171","line":11,"column":25,"nodeType":"172","endLine":11,"endColumn":66},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"@typescript-eslint/no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["187"],"'BrowserRouter' is defined but never used.","'IToastStore' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["188"],"'Utils' is defined but never used.","React Hook useEffect has a missing dependency: 'getProfile'. Either include it or remove the dependency array.",["189"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setFriendRef' is assigned a value but never used.","'Routes' is defined but never used.","'Pagination' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"190","text":"191"},{"range":"192","text":"191"},"'setFocuses' is assigned a value but never used.","'setInProgress' is assigned a value but never used.","'resendOtp' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},[1585,1604]," \n                .",[2217,2236],"Update the dependencies array to be: [dispatch]",{"range":"199","text":"200"},"Update the dependencies array to be: [history]",{"range":"201","text":"202"},"Update the dependencies array to be: [getProfile]",{"range":"203","text":"204"},[1485,1487],"[dispatch]",[3615,3617],"[history]",[3339,3341],"[getProfile]"]