[{"/home/mukul/mukul/messenger/messenger-client/src/index.tsx":"1","/home/mukul/mukul/messenger/messenger-client/src/components/main.tsx":"2","/home/mukul/mukul/messenger/messenger-client/src/components/home/home.tsx":"3","/home/mukul/mukul/messenger/messenger-client/src/components/home/home.render.tsx":"4","/home/mukul/mukul/messenger/messenger-client/src/components/login/login.tsx":"5","/home/mukul/mukul/messenger/messenger-client/src/components/login/login.render.tsx":"6","/home/mukul/mukul/messenger/messenger-client/src/shared/material-modules.ts":"7","/home/mukul/mukul/messenger/messenger-client/src/shared/utils.ts":"8","/home/mukul/mukul/messenger/messenger-client/src/redux/index.ts":"9","/home/mukul/mukul/messenger/messenger-client/src/utils/routes.ts":"10","/home/mukul/mukul/messenger/messenger-client/src/components/profile/profile.tsx":"11","/home/mukul/mukul/messenger/messenger-client/src/components/thridpartylogin/thridpartylogin.tsx":"12","/home/mukul/mukul/messenger/messenger-client/src/shared/components/toast/toast.tsx":"13","/home/mukul/mukul/messenger/messenger-client/src/redux/reducers.ts":"14","/home/mukul/mukul/messenger/messenger-client/src/components/profile/profile.render.tsx":"15","/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/navbar/navbar.tsx":"16","/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/chat-section/chat.tsx":"17","/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/requests/request.tsx":"18","/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/chat-section/chat.render.tsx":"19","/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/navbar/navbar.render.tsx":"20","/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/requests/requestRender.tsx":"21","/home/mukul/mukul/messenger/messenger-client/src/redux/actions.ts":"22","/home/mukul/mukul/messenger/messenger-client/src/shared/components/backdrop/backdrop.tsx":"23","/home/mukul/mukul/messenger/messenger-client/src/utils/server.ts":"24","/home/mukul/mukul/messenger/messenger-client/src/utils/server-routes.ts":"25","/home/mukul/mukul/messenger/messenger-client/src/shared/components/otp/otp.tsx":"26","/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/chat-section/chat-components/chat-friends/chat-friends.tsx":"27","/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/chat-section/chat-components/message-area/message-area.render.tsx":"28","/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/chat-section/chat-components/chat-friends/chat-friends-render.tsx":"29","/home/mukul/mukul/messenger/messenger-client/src/shared/localstorage.service.ts":"30"},{"size":345,"mtime":1612455113719,"results":"31","hashOfConfig":"32"},{"size":2389,"mtime":1612645937888,"results":"33","hashOfConfig":"32"},{"size":141,"mtime":1612696482742,"results":"34","hashOfConfig":"32"},{"size":990,"mtime":1612902547587,"results":"35","hashOfConfig":"32"},{"size":4112,"mtime":1612904350948,"results":"36","hashOfConfig":"32"},{"size":3591,"mtime":1612465092827,"results":"37","hashOfConfig":"32"},{"size":3139,"mtime":1612890091433,"results":"38","hashOfConfig":"32"},{"size":2189,"mtime":1612904233785,"results":"39","hashOfConfig":"32"},{"size":269,"mtime":1612459925845,"results":"40","hashOfConfig":"32"},{"size":416,"mtime":1612902507826,"results":"41","hashOfConfig":"32"},{"size":3501,"mtime":1612904961383,"results":"42","hashOfConfig":"32"},{"size":1286,"mtime":1612460483388,"results":"43","hashOfConfig":"32"},{"size":1245,"mtime":1612645968517,"results":"44","hashOfConfig":"32"},{"size":903,"mtime":1612468430685,"results":"45","hashOfConfig":"32"},{"size":3488,"mtime":1612552525843,"results":"46","hashOfConfig":"32"},{"size":149,"mtime":1612456651219,"results":"47","hashOfConfig":"32"},{"size":141,"mtime":1612456571511,"results":"48","hashOfConfig":"32"},{"size":152,"mtime":1612456690327,"results":"49","hashOfConfig":"32"},{"size":1012,"mtime":1612890480859,"results":"50","hashOfConfig":"32"},{"size":1789,"mtime":1612903059757,"results":"51","hashOfConfig":"32"},{"size":5016,"mtime":1612899756136,"results":"52","hashOfConfig":"32"},{"size":213,"mtime":1612459784061,"results":"53","hashOfConfig":"32"},{"size":710,"mtime":1612460526974,"results":"54","hashOfConfig":"32"},{"size":4142,"mtime":1612904695440,"results":"55","hashOfConfig":"32"},{"size":823,"mtime":1612466133002,"results":"56","hashOfConfig":"32"},{"size":4850,"mtime":1612384440450,"results":"57","hashOfConfig":"32"},{"size":170,"mtime":1612649642511,"results":"58","hashOfConfig":"32"},{"size":2214,"mtime":1612886800670,"results":"59","hashOfConfig":"32"},{"size":1504,"mtime":1612890479591,"results":"60","hashOfConfig":"32"},{"size":936,"mtime":1612904893329,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1ailxs8",{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mukul/mukul/messenger/messenger-client/src/index.tsx",[],["129","130"],"/home/mukul/mukul/messenger/messenger-client/src/components/main.tsx",["131","132"],"import React, { useEffect, useState } from 'react';\nimport {\n    BrowserRouter,\n    Switch,\n    Route,\n    Redirect,\n    useHistory,\n} from \"react-router-dom\";\nimport Routes from '../utils/routes';\nimport Home from './home/home'\nimport Login from './login/login'\nimport './main.scss'\nimport Profile from './profile/profile';\nimport { ThirdPartyLogin } from './thridpartylogin/thridpartylogin';\nimport ToastMessage from '../shared/components/toast/toast';\nimport BackdropLoader from '../shared/components/backdrop/backdrop';\nimport { toastMessage } from '../shared/utils';\nimport { useDispatch } from 'react-redux';\nimport actions from '../redux/actions';\nimport API from '../utils/server';\n\nexport default function Main() {\n    const defaultRedirect = () => <Redirect to={Routes.login} />;\n    const [intercepted, setIntercept] = useState(false)\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch({ type : actions.SHOW_LOADER })\n        API.initApiInterceptor();\n        toastMessage.subscribe((data) => {\n            if (data.logout) {\n                localStorage.clear();\n                dispatch({ type : actions.STORE_USER, data : { name : null, image : null } })\n                setTimeout(() => window.location.href = Routes.default, 2000)\n            }\n            dispatch({ type : actions.TOAST_MESSAGE, data : { message : data.message, type : data.type } })\n        })\n        setIntercept(true)\n        dispatch({ type : actions.STOP_LOADER })\n    },[])\n    return (\n        <>\n            {\n                intercepted ? \n                <>\n                    <BackdropLoader/>\n                    <ToastMessage/>\n                    <BrowserRouter>\n                        <Switch>\n                            <Route path={Routes.login} component={Login}></Route>\n                            <Route path={Routes.home} component={Home}></Route>\n                            <Route path={Routes.profile} component={Profile}></Route>\n                            <Route path={Routes.thridPartyLogin} component={ThirdPartyLogin}></Route>\n                            <Route path={Routes.notFound} component={defaultRedirect}></Route>\n                            <Route path={Routes.default} component={defaultRedirect}></Route>\n                        </Switch>\n                    </BrowserRouter>\n                </>:null\n            }\n        </>\n    )\n}\n","/home/mukul/mukul/messenger/messenger-client/src/components/home/home.tsx",[],"/home/mukul/mukul/messenger/messenger-client/src/components/home/home.render.tsx",["133"],"/home/mukul/mukul/messenger/messenger-client/src/components/login/login.tsx",["134","135"],"/home/mukul/mukul/messenger/messenger-client/src/components/login/login.render.tsx",[],"/home/mukul/mukul/messenger/messenger-client/src/shared/material-modules.ts",[],"/home/mukul/mukul/messenger/messenger-client/src/shared/utils.ts",[],"/home/mukul/mukul/messenger/messenger-client/src/redux/index.ts",[],"/home/mukul/mukul/messenger/messenger-client/src/utils/routes.ts",[],"/home/mukul/mukul/messenger/messenger-client/src/components/profile/profile.tsx",["136","137"],"/home/mukul/mukul/messenger/messenger-client/src/components/thridpartylogin/thridpartylogin.tsx",[],"/home/mukul/mukul/messenger/messenger-client/src/shared/components/toast/toast.tsx",[],"/home/mukul/mukul/messenger/messenger-client/src/redux/reducers.ts",[],"/home/mukul/mukul/messenger/messenger-client/src/components/profile/profile.render.tsx",["138"],"import React, { createRef } from 'react';\nimport './profile.scss'\nimport emptyProfile from '../../assets/emptyProfile.webp';\nimport { TextField, Button, CircularProgress } from '../../shared/material-modules';\nexport default function ProfileRenderer(props: any) {\n    const { loading, name, user, setForm, updateProfile, blob, profileTouched } = props;\n    const fileInp = (createRef() as any);\n    const setProfileImage = (evt: any) => {\n        var f = evt.target.files[0];\n        if (f) {\n            const r = new FileReader();\n            r.onload = (e: any) => setForm({ blob: e.target.result, profileTouched: { ...profileTouched, blob: true } })\n            r.readAsDataURL(f);\n        }\n    }\n    return (\n        <>\n            <input type='file' hidden id='hidden-file' ref={fileInp} onChange={setProfileImage} />\n            <div className=\"profile-layout\">\n                <p id='heading'>My Profile</p>\n                <div className=\"profile\">\n                    <div className=\"profile-form\">\n                        <div className=\"profile-img\">\n                            <img src={blob ? blob : emptyProfile} width=\"100px\" height=\"100px\" onClick={e => fileInp.current.click()} />\n                            {\n                                blob ?\n                                    <div className=\"remove-img\" onClick={e => setForm({ blob: null, profileTouched: { ...profileTouched, blob: true } })}>x</div>\n                                    : null\n                            }\n                        </div>\n                        <div className=\"profile-name form-inp\">\n                            <div id='inp-text'><strong>Name</strong></div>\n                            <TextField\n                                id=\"outlined-basic\"\n                                placeholder=\"Name\"\n                                variant=\"outlined\"\n                                className=\"input-text\"\n                                disabled={loading}\n                                value={name || ''}\n                                onChange={e => setForm({ name: e.target.value, profileTouched: { ...profileTouched, name: true } })}\n                            />\n                        </div>\n                        <div className=\"profile-emailMobile form-inp\">\n                            <div id='inp-text'><strong>Email or Mobile</strong></div>\n                            <TextField\n                                id=\"outlined-basic\"\n                                placeholder=\"Email or Mobile\"\n                                variant=\"outlined\"\n                                className=\"input-text\"\n                                disabled={true}\n                                value={user || ''}\n                            />\n                        </div>\n                        <div className=\"submit-profile\">\n                            <Button variant=\"contained\" color=\"primary\"\n                                disabled={loading}\n                                onClick={e => updateProfile()}\n                            >\n                                {\n                                    loading ?\n                                        <CircularProgress className=\"submit-profile__loader\" /> :\n                                        'Submit'\n                                }\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}","/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/navbar/navbar.tsx",[],"/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/chat-section/chat.tsx",[],"/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/requests/request.tsx",[],"/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/chat-section/chat.render.tsx",["139"],"import React, { createRef, useState } from 'react'\nimport ChatFriends from './chat-components/chat-friends/chat-friends'\nimport MessageAreaRender from './chat-components/message-area/message-area.render'\nimport './chat.scss'\nexport default function ChatRender() {\n    const [friendRef, setFriendRef] = useState<any>(createRef())\n    return (\n        <div className=\"chat-render\">\n            <div className=\"chat-render--chatfriends\" id='chat-friends' ref={friendRef}>\n                <ChatFriends/>\n            </div>\n            <div className=\"chat-render--chatfriends-mob\" onClick={() => friendRef.current.classList.toggle('chat-render-showFriends')}>\n                <div>F</div>\n                <div>R</div>\n                <div>I</div>\n                <div>E</div>\n                <div>N</div>\n                <div>D</div>\n                <div>S</div>\n            </div>\n            <div className=\"chat-render--messagearea\">\n                <MessageAreaRender/>\n            </div>\n        </div>\n    )\n}\n","/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/navbar/navbar.render.tsx",["140","141"],"/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/requests/requestRender.tsx",["142","143","144","145"],"import React, { useState } from 'react'\nimport { SearchIcon, QueryBuilderIcon, Pagination, SendIcon, CheckCircleOutlineIcon, CancelIcon, TextField } from '../../../../shared/material-modules'\nimport './request.scss'\nimport emptyProfile from '../../../../assets/emptyProfile.webp'\nexport default function RequestRender() {\n    const [requestNav, setRequestNav] = useState<number>(1)\n    return (\n        <div className=\"request-render\">\n            <div className=\"request-render--nav\">\n                <div className={requestNav === 1 ? 'request-nav-item request-active-nav' : 'request-nav-item'} onClick={() => setRequestNav(1)}>\n                    <SendIcon/>\n                    <span>Sent Requests</span>\n                </div>\n                <div className={requestNav === 2 ? 'request-nav-item request-active-nav' : 'request-nav-item'} onClick={() => setRequestNav(2)}>\n                    <SearchIcon/>\n                    <span>Search</span>\n                </div>\n                <div className={requestNav === 3 ? 'request-nav-item request-active-nav' : 'request-nav-item'} onClick={() => setRequestNav(3)}>\n                    <QueryBuilderIcon/>\n                    <span>Pending Requests</span>\n                </div>\n            </div>\n            <div className=\"request-content\">\n                { requestNav === 1 ? <SentRequests/> : null }\n                { requestNav === 2 ? <>\n                    <TextField className=\"request-search-inp\" id=\"outlined-basic\" variant=\"outlined\" placeholder=\"Enter User\"/>\n                    <SearchRequests/>\n                </> : null }\n                { requestNav === 3 ? <PendingRequests/> : null }\n            </div>\n        </div>\n    )\n}\n\nfunction SentRequests(){\n    return(\n        <div className=\"request-content--SentRequests\">\n           {\n               Array(212).fill(1).map(v => {\n                   return (\n                        <div className=\"sentrequests-item\">\n                        <div className=\"request-profile\">\n                            <div className=\"requestitem-profile\">\n                                <img src={emptyProfile} />\n                            </div>\n                            <div className=\"requestitem-profilename\">\n                                Mukul Dutt\n                            </div>\n                        </div>\n                        <div className=\"requestitem-actions\">\n                            <button>\n                                <CancelIcon/>\n                                <span>Revoke</span>\n                            </button>\n                        </div>\n                    </div>\n                   )\n               })\n           }\n        </div>\n    )\n}\n\nfunction SearchRequests(){\n    return(\n        <div className=\"request-content--SentRequests request-content--SentRequests-min\">\n           {\n               Array(122).fill(1).map(v => {\n                   return (\n                        <div className=\"sentrequests-item\">\n                        <div className=\"request-profile\">\n                            <div className=\"requestitem-profile\">\n                                <img src={emptyProfile} />\n                            </div>\n                            <div className=\"requestitem-profilename\">\n                                Mukul Dutt\n                            </div>\n                        </div>\n                        <div className=\"requestitem-actions\">\n                            <button className=\"send-r-btn\">\n                                <SendIcon/>\n                                <span>Send Request</span>\n                            </button>\n                        </div>\n                    </div>\n                   )\n               })\n           }\n        </div>\n    )\n}\n\nfunction PendingRequests(){\n    return(\n        <div className=\"request-content--SentRequests\">\n           {\n               Array(12).fill(1).map(v => {\n                   return (\n                        <div className=\"sentrequests-item\">\n                        <div className=\"request-profile\">\n                            <div className=\"requestitem-profile\">\n                                <img src={emptyProfile} />\n                            </div>\n                            <div className=\"requestitem-profilename\">\n                                Mukul Dutt\n                            </div>\n                        </div>\n                        <div className=\"requestitem-actions\">\n                            <button className=\"accept-r-btn\">\n                                <CheckCircleOutlineIcon/>\n                                <span>Accept</span>\n                            </button>\n                            <button className=\"reject-r-btn\">\n                                <CancelIcon/>\n                                <span>Reject</span>\n                            </button>\n                        </div>\n                    </div>\n                   )\n               })\n           }\n        </div>\n    )\n}","/home/mukul/mukul/messenger/messenger-client/src/redux/actions.ts",[],"/home/mukul/mukul/messenger/messenger-client/src/shared/components/backdrop/backdrop.tsx",[],"/home/mukul/mukul/messenger/messenger-client/src/utils/server.ts",["146","147"],"/home/mukul/mukul/messenger/messenger-client/src/utils/server-routes.ts",[],"/home/mukul/mukul/messenger/messenger-client/src/shared/components/otp/otp.tsx",["148","149","150"],"import React, { createRef, useEffect, useState } from 'react';\nimport './otp.scss'\nimport {\n    Dialog, Button, ReplayIcon, CloseIcon, CheckCircleOutlineIcon\n} from '../../material-modules';\nexport default function Otp(props: any) {\n    const { verifyOtp, resend } = props;\n    const [focusOn, setFocusOn] = useState(0)\n    const [values, setValues] = useState(({ 0: '', 1: '', 2: '', 3: '', 4: '', 5: '' } as any))\n    const [focuses, setFocuses] = useState((Array(6).fill(true).map(_ => createRef()) as any))\n    const [otpValid, setOtpValid] = useState(('' as any))\n    const [inProgress, setInProgress] = useState(false)\n    const onClic = (e: any) => {\n        setFocusOn(e)\n    }\n    useEffect(() => {\n        const otp = Object.values(values).map(v => v).join('')\n        if (`${otp}`.length === 6) {\n            setOtpValid(otp)\n            return;\n        }\n        setOtpValid(null)\n    }, [values])\n\n    const resendOtp = (e: any) => {\n    }\n\n    const onKeyU = (e: any, i: number) => {\n        if (e.key <= 9 || e.key >= 0) {\n            if (i < 5) {\n                setFocusOn(i + 1)\n                focuses[i + 1].current.focus()\n            }\n        }\n    }\n    const verify = () => {\n        if (!otpValid || inProgress) { return }\n        verifyOtp(otpValid);\n    }\n    const onKeyP = (e: any, i: number) => {\n        if (e.keyCode === 13) {\n            verify()\n            return;\n        }\n        if (e.keyCode === 8 && (focusOn) > 0) {\n            const cV: any = { ...values }\n            cV[i] = ''\n            setValues(cV)\n            if (values[i] === '') {\n                setFocusOn(focusOn - 1)\n                focuses[focusOn - 1].current.focus()\n            }\n        }\n    }\n\n    const onChang = (e: any, i: number) => {\n        const val = `${e.target.value}`;\n        if (!isNaN(Number(val))) {\n            const cV: any = { ...values }\n            cV[i] = val.length === 1 ? val : val.charAt(val.length - 1)\n            setValues(cV)\n        }\n    }\n    const isEnabled = otpValid && !inProgress\n    return (\n        <div className='otp-parent'>\n            <Dialog\n                open={true}>\n                <div className='otp-modal'>\n                    <div className='goBack'>\n                        {\n                            !inProgress ?\n                                <CloseIcon className=\"close-otp\" onClick={(e : any) => {\n                                    if (!inProgress) { props.cancelOtp() }\n                                }} /> :\n                                null\n                        }\n\n                    </div>\n                    <div className=\"otp-title\">\n                        Enter OTP\n                    </div>\n                    <div className=\"otp-input\">\n                        {Array(6).fill(true).map((v, i) => {\n                            return <input\n                                className='otp-inp'\n                                key={i}\n                                ref={focuses[i]}\n                                id={`otp-inp-${i}`}\n                                // autoFocus={i == focusOn}\n                                onClick={e => onClic(i)}\n                                onKeyPress={e => onKeyU(e, i)}\n                                value={values[i]}\n                                onKeyDown={e => onKeyP(e, i)}\n                                onChange={e => onChang(e, i)}\n                                onFocus={e => e.target.select()}\n                                autoFocus={i === 0}\n                            />\n                        })}\n                    </div>\n                    <div className=\"otp-btns\">\n                        <span className='otp-verify'>\n                            <Button\n                                variant=\"contained\"\n                                className={isEnabled ? 'otp-verify-btn' : 'otp-verify-btn bg-empty-dis'}\n                                onClick={verify}\n                                disabled={!isEnabled}\n                            >\n                                Verify\n                                <CheckCircleOutlineIcon className=\"icon\" />\n                            </Button>\n                        </span>\n                        <span className='otp-resend'>\n                            <Button\n                                variant=\"contained\"\n                                className={!inProgress ? 'otp-resend-btn' : 'otp-resend-btn bg-empty-dis'}\n                                disabled={inProgress}\n                                onClick={resend}\n                            >\n                                Resend\n                                <ReplayIcon className=\"icon\" />\n                            </Button>\n                        </span>\n                    </div>\n                </div>\n            </Dialog>\n        </div>)\n}","/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/chat-section/chat-components/chat-friends/chat-friends.tsx",[],"/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/chat-section/chat-components/message-area/message-area.render.tsx",["151"],"import React from 'react'\nimport defaultPic from '../../../../../../assets/emptyProfile.webp'\nimport './message-area.scss'\nimport { MoreVertIcon, TextField } from '../../../../../../shared/material-modules'\nexport default function MessageAreaRender() {\n    return (\n        <div className=\"message-area-render\">\n            <div className=\"message-profile\">\n                <div className=\"selected-pro\">\n                    <div className=\"profile--pic\">\n                        <img src={defaultPic} className=\"d_ps\" />\n                    </div>\n                    <div className=\"profile--name\">\n                        Mukul\n                    </div>\n                </div>\n                <MoreVertIcon/>\n            </div>\n            <div className=\"messages-area\">\n                {\n                    Array(20).fill(1).map(v => {\n                        return <>\n                        <div className={ Math.floor(Math.random()*100) % 2 === 0 ? 'message-area-friend' : 'message-area-me' }>\n                            <p>\n                                Lorem ipsum dolor, sit amet consectetur adipisicing\n                                Lorem ipsum dolor, sit amet consectetur adipisicing\n                                Lorem ipsum dolor, sit amet consectetur adipisicing\n                                Lorem ipsum dolor, sit amet consectetur adipisicing\n                            </p>\n                        </div>\n                        {/* <div className=\"message-area-friend\">\n                            <p>\n                                Lorem ipsum dolor, sit amet consectetur adipisicing\n                            </p>\n                        </div> */}\n                        </>\n                    })\n                }\n            </div>\n            <div className=\"send-message-area\">\n                <TextField \n                    id=\"outlined-basic\" \n                    variant=\"outlined\" \n                    rowsMax={2} \n                    multiline\n                    placeholder=\"Type a message\"\n                    className=\"text-msg-inp\"\n                />\n                <button className=\"default-input\">Send</button>\n            </div>\n        </div>\n    )\n}\n","/home/mukul/mukul/messenger/messenger-client/src/components/home/home-components/chat-section/chat-components/chat-friends/chat-friends-render.tsx",[],"/home/mukul/mukul/messenger/messenger-client/src/shared/localstorage.service.ts",[],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":7,"column":5,"nodeType":"158","messageId":"159","endLine":7,"endColumn":15},{"ruleId":"160","severity":1,"message":"161","line":39,"column":7,"nodeType":"162","endLine":39,"endColumn":9,"suggestions":"163"},{"ruleId":"156","severity":1,"message":"164","line":5,"column":5,"nodeType":"158","messageId":"159","endLine":5,"endColumn":18},{"ruleId":"156","severity":1,"message":"165","line":7,"column":10,"nodeType":"158","messageId":"159","endLine":7,"endColumn":21},{"ruleId":"160","severity":1,"message":"166","line":70,"column":8,"nodeType":"162","endLine":70,"endColumn":10,"suggestions":"167"},{"ruleId":"156","severity":1,"message":"168","line":5,"column":8,"nodeType":"158","messageId":"159","endLine":5,"endColumn":13},{"ruleId":"160","severity":1,"message":"169","line":67,"column":40,"nodeType":"162","endLine":67,"endColumn":42,"suggestions":"170"},{"ruleId":"171","severity":1,"message":"172","line":24,"column":29,"nodeType":"173","endLine":24,"endColumn":137},{"ruleId":"156","severity":1,"message":"174","line":6,"column":23,"nodeType":"158","messageId":"159","endLine":6,"endColumn":35},{"ruleId":"156","severity":1,"message":"157","line":2,"column":16,"nodeType":"158","messageId":"159","endLine":2,"endColumn":26},{"ruleId":"156","severity":1,"message":"175","line":4,"column":8,"nodeType":"158","messageId":"159","endLine":4,"endColumn":14},{"ruleId":"156","severity":1,"message":"176","line":2,"column":40,"nodeType":"158","messageId":"159","endLine":2,"endColumn":50},{"ruleId":"171","severity":1,"message":"172","line":44,"column":33,"nodeType":"173","endLine":44,"endColumn":59},{"ruleId":"171","severity":1,"message":"172","line":73,"column":33,"nodeType":"173","endLine":73,"endColumn":59},{"ruleId":"171","severity":1,"message":"172","line":102,"column":33,"nodeType":"173","endLine":102,"endColumn":59},{"ruleId":"177","severity":1,"message":"178","line":32,"column":106,"nodeType":"179","messageId":"180","endLine":32,"endColumn":107,"fix":"181"},{"ruleId":"177","severity":1,"message":"178","line":43,"column":19,"nodeType":"179","messageId":"180","endLine":43,"endColumn":20,"fix":"182"},{"ruleId":"156","severity":1,"message":"183","line":10,"column":21,"nodeType":"158","messageId":"159","endLine":10,"endColumn":31},{"ruleId":"156","severity":1,"message":"184","line":12,"column":24,"nodeType":"158","messageId":"159","endLine":12,"endColumn":37},{"ruleId":"156","severity":1,"message":"185","line":25,"column":11,"nodeType":"158","messageId":"159","endLine":25,"endColumn":20},{"ruleId":"171","severity":1,"message":"172","line":11,"column":25,"nodeType":"173","endLine":11,"endColumn":66},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"@typescript-eslint/no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["188"],"'BrowserRouter' is defined but never used.","'IToastStore' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["189"],"'Utils' is defined but never used.","React Hook useEffect has a missing dependency: 'getProfile'. Either include it or remove the dependency array.",["190"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setFriendRef' is assigned a value but never used.","'Routes' is defined but never used.","'Pagination' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"191","text":"192"},{"range":"193","text":"192"},"'setFocuses' is assigned a value but never used.","'setInProgress' is assigned a value but never used.","'resendOtp' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},[1661,1680]," \n                .",[2318,2337],"Update the dependencies array to be: [dispatch]",{"range":"200","text":"201"},"Update the dependencies array to be: [history]",{"range":"202","text":"203"},"Update the dependencies array to be: [getProfile]",{"range":"204","text":"205"},[1485,1487],"[dispatch]",[3693,3695],"[history]",[3403,3405],"[getProfile]"]