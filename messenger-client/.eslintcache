[{"/home/mukul_123/Desktop/messenger/messenger-client/src/index.tsx":"1","/home/mukul_123/Desktop/messenger/messenger-client/src/components/main.tsx":"2","/home/mukul_123/Desktop/messenger/messenger-client/src/redux/index.ts":"3","/home/mukul_123/Desktop/messenger/messenger-client/src/redux/actions.ts":"4","/home/mukul_123/Desktop/messenger/messenger-client/src/utils/routes.ts":"5","/home/mukul_123/Desktop/messenger/messenger-client/src/shared/localstorage.service.ts":"6","/home/mukul_123/Desktop/messenger/messenger-client/src/shared/utils.ts":"7","/home/mukul_123/Desktop/messenger/messenger-client/src/utils/server.ts":"8","/home/mukul_123/Desktop/messenger/messenger-client/src/components/home/home.tsx":"9","/home/mukul_123/Desktop/messenger/messenger-client/src/components/login/login.tsx":"10","/home/mukul_123/Desktop/messenger/messenger-client/src/components/profile/profile.tsx":"11","/home/mukul_123/Desktop/messenger/messenger-client/src/components/thridpartylogin/thridpartylogin.tsx":"12","/home/mukul_123/Desktop/messenger/messenger-client/src/shared/components/backdrop/backdrop.tsx":"13","/home/mukul_123/Desktop/messenger/messenger-client/src/shared/components/toast/toast.tsx":"14","/home/mukul_123/Desktop/messenger/messenger-client/src/shared/components/protected-route/protected-route.tsx":"15","/home/mukul_123/Desktop/messenger/messenger-client/src/redux/reducers.ts":"16","/home/mukul_123/Desktop/messenger/messenger-client/src/utils/server-routes.ts":"17","/home/mukul_123/Desktop/messenger/messenger-client/src/shared/material-modules.ts":"18","/home/mukul_123/Desktop/messenger/messenger-client/src/components/home/home.render.tsx":"19","/home/mukul_123/Desktop/messenger/messenger-client/src/components/login/login.render.tsx":"20","/home/mukul_123/Desktop/messenger/messenger-client/src/components/profile/profile.render.tsx":"21","/home/mukul_123/Desktop/messenger/messenger-client/src/shared/components/protected-route/initalizer.tsx":"22","/home/mukul_123/Desktop/messenger/messenger-client/src/shared/components/otp/otp.tsx":"23","/home/mukul_123/Desktop/messenger/messenger-client/src/shared/services/messages.reducer.ts":"24","/home/mukul_123/Desktop/messenger/messenger-client/src/components/home/socket.context.tsx":"25","/home/mukul_123/Desktop/messenger/messenger-client/src/components/home/home.router.tsx":"26","/home/mukul_123/Desktop/messenger/messenger-client/src/components/home/home-components/navbar/navbar.tsx":"27","/home/mukul_123/Desktop/messenger/messenger-client/src/components/home/home-components/chat-section/chat.tsx":"28","/home/mukul_123/Desktop/messenger/messenger-client/src/components/home/home-components/requests/request.tsx":"29","/home/mukul_123/Desktop/messenger/messenger-client/src/components/home/home-components/chat-section/chat.render.tsx":"30","/home/mukul_123/Desktop/messenger/messenger-client/src/components/home/home-components/navbar/navbar.render.tsx":"31","/home/mukul_123/Desktop/messenger/messenger-client/src/components/home/home-components/chat-section/chat-components/message-area/message-area.tsx":"32","/home/mukul_123/Desktop/messenger/messenger-client/src/components/home/home-components/chat-section/chat-components/chat-friends/chat-friends.tsx":"33","/home/mukul_123/Desktop/messenger/messenger-client/src/components/home/home-components/chat-section/chat-components/chat-friends/chat-friends-render.tsx":"34","/home/mukul_123/Desktop/messenger/messenger-client/src/components/home/home-components/chat-section/chat-components/message-area/message-area.render.tsx":"35","/home/mukul_123/Desktop/messenger/messenger-client/src/shared/services/request.search.tsx":"36","/home/mukul_123/Desktop/messenger/messenger-client/src/shared/services/request.sent.tsx":"37","/home/mukul_123/Desktop/messenger/messenger-client/src/shared/services/request.incoming.tsx":"38","/home/mukul_123/Desktop/messenger/messenger-client/src/components/home/home-components/requests/requestRender.tsx":"39"},{"size":345,"mtime":1616871771474,"results":"40","hashOfConfig":"41"},{"size":2855,"mtime":1616952904014,"results":"42","hashOfConfig":"41"},{"size":414,"mtime":1617306629600,"results":"43","hashOfConfig":"41"},{"size":750,"mtime":1617306540243,"results":"44","hashOfConfig":"41"},{"size":416,"mtime":1616871771474,"results":"45","hashOfConfig":"41"},{"size":891,"mtime":1616945198037,"results":"46","hashOfConfig":"41"},{"size":2361,"mtime":1616871771474,"results":"47","hashOfConfig":"41"},{"size":6039,"mtime":1617126852233,"results":"48","hashOfConfig":"41"},{"size":1802,"mtime":1616953554538,"results":"49","hashOfConfig":"41"},{"size":4078,"mtime":1617127221354,"results":"50","hashOfConfig":"41"},{"size":3291,"mtime":1617127223421,"results":"51","hashOfConfig":"41"},{"size":2526,"mtime":1617127225241,"results":"52","hashOfConfig":"41"},{"size":710,"mtime":1616871771474,"results":"53","hashOfConfig":"41"},{"size":1245,"mtime":1616871771474,"results":"54","hashOfConfig":"41"},{"size":822,"mtime":1617305550495,"results":"55","hashOfConfig":"41"},{"size":2893,"mtime":1617307437404,"results":"56","hashOfConfig":"41"},{"size":801,"mtime":1616871771474,"results":"57","hashOfConfig":"41"},{"size":3159,"mtime":1616871771474,"results":"58","hashOfConfig":"41"},{"size":765,"mtime":1616953286398,"results":"59","hashOfConfig":"41"},{"size":3881,"mtime":1616871771474,"results":"60","hashOfConfig":"41"},{"size":3488,"mtime":1616871771474,"results":"61","hashOfConfig":"41"},{"size":1203,"mtime":1617305574651,"results":"62","hashOfConfig":"41"},{"size":4850,"mtime":1616953891182,"results":"63","hashOfConfig":"41"},{"size":3905,"mtime":1617134801163,"results":"64","hashOfConfig":"41"},{"size":2151,"mtime":1617306008243,"results":"65","hashOfConfig":"41"},{"size":1917,"mtime":1617110681044,"results":"66","hashOfConfig":"41"},{"size":149,"mtime":1616871771474,"results":"67","hashOfConfig":"41"},{"size":141,"mtime":1616871771474,"results":"68","hashOfConfig":"41"},{"size":7579,"mtime":1617307020844,"results":"69","hashOfConfig":"41"},{"size":1076,"mtime":1616871771474,"results":"70","hashOfConfig":"41"},{"size":2014,"mtime":1616871771474,"results":"71","hashOfConfig":"41"},{"size":3852,"mtime":1617306005507,"results":"72","hashOfConfig":"41"},{"size":3462,"mtime":1617307641235,"results":"73","hashOfConfig":"41"},{"size":3494,"mtime":1617304783036,"results":"74","hashOfConfig":"41"},{"size":5790,"mtime":1617305116876,"results":"75","hashOfConfig":"41"},{"size":2389,"mtime":1616871771474,"results":"76","hashOfConfig":"41"},{"size":1536,"mtime":1616871771474,"results":"77","hashOfConfig":"41"},{"size":1945,"mtime":1616871771474,"results":"78","hashOfConfig":"41"},{"size":8960,"mtime":1617134975261,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"z9hu3p",{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"98","usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"82"},"/home/mukul_123/Desktop/messenger/messenger-client/src/index.tsx",[],["172","173"],"/home/mukul_123/Desktop/messenger/messenger-client/src/components/main.tsx",["174","175"],"import React, { useEffect, useState } from 'react';\nimport {\n    BrowserRouter,\n    Switch,\n    Route,\n    Redirect,\n    useHistory,\n} from \"react-router-dom\";\nimport Routes from '../utils/routes';\nimport Home from './home/home'\nimport Login from './login/login'\nimport './main.scss'\nimport Profile from './profile/profile';\nimport ThirdPartyLogin from './thridpartylogin/thridpartylogin';\nimport ToastMessage from '../shared/components/toast/toast';\nimport BackdropLoader from '../shared/components/backdrop/backdrop';\nimport { logoutService, toastMessage } from '../shared/utils';\nimport { useDispatch } from 'react-redux';\nimport actions, { MESSAGE_ACTIONS } from '../redux/actions';\nimport API from '../utils/server';\nimport BermudaTriangle from '../shared/localstorage.service';\nimport ProtectedRoute from '../shared/components/protected-route/protected-route';\n\nexport default function Main() {\n    const defaultRedirect = () => <Redirect to={Routes.login} />;\n    const [intercepted, setIntercept] = useState(false)\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch({ type : actions.SHOW_LOADER })\n        API.initApiInterceptor();\n        toastMessage.subscribe((data) => {\n            if (data.logout) {\n                localStorage.clear();\n                dispatch({ type : actions.STORE_USER, data : { name : null, image : null } })\n                setTimeout(() => window.location.href = Routes.default, 2000)\n            }\n            dispatch({ type : actions.TOAST_MESSAGE, data : { message : data.message, type : data.type } })\n        })\n        logoutService.subscribe(() => {\n            dispatch({ type : actions.RESET_USER })\n            dispatch({ type : MESSAGE_ACTIONS.RESET_FRIENDS })\n            BermudaTriangle.clearTriangle();\n            window.location.href='/login'\n        })\n        setIntercept(true)\n        dispatch({ type : actions.STOP_LOADER })\n    },[])\n    return (\n        <>\n            {\n                intercepted ? \n                <>\n                    <BackdropLoader/>\n                    <ToastMessage/>\n                    <BrowserRouter>\n                        <Switch>\n                            <Route path={Routes.login} component={Login}></Route>\n                            <ProtectedRoute path={Routes.home} component={Home}></ProtectedRoute>\n                            <ProtectedRoute path={Routes.profile} component={Profile}></ProtectedRoute>\n                            <Route path={Routes.thridPartyLogin} component={ThirdPartyLogin}></Route>\n                            <Route path={Routes.notFound} component={defaultRedirect}></Route>\n                            <Route path={Routes.default} component={defaultRedirect}></Route>\n                        </Switch>\n                    </BrowserRouter>\n                </>:null\n            }\n        </>\n    )\n}\n","/home/mukul_123/Desktop/messenger/messenger-client/src/redux/index.ts",[],"/home/mukul_123/Desktop/messenger/messenger-client/src/redux/actions.ts",[],"/home/mukul_123/Desktop/messenger/messenger-client/src/utils/routes.ts",[],"/home/mukul_123/Desktop/messenger/messenger-client/src/shared/localstorage.service.ts",[],"/home/mukul_123/Desktop/messenger/messenger-client/src/shared/utils.ts",[],"/home/mukul_123/Desktop/messenger/messenger-client/src/utils/server.ts",["176","177"],"import sR from './server-routes'\nimport axios, { AxiosRequestConfig } from 'axios'\nimport Utils, { logoutService, toastMessage } from '../shared/utils';\nimport BermudaTriangle from '../shared/localstorage.service';\nexport default class API{\n    public static nonSecretEndPoints = [sR.BASE + sR.LOGIN, sR.BASE + sR.REGISTER, sR.BASE + sR.LOGIN, sR.BASE + sR.AUTHORIZE]\n    public static initApiInterceptor() {\n        axios.interceptors.request.use(\n            (config: any) => {\n                if (!this.nonSecretEndPoints.includes(config.url)) {\n                    const token = BermudaTriangle.getTriangle('token');\n                    if (!token) {\n                        logoutService.next()\n                        toastMessage.next({ message: 'Re-Login again', type: false, duration: 5000, logout: true });\n                        return;\n                    }\n                    config.headers = { ...config.headers, token: token, type: \"WEB-MESSENGER\" };\n                    return config;\n                }\n                config.headers = { ...config.headers, type: \"WEB-MESSENGER\" };\n                return config;\n            },\n            (error) => Promise.reject({ type: \"intercept\", message: sR.clientAccessDenied })\n        );\n        axios.interceptors.response.use(r => r, (error : any) => {\n            const pendingRequest = error.config;\n            if (\n                error?.response?.status === 401 &&\n                !this.nonSecretEndPoints.includes(error.config.url) &&\n                !pendingRequest._retry\n            ) {\n                pendingRequest._retry = true;\n                return axios.get(sR.BASE + sR.REFRESH + `?token=${BermudaTriangle.getTriangle('refreshToken')}`). \n                then(response => {\n                    if(response.status === 200 && response.data?.message){\n                        BermudaTriangle.setTriangle('refreshToken', response.data?.message?.refresh_token)\n                        BermudaTriangle.setTriangle('token', response.data?.message?.token)\n                        return axios(pendingRequest)\n                    }else{\n                        API.logout()\n                    }\n                }). \n                catch(e => API.logout())\n                \n            }\n            return Promise.reject(error);\n        });\n    }\n    private static logout(){\n        logoutService.next()\n        toastMessage.next({ message: 'Re-Login again', type: false, duration: 5000, logout: true });\n    }\n    public static login(identity : string, isOtp : boolean, otp ?:string) : Promise<any> {\n        return new Promise((resolve, reject) => {\n            const body = { identity : identity, otp :  isOtp ? otp : null}\n            axios.post(sR.BASE+sR.LOGIN, body).then((response: AxiosRequestConfig) => resolve(response)).catch(e => reject(Utils.parseError(e)))\n        })\n    }\n\n    public static register(identity : string, isOtp : boolean, otp ?:string) : Promise<any> {\n        return new Promise((resolve, reject) => {\n            const body = { identity : identity, otp :  isOtp ? otp : null}\n            axios.post(sR.BASE+sR.REGISTER, body).then((response: AxiosRequestConfig) => resolve(response)).catch(e => reject(Utils.parseError(e)))\n        })\n    }\n\n    public static getProfile(id ?: string[]) : Promise<any> {\n        return new Promise((resolve, reject) => {\n            const url = sR.BASE+sR.PROFILE\n            if(!id){\n                return axios.get(url).then((response: AxiosRequestConfig) => resolve(response)).catch(e => reject(Utils.parseError(e)))\n            }\n            axios.post(url, id).then((response: AxiosRequestConfig) => resolve(response)).catch(e => reject(Utils.parseError(e)))\n        })\n    }\n\n    public static updateProfile(name : string): Promise<any> {\n        return new Promise((resolve, reject) => {\n            axios.put(sR.BASE+sR.PROFILE, { displayName : name }).then((response: AxiosRequestConfig) => resolve(response)).catch(e => reject(Utils.parseError(e)))\n        })\n    }\n\n    public static getNetwork(type : string, start : number = 0, count : number = 10) : Promise<any> {\n        return new Promise((resolve, reject)=>{\n            const url = sR.BASE+sR.SOCIAL.network+type+`?start=${start}&count=${count}`\n            axios.get(url).then((response: AxiosRequestConfig) => resolve(response)).catch(e => reject(Utils.parseError(e)))\n        })\n    }\n\n    public static searchUsers(userName : string, start : number = 0, count : number = 10) : Promise<any>{\n        return new Promise((resolve, reject)=>{\n            const url = sR.BASE+sR.SOCIAL.search+`?name=${userName}&count=${count}&start=${start}`\n            axios.get(url).then((response: AxiosRequestConfig) => resolve(response)).catch(e => reject(Utils.parseError(e)))\n        })\n    }\n\n    public static networkAction(type : string, targetId : string, isAcceptOrReject ?: 'accept' | 'reject') : Promise<any> {\n        let url = sR.BASE+sR.SOCIAL.action+`${type}/${targetId}`\n        if(type === 'respond'){\n            url += `?answer=${isAcceptOrReject}`\n        }\n        return new Promise((resolve, reject)=>{\n            axios.get(url).then((response: AxiosRequestConfig) => resolve(response)).catch(e => reject(Utils.parseError(e)))\n        })\n    }\n\n    public static authorize(type : string, token : string) : Promise<any>{\n        return new Promise((resolve, reject)=>{\n            const headers = { loginType : type, token : token }\n            axios.get(sR.BASE+sR.AUTHORIZE, { headers : headers }).then((response: AxiosRequestConfig) => resolve(response)).catch(e => reject(Utils.parseError(e)))\n        })\n    }\n\n    public static getMessages(targetId: string, count ?:number): { cancel: any, promise: Promise<any> } {\n        const CancelToken = axios.CancelToken;\n        let cancel;\n        const promise = axios.get(sR.BASE + sR.MESSAGE + `?targetId=${targetId}${count ?`&count=${count}` : ''}`, { cancelToken: new CancelToken(function executor(c) { cancel = c; }) })\n        return { promise, cancel }\n    }\n}","/home/mukul_123/Desktop/messenger/messenger-client/src/components/home/home.tsx",["178","179","180","181","182","183","184"],"import React, { useEffect, useReducer } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { IResponse } from '../../interfaces/data-models';\nimport actions from '../../redux/actions';\nimport { setGlobalToggleFunc, toastMessage } from '../../shared/utils'\nimport API from '../../utils/server';\nimport HomeRender from './home.render'\nexport default function Home() {\n    const dispatch = useDispatch()\n    const history = useHistory();\n    const userService = useSelector((s : any) => s['userService'])\n    const contextData = {\n        profileReady : false,\n        isLoading : true\n    }\n    const [homeContext, setHomeContext] = useReducer(setGlobalToggleFunc, contextData)\n    // async function fetchProfile(){\n    //     try{\n    //         const profileResponse : IResponse = await API.getProfile()\n    //         const profile = profileResponse?.data?.message || {}\n    //         const dispatchData = { name : `${profile.displayName || ''}`, id : profile.id, identity : profile.identity }\n    //         dispatch({ type : actions.STORE_USER, data : dispatchData })\n    //         setHomeContext({ profileReady : `${dispatchData.name}`.trim().length > 0 ? true : false, isLoading : false })\n    //     }catch(e){\n    //         setHomeContext({ profileReady : false, isLoading : true })\n    //         toastMessage.next({ message : e, type : false })\n    //     }\n    // }\n    useEffect(() => {\n        const profileName = userService?.name || '';\n        // if(!userService?.name){\n        //     fetchProfile()\n        //     return\n        // }\n        setHomeContext({ profileReady : `${profileName}`.trim().length > 0, isLoading : false })\n        \n    },[])\n    return (\n        <HomeRender {...homeContext}/>\n    )\n}\n","/home/mukul_123/Desktop/messenger/messenger-client/src/components/login/login.tsx",["185","186","187"],"import React, { useEffect, useReducer } from 'react'\nimport LoginRender from './login.render'\nimport { useHistory } from \"react-router-dom\";\nimport Routes from '../../utils/routes';\nimport { setGlobalToggleFunc } from '../../shared/utils';\nimport { useDispatch } from 'react-redux';\nimport { IToastStore } from '../../interfaces/redux';\nimport actions from '../../redux/actions';\nimport serverRoutes from '../../utils/server-routes';\nimport API from '../../utils/server';\nimport IApiResponse from '../../interfaces/data-models';\nimport Otp from '../../shared/components/otp/otp';\nimport { AxiosRequestConfig } from 'axios';\nimport BermudaTriangle from '../../shared/localstorage.service';\nexport default function Login() {\n    const history = useHistory()\n    const dispatch  = useDispatch() \n    const loginContextData = { redirect : true, identity : '', otpReady : false, otp : '', isLoading : false, type : '' }\n    const [loginContext, setLoginContext] = useReducer(setGlobalToggleFunc, loginContextData)\n    const authenticate = async (identity : string, type : 'Login' | 'google' | 'Register') => {\n        try{\n            if(type === 'google'){\n                window.location.href = serverRoutes.GOOGLE;\n                return;\n            }\n            setLoginContext({ isLoading : true, type : type, identity : identity})\n            const response : IApiResponse = await (type === 'Login' ? API.login : API.register)(identity, false)\n            dispatch({ type : actions.TOAST_MESSAGE, data : { type : true, message : `OTP sent to ${identity}` } })\n            setLoginContext({ isLoading : false, otpReady : true })\n        }catch(e){\n            setLoginContext({ isLoading : false })\n            dispatch({ type : actions.TOAST_MESSAGE, data : { type : false, message : e } })\n        }\n    }\n    const setStorage = (token : string, refreshToken : string) : void => {\n        BermudaTriangle.setTriangle('token', token)\n        BermudaTriangle.setTriangle('refreshToken',refreshToken)\n    }\n    const submitOtp = async (otp : string) => {\n        try{\n            setLoginContext({ isLoading : true, otpReady : false })\n            const response : AxiosRequestConfig = await (loginContext.type === 'Login' ? API.login : API.register)(loginContext.identity, true, otp)\n            const data = response.data.message;\n            setStorage(data.token, data.refresh_token)\n            if(response.data.statusCode === 201){\n                const dispatchData = { identity: loginContext.identity, name: '', image: null, id : data.id }\n                dispatch({ type : actions.STORE_USER, data : dispatchData })\n                setLoginContext({ isLoading : false })\n                history.push({ pathname: '/profile', state: { header: 'Complete your profile', identity: loginContext.identity } })\n                return\n            }\n            const profileResponse : AxiosRequestConfig = await API.getProfile()\n            const { userId, displayName } = profileResponse.data.message;\n            dispatch({ type : actions.STORE_USER, data : { identity: loginContext.identity, name: displayName, image: null, id : userId } })\n            history.push({ pathname: '/home'})\n        }catch(e){\n            setLoginContext({ isLoading : false, otpReady : true })\n            dispatch({ type : actions.TOAST_MESSAGE, data : { type : false, message : e } })\n        }\n    }\n    useEffect(() => {\n        document.title = 'Messenger';\n        if (BermudaTriangle.isFree()) {\n            document.title = 'Messenger - Login';\n            setLoginContext({ redirect: false })\n        } else {\n            history.push(Routes.home)\n        }\n    }, []);\n    const otp = loginContext.otpReady ?\n    <Otp \n        verifyOtp={submitOtp} \n        resend={() => authenticate(loginContext.identity, loginContext.type)} \n        cancelOtp={() => setLoginContext({ otpReady: false })} \n    /> : null;\n\n    return (\n        loginContext.redirect ? null :\n        <>\n            <LoginRender {...loginContext} authenticate={authenticate}/>\n            {otp}\n        </>\n    )\n}\n","/home/mukul_123/Desktop/messenger/messenger-client/src/components/profile/profile.tsx",["188","189","190"],"import React, { useEffect, useReducer } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Routes from '../../utils/routes';\nimport API from '../../utils/server';\nimport Utils, { setGlobalToggleFunc, toastMessage } from '../../shared/utils';\nimport ProfileRenderer from './profile.render';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { IUserStore } from '../../interfaces/redux';\nimport actions from '../../redux/actions';\nimport BermudaTriangle from '../../shared/localstorage.service';\nexport default function Profile() {\n    const userStore: IUserStore = useSelector((state: any) => state.userService)\n    const dispatch = useDispatch()\n    const history = useHistory();\n    const stateData = { loading: false, name: userStore.name, blob: null, user: userStore.identity, profileTouched: {} };\n    const [state, setState] = useReducer(setGlobalToggleFunc, stateData);\n    const updateProfile = async () => {\n        try {\n            if (Object.keys(state.profileTouched).length > 0) {\n                setState({ loading: true })\n                let params = [state.name, state.blob];\n                if (!state.profileTouched.blob) {\n                    params.pop();\n                }\n                await API.updateProfile(state.name)\n                setState({ loading: false })\n                const dispatchData = { name: state.name, blob: state.blob }\n                dispatch({ type : actions.STORE_USER, data : dispatchData })\n                toastMessage.next({ type: true, message: 'Profile updated successfully' });\n            }\n            history.push(Routes.home)\n        } catch (e) {\n            setState({ loading: false })\n            toastMessage.next({ type: false, message: e, duration: 2000 })\n        }\n    }\n    const getProfile = async () => {\n        document.title = 'Messenger - Profile';\n        if (BermudaTriangle.isFree()) {\n            history.push(Routes.login);\n        }\n        else if (!userStore.name) {\n            try {\n                setState({ loading: true })\n                const profileResponse: any = await API.getProfile();\n                const profile = profileResponse.data?.message;\n                setState({ loading: false })\n                let dispatchData = {}\n                if (profile.displayName) {\n                    // const blob = null//`${profile.image_blob}` == 'null' ? null : profile.image_blob;\n                    dispatchData = { name: profile.displayName, image: null , identity : profile.identity }\n                } else {\n                    dispatchData = { name: profile.displayName, id: profile.id, identity : profile.identity }\n                }\n                setState({ loading: false, name: profile.displayName, blob: null, user: profile.identity })\n                dispatch({ type : actions.STORE_USER, data : dispatchData})\n                } catch (e) {\n                setState({ loading: false })\n                toastMessage.next({ type: false, message: e })\n            }\n        } else {\n            setState({ loading: false, name: userStore.name, blob: userStore.image, user: userStore.identity })\n        }\n    }\n    // useEffect(() => { getProfile(); }, [])\n    return (<ProfileRenderer {...state} updateProfile={updateProfile} setForm={setState} />)\n}","/home/mukul_123/Desktop/messenger/messenger-client/src/components/thridpartylogin/thridpartylogin.tsx",["191","192"],"import React, { useEffect, useState } from 'react'\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport API from '../../utils/server';\nimport { IResponse } from '../../interfaces/data-models';\nimport BermudaTriangle from '../../shared/localstorage.service';\nimport actions from '../../redux/actions';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n// import Api from '../../shared/server';\n// import Routes from '../../shared/routes';\nexport default function ThirdPartyLogin() {\n    const dispatch  = useDispatch()\n    const history  = useHistory()\n    useEffect(() => {\n        try {\n            const url = window.location.href.split('#')[1].split('&')\n            const code = url.filter(a => a.split('=')[0] === 'access_token')[0].split('=')[1]\n            storeIdentity(code)\n        } catch (e) {\n            history.push({ pathname: '/login'})\n        }\n    },[])\n    const setStorage = (token : string, refreshToken : string) : void => {\n        BermudaTriangle.setTriangle('token', token)\n        BermudaTriangle.setTriangle('refreshToken',refreshToken)\n    }\n    const storeIdentity = async (accessToken: any) => {\n        try{\n            const response : IResponse = await API.authorize('google', accessToken)\n            const message = response?.data?.message;\n            if(message.token){\n                setStorage(message.token, message.refresh_token)\n                if(message.statusCode === 201){\n                    const dispatchData = { identity: message.identity, name: '', image: null, id : message.id }\n                    dispatch({ type : actions.STORE_USER, data : dispatchData })\n                    history.push({ pathname: '/profile', state: { header: 'Complete your profile', identity: message.identity } })\n                    return\n                }\n                const profileResponse : IResponse = await API.getProfile()\n                const { id, displayName } = profileResponse?.data?.message;\n                dispatch({ type : actions.STORE_USER, data : { identity: message.identity, name: displayName || '', image: null, id : id } })\n                history.push({ pathname: '/home'})\n            }else{\n                history.push({ pathname: '/login'})\n            }\n        }\n        catch(e){\n            history.push({ pathname: '/login'})\n        }\n    }\n    return (\n            <Backdrop open={true}><CircularProgress color=\"inherit\" /></Backdrop>\n    )\n}","/home/mukul_123/Desktop/messenger/messenger-client/src/shared/components/backdrop/backdrop.tsx",[],"/home/mukul_123/Desktop/messenger/messenger-client/src/shared/components/toast/toast.tsx",[],"/home/mukul_123/Desktop/messenger/messenger-client/src/shared/components/protected-route/protected-route.tsx",["193","194"],"/home/mukul_123/Desktop/messenger/messenger-client/src/redux/reducers.ts",["195"],"/home/mukul_123/Desktop/messenger/messenger-client/src/utils/server-routes.ts",[],"/home/mukul_123/Desktop/messenger/messenger-client/src/shared/material-modules.ts",[],"/home/mukul_123/Desktop/messenger/messenger-client/src/components/home/home.render.tsx",["196","197","198","199","200","201","202","203","204","205"],"import React, { useContext } from 'react'\nimport {\n    Switch,\n    Route,\n    BrowserRouter \n} from \"react-router-dom\";\nimport Routes from '../../utils/routes';\nimport Chat from './home-components/chat-section/chat';\nimport Navbar from './home-components/navbar/navbar';\nimport Request from './home-components/requests/request';\nimport './home.scss'\nimport emptyProfile from '../../assets/empty-profile.svg'\nimport SocketContextData, { SocketContext } from './socket.context';\nimport HomRouter from './home.router';\nexport default function HomeRender(props : any) {\n    //profileReady\n    return (\n        <div className=\"home-section\">\n            <SocketContextData>\n                <HomRouter {...props}/>\n            </SocketContextData>\n        </div>\n    )\n}\n","/home/mukul_123/Desktop/messenger/messenger-client/src/components/login/login.render.tsx",[],"/home/mukul_123/Desktop/messenger/messenger-client/src/components/profile/profile.render.tsx",["206"],"import React, { createRef } from 'react';\nimport './profile.scss'\nimport emptyProfile from '../../assets/emptyProfile.webp';\nimport { TextField, Button, CircularProgress } from '../../shared/material-modules';\nexport default function ProfileRenderer(props: any) {\n    const { loading, name, user, setForm, updateProfile, blob, profileTouched } = props;\n    const fileInp = (createRef() as any);\n    const setProfileImage = (evt: any) => {\n        var f = evt.target.files[0];\n        if (f) {\n            const r = new FileReader();\n            r.onload = (e: any) => setForm({ blob: e.target.result, profileTouched: { ...profileTouched, blob: true } })\n            r.readAsDataURL(f);\n        }\n    }\n    return (\n        <>\n            <input type='file' hidden id='hidden-file' ref={fileInp} onChange={setProfileImage} />\n            <div className=\"profile-layout\">\n                <p id='heading'>My Profile</p>\n                <div className=\"profile\">\n                    <div className=\"profile-form\">\n                        <div className=\"profile-img\">\n                            <img src={blob ? blob : emptyProfile} width=\"100px\" height=\"100px\" onClick={e => fileInp.current.click()} />\n                            {\n                                blob ?\n                                    <div className=\"remove-img\" onClick={e => setForm({ blob: null, profileTouched: { ...profileTouched, blob: true } })}>x</div>\n                                    : null\n                            }\n                        </div>\n                        <div className=\"profile-name form-inp\">\n                            <div id='inp-text'><strong>Name</strong></div>\n                            <TextField\n                                id=\"outlined-basic\"\n                                placeholder=\"Name\"\n                                variant=\"outlined\"\n                                className=\"input-text\"\n                                disabled={loading}\n                                value={name || ''}\n                                onChange={e => setForm({ name: e.target.value, profileTouched: { ...profileTouched, name: true } })}\n                            />\n                        </div>\n                        <div className=\"profile-emailMobile form-inp\">\n                            <div id='inp-text'><strong>Email or Mobile</strong></div>\n                            <TextField\n                                id=\"outlined-basic\"\n                                placeholder=\"Email or Mobile\"\n                                variant=\"outlined\"\n                                className=\"input-text\"\n                                disabled={true}\n                                value={user || ''}\n                            />\n                        </div>\n                        <div className=\"submit-profile\">\n                            <Button variant=\"contained\" color=\"primary\"\n                                disabled={loading}\n                                onClick={e => updateProfile()}\n                            >\n                                {\n                                    loading ?\n                                        <CircularProgress className=\"submit-profile__loader\" /> :\n                                        'Submit'\n                                }\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}","/home/mukul_123/Desktop/messenger/messenger-client/src/shared/components/protected-route/initalizer.tsx",["207"],"/home/mukul_123/Desktop/messenger/messenger-client/src/shared/components/otp/otp.tsx",["208","209","210"],"import React, { createRef, useEffect, useState } from 'react';\nimport './otp.scss'\nimport {\n    Dialog, Button, ReplayIcon, CloseIcon, CheckCircleOutlineIcon\n} from '../../material-modules';\nexport default function Otp(props: any) {\n    const { verifyOtp, resend } = props;\n    const [focusOn, setFocusOn] = useState(0)\n    const [values, setValues] = useState(({ 0: '', 1: '', 2: '', 3: '', 4: '', 5: '' } as any))\n    const [focuses, setFocuses] = useState((Array(6).fill(true).map(_ => createRef()) as any))\n    const [otpValid, setOtpValid] = useState(('' as any))\n    const [inProgress, setInProgress] = useState(false)\n    const onClic = (e: any) => {\n        setFocusOn(e)\n    }\n    useEffect(() => {\n        const otp = Object.values(values).map(v => v).join('')\n        if (`${otp}`.length === 6) {\n            setOtpValid(otp)\n            return;\n        }\n        setOtpValid(null)\n    }, [values])\n\n    const resendOtp = (e: any) => {\n    }\n\n    const onKeyU = (e: any, i: number) => {\n        if (e.key <= 9 || e.key >= 0) {\n            if (i < 5) {\n                setFocusOn(i + 1)\n                focuses[i + 1].current.focus()\n            }\n        }\n    }\n    const verify = () => {\n        if (!otpValid || inProgress) { return }\n        verifyOtp(otpValid);\n    }\n    const onKeyP = (e: any, i: number) => {\n        if (e.keyCode === 13) {\n            verify()\n            return;\n        }\n        if (e.keyCode === 8 && (focusOn) > 0) {\n            const cV: any = { ...values }\n            cV[i] = ''\n            setValues(cV)\n            if (values[i] === '') {\n                setFocusOn(focusOn - 1)\n                focuses[focusOn - 1].current.focus()\n            }\n        }\n    }\n\n    const onChang = (e: any, i: number) => {\n        const val = `${e.target.value}`;\n        if (!isNaN(Number(val))) {\n            const cV: any = { ...values }\n            cV[i] = val.length === 1 ? val : val.charAt(val.length - 1)\n            setValues(cV)\n        }\n    }\n    const isEnabled = otpValid && !inProgress\n    return (\n        <div className='otp-parent'>\n            <Dialog\n                open={true}>\n                <div className='otp-modal'>\n                    <div className='goBack'>\n                        {\n                            !inProgress ?\n                                <CloseIcon className=\"close-otp\" onClick={(e : any) => {\n                                    if (!inProgress) { props.cancelOtp() }\n                                }} /> :\n                                null\n                        }\n\n                    </div>\n                    <div className=\"otp-title\">\n                        Enter OTP\n                    </div>\n                    <div className=\"otp-input\">\n                        {Array(6).fill(true).map((v, i) => {\n                            return <input\n                                className='otp-inp'\n                                key={i}\n                                ref={focuses[i]}\n                                id={`otp-inp-${i}`}\n                                // autoFocus={i == focusOn}\n                                onClick={e => onClic(i)}\n                                onKeyPress={e => onKeyU(e, i)}\n                                value={values[i]}\n                                onKeyDown={e => onKeyP(e, i)}\n                                onChange={e => onChang(e, i)}\n                                onFocus={e => e.target.select()}\n                                autoFocus={i === 0}\n                            />\n                        })}\n                    </div>\n                    <div className=\"otp-btns\">\n                        <span className='otp-verify'>\n                            <Button\n                                variant=\"contained\"\n                                className={isEnabled ? 'otp-verify-btn' : 'otp-verify-btn bg-empty-dis'}\n                                onClick={verify}\n                                disabled={!isEnabled}\n                            >\n                                Verify\n                                <CheckCircleOutlineIcon className=\"icon\" />\n                            </Button>\n                        </span>\n                        <span className='otp-resend'>\n                            <Button\n                                variant=\"contained\"\n                                className={!inProgress ? 'otp-resend-btn' : 'otp-resend-btn bg-empty-dis'}\n                                disabled={inProgress}\n                                onClick={resend}\n                            >\n                                Resend\n                                <ReplayIcon className=\"icon\" />\n                            </Button>\n                        </span>\n                    </div>\n                </div>\n            </Dialog>\n        </div>)\n}","/home/mukul_123/Desktop/messenger/messenger-client/src/shared/services/messages.reducer.ts",[],"/home/mukul_123/Desktop/messenger/messenger-client/src/components/home/socket.context.tsx",["211","212","213"],"/home/mukul_123/Desktop/messenger/messenger-client/src/components/home/home.router.tsx",["214","215"],"import React, { useContext } from 'react'\nimport {\n    Switch,\n    Route,\n    BrowserRouter \n} from \"react-router-dom\";\nimport Routes from '../../utils/routes';\nimport { SocketContext } from './socket.context';\nimport Chat from './home-components/chat-section/chat';\nimport Navbar from './home-components/navbar/navbar';\nimport Request from './home-components/requests/request';\nimport './home.scss'\nimport { CircularProgress } from '@material-ui/core';\nimport emptyProfile from '../../assets/empty-profile.svg'\nexport default function HomRouter(props : any) {\n    const {event, error} = useContext(SocketContext)\n    const {\n        profileReady,\n        isLoading\n    } = props;\n    return (\n        <>\n            <div className=\"navbar\">\n                <Navbar />\n            </div>\n            <Switch>\n                <Route path={Routes.requests}>\n                    <div className=\"request-section\">\n                        <Request />\n                    </div>\n                </Route>\n                <Route path={Routes.home}>\n               {event ?\n\n                    <div className=\"chatsection\" >\n                        {\n                            profileReady && !isLoading? \n                            <Chat /> :\n                            <div className=\"empty-profile\">\n                                {\n                                    isLoading ?\n                                    <CircularProgress /> : \n                                    <>\n                                        <img src={emptyProfile} alt=\"\"/>\n                                        <p>Profile is Empty</p>\n                                    </>\n                                }\n                            </div>\n                        }\n                    </div> : <div className=\"loading-context\"><CircularProgress /></div>}\n                </Route>\n            </Switch>\n        </>\n        \n    )\n}","/home/mukul_123/Desktop/messenger/messenger-client/src/components/home/home-components/navbar/navbar.tsx",[],"/home/mukul_123/Desktop/messenger/messenger-client/src/components/home/home-components/chat-section/chat.tsx",[],"/home/mukul_123/Desktop/messenger/messenger-client/src/components/home/home-components/requests/request.tsx",["216","217"],"/home/mukul_123/Desktop/messenger/messenger-client/src/components/home/home-components/chat-section/chat.render.tsx",["218","219"],"import React, { createRef, useState } from 'react'\nimport ChatFriends from './chat-components/chat-friends/chat-friends'\nimport MessageArea from './chat-components/message-area/message-area'\nimport MessageAreaRender from './chat-components/message-area/message-area.render'\nimport './chat.scss'\nexport default function ChatRender() {\n    const [friendRef, setFriendRef] = useState<any>(createRef())\n    return (\n        <div className=\"chat-render\">\n            <div className=\"chat-render--chatfriends\" id='chat-friends' ref={friendRef}>\n                <ChatFriends/>\n            </div>\n            <div className=\"chat-render--chatfriends-mob\" onClick={() => friendRef.current.classList.toggle('chat-render-showFriends')}>\n                <div>F</div>\n                <div>R</div>\n                <div>I</div>\n                <div>E</div>\n                <div>N</div>\n                <div>D</div>\n                <div>S</div>\n            </div>\n            <div className=\"chat-render--messagearea\">\n                <MessageArea/>\n            </div>\n        </div>\n    )\n}\n","/home/mukul_123/Desktop/messenger/messenger-client/src/components/home/home-components/navbar/navbar.render.tsx",["220","221","222"],"import React, { useEffect, useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom';\nimport BermudaTriangle from '../../../../shared/localstorage.service';\nimport { HomeIcon, PersonIcon, SearchIcon, MeetingRoomIcon } from '../../../../shared/material-modules'\nimport { logoutService } from '../../../../shared/utils';\nimport Routes from '../../../../utils/routes';\nimport './navbar.scss'\nexport default function NavbarRender() {\n    const history = useHistory()\n    const [navbarContext, setNavbarContext] = useState<string>('')\n    useEffect(() => {\n        const path: string[] = window.location.pathname.split('/');\n        setNavbarContext(path[path.length - 1])\n    }, []);\n    useEffect(() => {\n        const path: string[] = window.location.pathname.split('/');\n        setNavbarContext(path[path.length - 1])\n    },[navbarContext])\n    const logout = () => logoutService.next()\n    const onNavSelect = (type: string) : void => setNavbarContext(type)\n    return (\n        <div className=\"navbar\">\n            <div className=\"nav-items\">\n                <Link to=\"/home\" className={navbarContext === 'home' ? 'nav--item nav-active' : 'nav--item'} onClick={() => onNavSelect('home')}>\n                    <HomeIcon/>\n                    <span>Home</span>\n                </Link>\n                <Link to=\"/profile\"  className=\"nav--item\" onClick={() => onNavSelect('profile')}>\n                    <PersonIcon/>\n                    <span>Profile</span>\n                </Link>\n                <Link to=\"/home/requests\" className={navbarContext === 'requests' ? 'nav--item  nav-active' : 'nav--item'} onClick={() => onNavSelect('requests')}>\n                    <SearchIcon/>\n                    <span>\n                        Search\n                    </span>\n                </Link>\n                <div className=\"nav--item\" onClick={logout}>\n                    <MeetingRoomIcon/>\n                    <span>Logout</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/home/mukul_123/Desktop/messenger/messenger-client/src/components/home/home-components/chat-section/chat-components/message-area/message-area.tsx",["223","224","225","226","227"],"/home/mukul_123/Desktop/messenger/messenger-client/src/components/home/home-components/chat-section/chat-components/chat-friends/chat-friends.tsx",["228","229","230","231"],"/home/mukul_123/Desktop/messenger/messenger-client/src/components/home/home-components/chat-section/chat-components/chat-friends/chat-friends-render.tsx",["232","233"],"/home/mukul_123/Desktop/messenger/messenger-client/src/components/home/home-components/chat-section/chat-components/message-area/message-area.render.tsx",["234","235","236","237","238","239","240","241","242","243","244"],"/home/mukul_123/Desktop/messenger/messenger-client/src/shared/services/request.search.tsx",[],"/home/mukul_123/Desktop/messenger/messenger-client/src/shared/services/request.sent.tsx",[],"/home/mukul_123/Desktop/messenger/messenger-client/src/shared/services/request.incoming.tsx",[],"/home/mukul_123/Desktop/messenger/messenger-client/src/components/home/home-components/requests/requestRender.tsx",["245","246"],"import React, { useState } from 'react'\nimport { SearchIcon, QueryBuilderIcon, SendIcon, CheckCircleOutlineIcon, CancelIcon, TextField, CircularProgress } from '../../../../shared/material-modules'\nimport './request.scss'\nimport emptyProfile from '../../../../assets/emptyProfile.webp'\nimport noReqFoundPng from '../../../../assets/no-requests-found.png'\nimport searchUsersFirst from '../../../../assets/search-users.png'\nimport { IFriendRequest, IRequestSent, ISearchRequest } from '../../../../interfaces/data-models';\nexport default function RequestRender(props : any) {\n    const { \n        tab, \n        isLoading, \n        changeNav, \n        searchUsers\n    } = props;\n    const [searchInp, setSearchInp] = useState<string>('')\n    function onSearchKeyDown(e : any){\n        if (e.key === 'Enter' && searchInp.trim().length > 0) {\n            searchUsers(searchInp, true)\n            // setSearchInp('')\n        }\n    }\n    return (\n        <div className=\"request-render\">\n            <div className=\"request-render--nav\">\n                <div className={tab === 'sent' ? 'request-nav-item request-active-nav' : 'request-nav-item'} onClick={() => changeNav('sent')}>\n                    <SendIcon/>\n                    <span>Sent Requests</span>\n                </div>\n                <div className={tab === 'search' ? 'request-nav-item request-active-nav' : 'request-nav-item'} onClick={() => changeNav('search')}>\n                    <SearchIcon/>\n                    <span>Search</span>\n                </div>\n                <div className={tab === 'requests' ? 'request-nav-item request-active-nav' : 'request-nav-item'} onClick={() => changeNav('requests')}>\n                    <QueryBuilderIcon/>\n                    <span>Pending Requests</span>\n                </div>\n            </div>\n            <div className=\"request-content\">\n                {\n                    !isLoading ?\n                        tab === 'sent'? <SentRequests {...props}/> :\n                        tab === 'search' ? <>\n                            <TextField \n                                className=\"request-search-inp\" \n                                id=\"outlined-basic\" \n                                variant=\"outlined\" \n                                placeholder=\"Enter User\"\n                                onKeyDown={onSearchKeyDown}\n                                value={searchInp}\n                                onChange={(e) => setSearchInp(e.target.value)}\n                            />\n                            <SearchRequests {...props}/>\n                        </> :  \n                        tab === 'requests' ? <PendingRequests {...props}/> : null \n                    : <p className=\"_loading\">\n                    <CircularProgress /></p>\n                }\n            </div>\n        </div>\n    )\n}\n\nfunction SentRequests(props : any){\n    const { sentRequest, cancelFriendRequest } = props;\n    const totalRequests = sentRequest.getRequests() || [];\n    return(\n                totalRequests.length > 0 ?\n                <div className=\"request-content--SentRequests\">\n            {totalRequests.map((request : IRequestSent, i : number) => {\n                return (\n                        <div className=\"sentrequests-item\" key ={i}>\n                            <div className=\"request-profile\">\n                                <div className=\"requestitem-profile\">\n                                    <img src={emptyProfile} alt={request.displayName}/>\n                                </div>\n                                <div className=\"requestitem-profilename\">\n                                    {request.displayName}\n                                </div>\n                            </div>\n                            <div className=\"requestitem-actions\">\n                                <button disabled={request.isRevoking} \n                                        onClick={() => cancelFriendRequest(request.id)}\n                                >\n                                    {\n                                        !request.isRevoking ?\n                                        <CancelIcon/> :\n                                            null\n                                        // <div className=\"progress-request\">\n                                        //     <CircularProgress color=\"inherit\" />\n                                        // </div>\n                                    }\n                                    <span>{request.isRevoking ? '...' : 'Revoke'}</span>\n                                </button>\n                            </div>\n                        </div>\n                )\n            })}\n        </div>\n            :\n            <div className=\"no-sent-req\">\n                <div>\n                    <img src={noReqFoundPng} alt=\"\"/>\n                </div>\n                <p>No Sent Request found</p>\n            </div>\n    )\n}\n\nfunction SearchRequests(props : any){\n    const { searchRequest , sendFriendRequest } = props;\n    const totalRequests = searchRequest.getRequests() || [];\n    return(\n        !searchRequest.isSearching() ?\n        totalRequests.length > 0 ?\n        <div className=\"request-content--SentRequests request-content--SentRequests-min\">\n           {\n               totalRequests.map((user : ISearchRequest, i : number) => {\n                   return (\n                        <div className=\"sentrequests-item\" key={i}>\n                        <div className=\"request-profile\">\n                            <div className=\"requestitem-profile\">\n                                <img src={emptyProfile} />\n                            </div>\n                            <div className=\"requestitem-profilename\">\n                                {user.displayName}\n                            </div>\n                        </div>\n                        <div className=\"requestitem-actions\">\n                            <button className=\"send-r-btn\" \n                                disabled={user.sending} \n                                onClick={() => sendFriendRequest(user.id)}>\n                                <SendIcon/>\n                                <span>{user.sending ? 'Sending...' : 'Send Request'}</span>\n                            </button>\n                        </div>\n                    </div>\n                   )\n               })\n           }\n        </div>\n            :\n            <div className=\"no-sent-req\">\n                <div>\n                    <img src={!searchRequest.searched ? searchUsersFirst : noReqFoundPng} alt=\"\"/>\n                </div>\n                <p>{!searchRequest.searched ? 'Search a user by name' : 'No user found'}</p>\n            </div> : \n            <div className=\"no-sent-req\">\n                <CircularProgress />\n            </div>\n    )\n}\n\nfunction PendingRequests(props : any){\n    const { friendRequest, acceptFriendRequest, rejectFriendRequest } = props;\n    const totalRequests = friendRequest.getRequests() || [];\n    return(\n        totalRequests.length > 0 ?\n        <div className=\"request-content--SentRequests\">\n           {\n               totalRequests.map((request : IFriendRequest, i : number)  => {\n                   return (\n                        <div className=\"sentrequests-item\" key={i}>\n                        <div className=\"request-profile\">\n                            <div className=\"requestitem-profile\">\n                                <img src={emptyProfile} />\n                            </div>\n                            <div className=\"requestitem-profilename\">\n                                {request.displayName}\n                            </div>\n                        </div>\n                        <div className=\"requestitem-actions\">\n                            <button className=\"accept-r-btn\"\n                                disabled={request.isRejecting || request.isApproving}\n                                onClick={() => acceptFriendRequest(request.id)}\n                            >\n                                <CheckCircleOutlineIcon/>\n                                <span>{request.isApproving ? 'Accepting...' : 'Accept'}</span>\n                            </button>\n                            <button className=\"reject-r-btn\"\n                                disabled={request.isRejecting || request.isApproving}\n                                onClick={() => rejectFriendRequest(request.id)}\n                            >\n                                <CancelIcon/>\n                                <span>{request.isRejecting ? 'Reject...' : 'Reject'}</span>\n                            </button>\n                        </div>\n                    </div>\n                   )\n               })\n           }\n        </div>\n        :\n        <div className=\"no-sent-req\">\n            <div>\n                <img src={noReqFoundPng} alt=\"\"/>\n            </div>\n            <p>No Friend Request found</p>\n        </div>\n    )\n}",{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","severity":1,"message":"252","line":7,"column":5,"nodeType":"253","messageId":"254","endLine":7,"endColumn":15},{"ruleId":"255","severity":1,"message":"256","line":47,"column":7,"nodeType":"257","endLine":47,"endColumn":9,"suggestions":"258"},{"ruleId":"259","severity":1,"message":"260","line":33,"column":113,"nodeType":"261","messageId":"262","endLine":33,"endColumn":114,"fix":"263"},{"ruleId":"259","severity":1,"message":"260","line":42,"column":19,"nodeType":"261","messageId":"262","endLine":42,"endColumn":20,"fix":"264"},{"ruleId":"251","severity":1,"message":"265","line":4,"column":10,"nodeType":"253","messageId":"254","endLine":4,"endColumn":19},{"ruleId":"251","severity":1,"message":"266","line":5,"column":8,"nodeType":"253","messageId":"254","endLine":5,"endColumn":15},{"ruleId":"251","severity":1,"message":"267","line":6,"column":31,"nodeType":"253","messageId":"254","endLine":6,"endColumn":43},{"ruleId":"251","severity":1,"message":"268","line":7,"column":8,"nodeType":"253","messageId":"254","endLine":7,"endColumn":11},{"ruleId":"251","severity":1,"message":"269","line":10,"column":11,"nodeType":"253","messageId":"254","endLine":10,"endColumn":19},{"ruleId":"251","severity":1,"message":"270","line":11,"column":11,"nodeType":"253","messageId":"254","endLine":11,"endColumn":18},{"ruleId":"255","severity":1,"message":"271","line":38,"column":7,"nodeType":"257","endLine":38,"endColumn":9,"suggestions":"272"},{"ruleId":"251","severity":1,"message":"273","line":7,"column":10,"nodeType":"253","messageId":"254","endLine":7,"endColumn":21},{"ruleId":"251","severity":1,"message":"274","line":27,"column":19,"nodeType":"253","messageId":"254","endLine":27,"endColumn":42},{"ruleId":"255","severity":1,"message":"275","line":69,"column":8,"nodeType":"257","endLine":69,"endColumn":10,"suggestions":"276"},{"ruleId":"251","severity":1,"message":"277","line":1,"column":17,"nodeType":"253","messageId":"254","endLine":1,"endColumn":26},{"ruleId":"251","severity":1,"message":"278","line":5,"column":8,"nodeType":"253","messageId":"254","endLine":5,"endColumn":13},{"ruleId":"251","severity":1,"message":"279","line":37,"column":11,"nodeType":"253","messageId":"254","endLine":37,"endColumn":21},{"ruleId":"251","severity":1,"message":"280","line":1,"column":28,"nodeType":"253","messageId":"254","endLine":1,"endColumn":36},{"ruleId":"255","severity":1,"message":"281","line":23,"column":7,"nodeType":"257","endLine":23,"endColumn":9,"suggestions":"282"},{"ruleId":"251","severity":1,"message":"283","line":3,"column":20,"nodeType":"253","messageId":"254","endLine":3,"endColumn":25},{"ruleId":"251","severity":1,"message":"284","line":4,"column":8,"nodeType":"253","messageId":"254","endLine":4,"endColumn":13},{"ruleId":"251","severity":1,"message":"285","line":2,"column":18,"nodeType":"253","messageId":"254","endLine":2,"endColumn":25},{"ruleId":"251","severity":1,"message":"286","line":1,"column":17,"nodeType":"253","messageId":"254","endLine":1,"endColumn":27},{"ruleId":"251","severity":1,"message":"287","line":3,"column":5,"nodeType":"253","messageId":"254","endLine":3,"endColumn":11},{"ruleId":"251","severity":1,"message":"283","line":4,"column":5,"nodeType":"253","messageId":"254","endLine":4,"endColumn":10},{"ruleId":"251","severity":1,"message":"288","line":5,"column":5,"nodeType":"253","messageId":"254","endLine":5,"endColumn":18},{"ruleId":"251","severity":1,"message":"289","line":7,"column":8,"nodeType":"253","messageId":"254","endLine":7,"endColumn":14},{"ruleId":"251","severity":1,"message":"290","line":8,"column":8,"nodeType":"253","messageId":"254","endLine":8,"endColumn":12},{"ruleId":"251","severity":1,"message":"291","line":9,"column":8,"nodeType":"253","messageId":"254","endLine":9,"endColumn":14},{"ruleId":"251","severity":1,"message":"292","line":10,"column":8,"nodeType":"253","messageId":"254","endLine":10,"endColumn":15},{"ruleId":"251","severity":1,"message":"293","line":12,"column":8,"nodeType":"253","messageId":"254","endLine":12,"endColumn":20},{"ruleId":"251","severity":1,"message":"294","line":13,"column":29,"nodeType":"253","messageId":"254","endLine":13,"endColumn":42},{"ruleId":"295","severity":1,"message":"296","line":24,"column":29,"nodeType":"297","endLine":24,"endColumn":137},{"ruleId":"255","severity":1,"message":"298","line":27,"column":8,"nodeType":"257","endLine":27,"endColumn":10,"suggestions":"299"},{"ruleId":"251","severity":1,"message":"300","line":10,"column":21,"nodeType":"253","messageId":"254","endLine":10,"endColumn":31},{"ruleId":"251","severity":1,"message":"301","line":12,"column":24,"nodeType":"253","messageId":"254","endLine":12,"endColumn":37},{"ruleId":"251","severity":1,"message":"302","line":25,"column":11,"nodeType":"253","messageId":"254","endLine":25,"endColumn":20},{"ruleId":"251","severity":1,"message":"280","line":2,"column":43,"nodeType":"253","messageId":"254","endLine":2,"endColumn":51},{"ruleId":"251","severity":1,"message":"303","line":3,"column":10,"nodeType":"253","messageId":"254","endLine":3,"endColumn":22},{"ruleId":"255","severity":1,"message":"304","line":38,"column":8,"nodeType":"257","endLine":38,"endColumn":10,"suggestions":"305"},{"ruleId":"251","severity":1,"message":"288","line":5,"column":5,"nodeType":"253","messageId":"254","endLine":5,"endColumn":18},{"ruleId":"251","severity":1,"message":"306","line":16,"column":19,"nodeType":"253","messageId":"254","endLine":16,"endColumn":24},{"ruleId":"251","severity":1,"message":"307","line":2,"column":50,"nodeType":"253","messageId":"254","endLine":2,"endColumn":58},{"ruleId":"255","severity":1,"message":"308","line":143,"column":8,"nodeType":"257","endLine":143,"endColumn":28,"suggestions":"309"},{"ruleId":"251","severity":1,"message":"310","line":4,"column":8,"nodeType":"253","messageId":"254","endLine":4,"endColumn":25},{"ruleId":"251","severity":1,"message":"311","line":7,"column":23,"nodeType":"253","messageId":"254","endLine":7,"endColumn":35},{"ruleId":"251","severity":1,"message":"312","line":3,"column":8,"nodeType":"253","messageId":"254","endLine":3,"endColumn":23},{"ruleId":"251","severity":1,"message":"289","line":6,"column":8,"nodeType":"253","messageId":"254","endLine":6,"endColumn":14},{"ruleId":"251","severity":1,"message":"270","line":9,"column":11,"nodeType":"253","messageId":"254","endLine":9,"endColumn":18},{"ruleId":"251","severity":1,"message":"303","line":5,"column":10,"nodeType":"253","messageId":"254","endLine":5,"endColumn":22},{"ruleId":"251","severity":1,"message":"306","line":12,"column":20,"nodeType":"253","messageId":"254","endLine":12,"endColumn":25},{"ruleId":"251","severity":1,"message":"313","line":27,"column":29,"nodeType":"253","messageId":"254","endLine":27,"endColumn":35},{"ruleId":"255","severity":1,"message":"256","line":36,"column":8,"nodeType":"257","endLine":36,"endColumn":33,"suggestions":"314"},{"ruleId":"251","severity":1,"message":"315","line":56,"column":20,"nodeType":"253","messageId":"254","endLine":56,"endColumn":33},{"ruleId":"251","severity":1,"message":"316","line":5,"column":8,"nodeType":"253","messageId":"254","endLine":5,"endColumn":14},{"ruleId":"251","severity":1,"message":"303","line":6,"column":10,"nodeType":"253","messageId":"254","endLine":6,"endColumn":22},{"ruleId":"251","severity":1,"message":"306","line":11,"column":19,"nodeType":"253","messageId":"254","endLine":11,"endColumn":24},{"ruleId":"255","severity":1,"message":"317","line":66,"column":7,"nodeType":"257","endLine":66,"endColumn":9,"suggestions":"318"},{"ruleId":"251","severity":1,"message":"319","line":13,"column":9,"nodeType":"253","messageId":"254","endLine":13,"endColumn":23},{"ruleId":"295","severity":1,"message":"296","line":66,"column":29,"nodeType":"297","endLine":66,"endColumn":51},{"ruleId":"251","severity":1,"message":"320","line":8,"column":10,"nodeType":"253","messageId":"254","endLine":8,"endColumn":18},{"ruleId":"251","severity":1,"message":"321","line":13,"column":9,"nodeType":"253","messageId":"254","endLine":13,"endColumn":18},{"ruleId":"251","severity":1,"message":"322","line":14,"column":9,"nodeType":"253","messageId":"254","endLine":14,"endColumn":16},{"ruleId":"255","severity":1,"message":"323","line":43,"column":9,"nodeType":"257","endLine":43,"endColumn":31,"suggestions":"324"},{"ruleId":"255","severity":1,"message":"325","line":50,"column":9,"nodeType":"257","endLine":50,"endColumn":20,"suggestions":"326"},{"ruleId":"295","severity":1,"message":"296","line":78,"column":25,"nodeType":"297","endLine":78,"endColumn":66},{"ruleId":"295","severity":1,"message":"296","line":109,"column":25,"nodeType":"297","endLine":109,"endColumn":49},{"ruleId":"327","severity":1,"message":"328","line":137,"column":49,"nodeType":"329","messageId":"330","endLine":137,"endColumn":51},{"ruleId":"327","severity":1,"message":"331","line":137,"column":88,"nodeType":"329","messageId":"330","endLine":137,"endColumn":90},{"ruleId":"327","severity":1,"message":"328","line":137,"column":88,"nodeType":"329","messageId":"330","endLine":137,"endColumn":90},{"ruleId":"327","severity":1,"message":"331","line":137,"column":109,"nodeType":"329","messageId":"330","endLine":137,"endColumn":111},{"ruleId":"295","severity":1,"message":"296","line":122,"column":33,"nodeType":"297","endLine":122,"endColumn":59},{"ruleId":"295","severity":1,"message":"296","line":166,"column":33,"nodeType":"297","endLine":166,"endColumn":59},"no-native-reassign",["332"],"no-negated-in-lhs",["333"],"@typescript-eslint/no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["334"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"335","text":"336"},{"range":"337","text":"336"},"'IResponse' is defined but never used.","'actions' is defined but never used.","'toastMessage' is defined but never used.","'API' is defined but never used.","'dispatch' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userService?.name'. Either include it or remove the dependency array.",["338"],"'IToastStore' is defined but never used.","'response' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["339"],"'useEffect' is defined but never used.","'Utils' is defined but never used.","'getProfile' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'storeIdentity'. Either include them or remove the dependency array.",["340"],"'Route' is defined but never used.","'Login' is defined but never used.","'Message' is defined but never used.","'useContext' is defined but never used.","'Switch' is defined but never used.","'BrowserRouter' is defined but never used.","'Routes' is defined but never used.","'Chat' is defined but never used.","'Navbar' is defined but never used.","'Request' is defined but never used.","'emptyProfile' is defined but never used.","'SocketContext' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'fetchProfile'. Either include it or remove the dependency array.",["341"],"'setFocuses' is assigned a value but never used.","'setInProgress' is assigned a value but never used.","'resendOtp' is assigned a value but never used.","'eventEmitter' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["342"],"'error' is assigned a value but never used.","'IRequest' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'fetchRequest'. Either include them or remove the dependency array.",["343"],"'MessageAreaRender' is defined but never used.","'setFriendRef' is assigned a value but never used.","'BermudaTriangle' is defined but never used.","'cancel' is assigned a value but never used.",["344"],"'fetchMessages' is defined but never used.","'Friend' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchFriends', 'fetchFriendsBehind', 'friends.length', and 'ids'. Either include them or remove the dependency array.",["345"],"'selectedFriend' is assigned a value but never used.","'IMessage' is defined but never used.","'isLoading' is assigned a value but never used.","'friends' is assigned a value but never used.","React Hook useMemo has missing dependencies: 'activeFriend', 'messageRandom', and 'newFriendSelected'. Either include them or remove the dependency array.",["346"],"React Hook useEffect has missing dependencies: 'friend?.status', 'id', 'messageRenderContext.timeStampId', and 'selectedFriend?.id'. Either include them or remove the dependency array.",["347"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","no-global-assign","no-unsafe-negation",{"desc":"348","fix":"349"},[1718,1737]," \n                .",[2187,2206],{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},"Update the dependencies array to be: [dispatch]",{"range":"370","text":"371"},"Update the dependencies array to be: [userService?.name]",{"range":"372","text":"373"},"Update the dependencies array to be: [history]",{"range":"374","text":"375"},"Update the dependencies array to be: [history, storeIdentity]",{"range":"376","text":"377"},"Update the dependencies array to be: [fetchProfile]",{"range":"378","text":"379"},"Update the dependencies array to be: [dispatch, id]",{"range":"380","text":"381"},"Update the dependencies array to be: [dispatch, fetchRequest, requestContext.tab]",{"range":"382","text":"383"},"Update the dependencies array to be: [activeFriendId, dispatch, friends]",{"range":"384","text":"385"},"Update the dependencies array to be: [fetchFriends, fetchFriendsBehind, friends.length, ids]",{"range":"386","text":"387"},"Update the dependencies array to be: [friend?.Messages, activeFriend, messageRandom, newFriendSelected]",{"range":"388","text":"389"},"Update the dependencies array to be: [friend?.status, id, messageRenderContext.timeStampId, selectedFriend?.id, timestamp]",{"range":"390","text":"391"},[1915,1917],"[dispatch]",[1738,1740],"[userService?.name]",[3659,3661],"[history]",[982,984],"[history, storeIdentity]",[1050,1052],"[fetchProfile]",[2016,2018],"[dispatch, id]",[7184,7204],"[dispatch, fetchRequest, requestContext.tab]",[1751,1776],"[activeFriendId, dispatch, friends]",[3205,3207],"[fetchFriends, fetchFriendsBehind, friends.length, ids]",[1698,1720],"[friend?.Messages, activeFriend, messageRandom, newFriendSelected]",[2042,2053],"[friend?.status, id, messageRenderContext.timeStampId, selectedFriend?.id, timestamp]"]