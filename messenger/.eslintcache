[{"/home/mukul/mukul/qmc/messenger/messenger/src/components/main.tsx":"1","/home/mukul/mukul/qmc/messenger/messenger/src/components/login/login.tsx":"2","/home/mukul/mukul/qmc/messenger/messenger/src/shared/components/backdrop/backdrop.tsx":"3","/home/mukul/mukul/qmc/messenger/messenger/src/shared/material-modules.ts":"4","/home/mukul/mukul/qmc/messenger/messenger/src/shared/components/otp/otp.tsx":"5","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/chatsection/chatsection.tsx":"6","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/chatsection/friends/friends.tsx":"7","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/chatsection/chatarea/ui/chatarearender.tsx":"8","/home/mukul/mukul/qmc/messenger/messenger/src/shared/server.ts":"9","/home/mukul/mukul/qmc/messenger/messenger/src/shared/components/toast/toast.tsx":"10","/home/mukul/mukul/qmc/messenger/messenger/src/shared/utils.ts":"11","/home/mukul/mukul/qmc/messenger/messenger/src/components/contexts/userContext.tsx":"12","/home/mukul/mukul/qmc/messenger/messenger/src/components/profile/renderer.tsx":"13","/home/mukul/mukul/qmc/messenger/messenger/src/components/profile/profile.tsx":"14","/home/mukul/mukul/qmc/messenger/messenger/src/shared/routes.ts":"15","/home/mukul/mukul/qmc/messenger/messenger/src/components/login/renderer.tsx":"16","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/chatsection/friends/ui/friendsrender.tsx":"17","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/home.tsx":"18","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/homeui/homerenderer.tsx":"19","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/navbar/navbar.tsx":"20"},{"size":2563,"mtime":1606940653358,"results":"21","hashOfConfig":"22"},{"size":3161,"mtime":1606940822122,"results":"23","hashOfConfig":"22"},{"size":323,"mtime":1606861580361,"results":"24","hashOfConfig":"22"},{"size":2760,"mtime":1607091612835,"results":"25","hashOfConfig":"22"},{"size":4842,"mtime":1606861580361,"results":"26","hashOfConfig":"22"},{"size":158,"mtime":1606861580361,"results":"27","hashOfConfig":"22"},{"size":142,"mtime":1606861580361,"results":"28","hashOfConfig":"22"},{"size":6565,"mtime":1607108125803,"results":"29","hashOfConfig":"22"},{"size":8498,"mtime":1606940504995,"results":"30","hashOfConfig":"22"},{"size":408,"mtime":1606863035779,"results":"31","hashOfConfig":"22"},{"size":1590,"mtime":1607089734390,"results":"32","hashOfConfig":"22"},{"size":522,"mtime":1606938638047,"results":"33","hashOfConfig":"22"},{"size":3447,"mtime":1606943579866,"results":"34","hashOfConfig":"22"},{"size":2769,"mtime":1606943427400,"results":"35","hashOfConfig":"22"},{"size":306,"mtime":1606944075038,"results":"36","hashOfConfig":"22"},{"size":2877,"mtime":1606861580361,"results":"37","hashOfConfig":"22"},{"size":1443,"mtime":1606861580361,"results":"38","hashOfConfig":"22"},{"size":347,"mtime":1606943506483,"results":"39","hashOfConfig":"22"},{"size":1023,"mtime":1606945895052,"results":"40","hashOfConfig":"22"},{"size":138,"mtime":1606861580361,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1c7yglx",{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"47"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"47"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"47"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mukul/mukul/qmc/messenger/messenger/src/components/main.tsx",["90","91"],"/home/mukul/mukul/qmc/messenger/messenger/src/components/login/login.tsx",["92"],"import React, { useEffect, useReducer, useContext } from 'react';\nimport BackdropLoader from '../../shared/components/backdrop/backdrop';\nimport Otp from '../../shared/components/otp/otp';\nimport Api from '../../shared/server';\nimport Utils, { toggleLoader, toastMessage, setGlobalToggleFunc } from '../../shared/utils';\nimport LoginUi from './renderer';\nimport { useHistory } from \"react-router-dom\";\nimport Routes from '../../shared/routes';\nimport { UserContext } from '../contexts/userContext';\nexport default function Login() {\n    const userContext: any = useContext(UserContext);\n    const history = useHistory();\n    const [toggle, setToggle] = useReducer(setGlobalToggleFunc,\n        { redirect: true, otpReady: false, emailMobile: '', otp: '', isLoading: false })\n    useEffect(() => {\n        document.title = 'Messenger';\n        if (localStorage.length === 0) {\n            document.title = 'Messenger - Login';\n            setToggle({ redirect: false })\n        } else {\n            //redirect\n            history.push(Routes.home)\n        }\n    }, []);\n    const onEmailMobile = async (data: String) => {\n        try {\n            setToggle({ isLoading: true, otpReady: false })\n            await Api.generateOtp(data, false);\n            setToggle({ emailMobile: data, otpReady: true, isLoading: false })\n            toastMessage.next({ type: true, message: `OTP sent to <strong>${data}</strong>`, duration: 3000 })\n        } catch (e) {\n            setToggle({ isLoading: false })\n            toastMessage.next({ type: false, message: Utils.parseError(e), duration: 2000 })\n        }\n    }\n\n    const submitOtp = async (otp: string) => {\n        try {\n            toggleLoader.next(true);\n            const response: any = await Api.verifyOtp(otp, toggle.emailMobile);\n            setToggle({ otp: otp, otpReady: false });\n            toggleLoader.next(false);\n            localStorage.setItem('id', toggle.emailMobile);\n            localStorage.setItem('secret', response.data.message);\n            if (response.status === 201) {\n                userContext.set({\n                    user: toggle.emailMobile,\n                    name: '',\n                    blob: null\n                });\n                history.push({ pathname: '/profile', state: { header: 'Complete your profile', identity: toggle.emailMobile } })\n                return\n            }\n            userContext.set({ user: toggle.emailMobile });\n            history.push({ pathname: '/home' })\n        } catch (e) {\n            toggleLoader.next(false);\n            const currErr = Utils.parseError(e);\n            toastMessage.next({ type: false, message: Utils.globalDefaultError !== currErr ? currErr : 'Invalid OTP', duration: 2000 })\n        }\n    }\n    const otp = toggle.otpReady ?\n        <Otp verifyOtp={submitOtp} resend={() => onEmailMobile(toggle.emailMobile)} cancelOtp={() => setToggle({ otpReady: false })} /> : null;\n    const jsx =\n        !toggle.redirect ?\n            <>\n                <LoginUi onEmailMobile={onEmailMobile} {...toggle} />\n                {otp}\n            </> :\n            <BackdropLoader open={toggle.redirect} />\n    return (jsx)\n}",["93","94"],"/home/mukul/mukul/qmc/messenger/messenger/src/shared/components/backdrop/backdrop.tsx",[],"/home/mukul/mukul/qmc/messenger/messenger/src/shared/material-modules.ts",[],"/home/mukul/mukul/qmc/messenger/messenger/src/shared/components/otp/otp.tsx",["95","96","97"],"import React, { createRef, useEffect, useState } from 'react';\nimport './otp.scss'\nimport {\n    Dialog, Button, ReplayIcon, CloseIcon, CheckCircleOutlineIcon\n} from '../../material-modules';\nexport default function Otp(props: any) {\n    const { verifyOtp, resend } = props;\n    const [focusOn, setFocusOn] = useState(0)\n    const [values, setValues] = useState(({ 0: '', 1: '', 2: '', 3: '', 4: '', 5: '' } as any))\n    const [focuses, setFocuses] = useState((Array(6).fill(true).map(_ => createRef()) as any))\n    const [otpValid, setOtpValid] = useState(('' as any))\n    const [inProgress, setInProgress] = useState(false)\n    const onClic = (e: any) => {\n        setFocusOn(e)\n    }\n    useEffect(() => {\n        const otp = Object.values(values).map(v => v).join('')\n        if (`${otp}`.length === 6) {\n            setOtpValid(otp)\n            return;\n        }\n        setOtpValid(null)\n    }, [values])\n\n    const resendOtp = (e: any) => {\n    }\n\n    const onKeyU = (e: any, i: number) => {\n        if (e.key <= 9 || e.key >= 0) {\n            if (i < 5) {\n                setFocusOn(i + 1)\n                focuses[i + 1].current.focus()\n            }\n        }\n    }\n    const verify = () => {\n        if (!otpValid || inProgress) { return }\n        verifyOtp(otpValid);\n    }\n    const onKeyP = (e: any, i: number) => {\n        if (e.keyCode === 13) {\n            verify()\n            return;\n        }\n        if (e.keyCode === 8 && (focusOn) > 0) {\n            const cV: any = { ...values }\n            cV[i] = ''\n            setValues(cV)\n            if (values[i] === '') {\n                setFocusOn(focusOn - 1)\n                focuses[focusOn - 1].current.focus()\n            }\n        }\n    }\n\n    const onChang = (e: any, i: number) => {\n        const val = `${e.target.value}`;\n        if (!isNaN(Number(val))) {\n            const cV: any = { ...values }\n            cV[i] = val.length === 1 ? val : val.charAt(val.length - 1)\n            setValues(cV)\n        }\n    }\n    const isEnabled = otpValid && !inProgress\n    return (\n        <div className='otp-parent'>\n            <Dialog\n                open={true}>\n                <div className='otp-modal'>\n                    <div className='goBack'>\n                        {\n                            !inProgress ?\n                                <CloseIcon className=\"close-otp\" onClick={e => {\n                                    if (!inProgress) { props.cancelOtp() }\n                                }} /> :\n                                null\n                        }\n\n                    </div>\n                    <div className=\"otp-title\">\n                        Enter OTP\n                    </div>\n                    <div className=\"otp-input\">\n                        {Array(6).fill(true).map((v, i) => {\n                            return <input\n                                className='otp-inp'\n                                key={i}\n                                ref={focuses[i]}\n                                id={`otp-inp-${i}`}\n                                // autoFocus={i == focusOn}\n                                onClick={e => onClic(i)}\n                                onKeyPress={e => onKeyU(e, i)}\n                                value={values[i]}\n                                onKeyDown={e => onKeyP(e, i)}\n                                onChange={e => onChang(e, i)}\n                                onFocus={e => e.target.select()}\n                                autoFocus={i === 0}\n                            />\n                        })}\n                    </div>\n                    <div className=\"otp-btns\">\n                        <span className='otp-verify'>\n                            <Button\n                                variant=\"contained\"\n                                className={isEnabled ? 'otp-verify-btn' : 'otp-verify-btn bg-empty-dis'}\n                                onClick={verify}\n                                disabled={!isEnabled}\n                            >\n                                Verify\n                                <CheckCircleOutlineIcon className=\"icon\" />\n                            </Button>\n                        </span>\n                        <span className='otp-resend'>\n                            <Button\n                                variant=\"contained\"\n                                className={!inProgress ? 'otp-resend-btn' : 'otp-resend-btn bg-empty-dis'}\n                                disabled={inProgress}\n                                onClick={resend}\n                            >\n                                Resend\n                                <ReplayIcon className=\"icon\" />\n                            </Button>\n                        </span>\n                    </div>\n                </div>\n            </Dialog>\n        </div>)\n}","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/chatsection/chatsection.tsx",[],["98","99"],"/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/chatsection/friends/friends.tsx",[],"/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/chatsection/chatarea/ui/chatarearender.tsx",["100","101","102","103","104","105","106"],"/home/mukul/mukul/qmc/messenger/messenger/src/shared/server.ts",[],"/home/mukul/mukul/qmc/messenger/messenger/src/shared/components/toast/toast.tsx",["107"],"/home/mukul/mukul/qmc/messenger/messenger/src/shared/utils.ts",[],"/home/mukul/mukul/qmc/messenger/messenger/src/components/contexts/userContext.tsx",["108"],"/home/mukul/mukul/qmc/messenger/messenger/src/components/profile/renderer.tsx",["109","110","111","112","113","114"],"/home/mukul/mukul/qmc/messenger/messenger/src/components/profile/profile.tsx",["115","116"],"import React, { useContext, useEffect, useReducer } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Routes from '../../shared/routes';\nimport Api from '../../shared/server';\nimport Utils, { setGlobalToggleFunc, toastMessage } from '../../shared/utils';\nimport { UserContext } from '../contexts/userContext';\nimport ProfileRenderer from './renderer';\nexport default function Profile() {\n    const history = useHistory();\n    const userContext: any = useContext(UserContext);\n    const userContextGet = userContext.get;\n    const stateData = { loading: true, name: '', blob: null, user: localStorage.getItem('id'), changed: false };\n    const [state, setState] = useReducer(setGlobalToggleFunc, stateData);\n    const updateProfile = async () => {\n        try {\n            setState({ loading: true })\n            await Api.updateProfile(state.name, state.blob);\n            setState({ loading: false, changed: false })\n            userContext.set({ name: state.name, blob: state.blob })\n            toastMessage.next({ type: true, message: 'Profile updated successfully' });\n            history.push(Routes.home)\n        } catch (e) {\n            setState({ loading: false })\n            toastMessage.next({ type: false, message: Utils.parseError(e), duration: 2000 })\n        }\n    }\n    const getProfile = async () => {\n        document.title = 'Messenger - Profile';\n        if (localStorage.length === 0) {\n            history.push(Routes.login);\n        }\n        else if (!userContextGet.name) {\n            try {\n                setState({ loading: true })\n                const profileResponse: any = await Api.getProfile('_');\n                const profile = profileResponse.data && profileResponse.data[0] ? profileResponse.data[0] : null;\n                setState({ loading: false })\n                if (profile) {\n                    const blob = `${profile.image_blob}` == 'null' ? null : profile.image_blob;\n                    userContext.set({ user: profile.identity, name: profile.name, blob: blob })\n                    setState({ loading: false, name: profile.name, blob: blob, user: profile.identity })\n                } else {\n                    toastMessage.next({ type: false, message: 'Profile not set' })\n                }\n            } catch (e) {\n                setState({ loading: false })\n                toastMessage.next({ type: false, message: Utils.parseError(e), duration: 2000 })\n            }\n        } else {\n            setState({ loading: false, name: userContextGet.name, blob: userContextGet.blob, user: userContextGet.user })\n        }\n    }\n    useEffect(() => { getProfile(); console.log(userContextGet) }, [])\n    return (<ProfileRenderer {...state} updateProfile={updateProfile} setForm={setState} />)\n}","/home/mukul/mukul/qmc/messenger/messenger/src/shared/routes.ts",[],"/home/mukul/mukul/qmc/messenger/messenger/src/components/login/renderer.tsx",["117"],"import React, { useState } from 'react';\nimport namasteImg from '../../assets/namaste.png'\nimport googleImg from '../../assets/google.png'\nimport './login.scss'\nimport { TextField, Button, CircularProgress } from '../../shared/material-modules';\nimport Utils from '../../shared/utils';\nexport default function LoginUi(props: any) {\n    const { onEmailMobile, isLoading } = props;\n    const [emailMobile, setEmailMobile] = useState<String>('');\n    return (\n        <>\n            <div className=\"login\">\n                <div className=\"login-layout\">\n                    <div className=\"login-img margin-auto\">\n                        <img src={namasteImg} alt=\"namaste\" width=\"150px\" height=\"150px\" />\n                    </div>\n                    <div className=\"login-form margin-auto\">\n                        <div className=\"mob-logo\" style={{ display: 'none' }}>\n                            <img src={namasteImg} alt=\"namaste\" width=\"100px\" height=\"100px\" />\n                        </div>\n                        <div className=\"form\">\n                            <TextField\n                                id=\"outlined-basic\"\n                                placeholder=\"Email or Mobile\"\n                                variant=\"outlined\"\n                                className=\"input-text\"\n                                onChange={e => setEmailMobile(e.target.value)}\n                            />\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className=\"submit\"\n                                onClick={e => onEmailMobile(emailMobile)}\n                                disabled={!Utils.validateEmailMobile(emailMobile.trim()) || isLoading}\n                            >\n                                {\n                                    isLoading ?\n                                    <CircularProgress className=\"submit__loader\"/>\n                                    : 'Submit' \n                                }\n                            </Button>\n                            <div>\n                                <Button\n                                    variant=\"contained\"\n                                    className=\"continue-google\"\n                                    onClick={e => onEmailMobile({ thirdParty: 'google' })}\n                                    disabled={isLoading}\n                                >\n                                    Google\n                                </Button>\n                                <span className=\"google-img\">\n                                    <img src={googleImg} width=\"20px\" />\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>)\n}","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/chatsection/friends/ui/friendsrender.tsx",["118"],"import React from 'react';\nimport './friends.scss'\nimport emptyProfile from '../../../../../../assets/emptyProfile.webp';\nimport {TextField, SearchIcon} from '../../../../../../shared/material-modules';\nexport default function FriendsRender() {\n    return (\n    <div className=\"friendsrender-layout\">\n        <div className=\"search-friends pad-b-10\">\n            <div className=\"search-txt\">Search</div>\n            <TextField\n                id=\"outlined-basic\"\n                placeholder=\"Search Friends\"\n                variant=\"outlined\"\n                className=\"search-inp\"\n            />\n            <SearchIcon className=\"search-icon\"/>\n        </div>\n        <div className=\"search-results\">\n            {\n                Array(102).fill(1).map(v => {\n                    return (\n                            <div className=\"friend-fragment mar-b-10\">\n                                <div className=\"profile-pic\">\n                                    <img id=\"profile-pic\" src={emptyProfile} width=\"50px\" height=\"50px\"/>\n                                </div>\n                                <div className=\"profile-details\">\n                                    <div id='p-name'>Mukul </div>\n                                    <div id='frnd-status'><strong>ACTIVE</strong></div>\n                                </div>\n                        </div>\n                    )\n                })\n            }\n        </div>\n    </div>)\n}","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/home.tsx",["119"],"import React, { useContext, useEffect } from 'react';\nimport { UserContext } from '../contexts/userContext';\nimport HomeRenderer from './homeui/homerenderer';\nexport default function Home() {\n    const userContext: any = useContext(UserContext);\n    useEffect(() => {\n        console.log(userContext.get)\n    }, [])\n    return (<HomeRenderer />)\n}","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/homeui/homerenderer.tsx",["120","121"],"/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/navbar/navbar.tsx",[],{"ruleId":"122","severity":1,"message":"123","line":10,"column":8,"nodeType":"124","messageId":"125","endLine":10,"endColumn":13},{"ruleId":"122","severity":1,"message":"126","line":20,"column":11,"nodeType":"124","messageId":"125","endLine":20,"endColumn":14},{"ruleId":"127","severity":1,"message":"128","line":24,"column":8,"nodeType":"129","endLine":24,"endColumn":10,"suggestions":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"122","severity":1,"message":"135","line":10,"column":21,"nodeType":"124","messageId":"125","endLine":10,"endColumn":31},{"ruleId":"122","severity":1,"message":"136","line":12,"column":24,"nodeType":"124","messageId":"125","endLine":12,"endColumn":37},{"ruleId":"122","severity":1,"message":"137","line":25,"column":11,"nodeType":"124","messageId":"125","endLine":25,"endColumn":20},{"ruleId":"131","replacedBy":"138"},{"ruleId":"133","replacedBy":"139"},{"ruleId":"122","severity":1,"message":"140","line":3,"column":8,"nodeType":"124","messageId":"125","endLine":3,"endColumn":17},{"ruleId":"122","severity":1,"message":"141","line":4,"column":31,"nodeType":"124","messageId":"125","endLine":4,"endColumn":36},{"ruleId":"122","severity":1,"message":"142","line":26,"column":12,"nodeType":"124","messageId":"125","endLine":26,"endColumn":22},{"ruleId":"122","severity":1,"message":"143","line":27,"column":12,"nodeType":"124","messageId":"125","endLine":27,"endColumn":22},{"ruleId":"122","severity":1,"message":"144","line":27,"column":24,"nodeType":"124","messageId":"125","endLine":27,"endColumn":37},{"ruleId":"145","severity":1,"message":"146","line":31,"column":9,"nodeType":"147","messageId":"148","endLine":49,"endColumn":12},{"ruleId":"149","severity":1,"message":"150","line":66,"column":42,"nodeType":"151","messageId":"152","endLine":66,"endColumn":44},{"ruleId":"122","severity":1,"message":"153","line":1,"column":17,"nodeType":"124","messageId":"125","endLine":1,"endColumn":26},{"ruleId":"122","severity":1,"message":"153","line":2,"column":17,"nodeType":"124","messageId":"125","endLine":2,"endColumn":26},{"ruleId":"122","severity":1,"message":"154","line":1,"column":28,"nodeType":"124","messageId":"125","endLine":1,"endColumn":31},{"ruleId":"122","severity":1,"message":"153","line":1,"column":33,"nodeType":"124","messageId":"125","endLine":1,"endColumn":42},{"ruleId":"122","severity":1,"message":"155","line":1,"column":44,"nodeType":"124","messageId":"125","endLine":1,"endColumn":50},{"ruleId":"122","severity":1,"message":"156","line":3,"column":8,"nodeType":"124","messageId":"125","endLine":3,"endColumn":18},{"ruleId":"122","severity":1,"message":"157","line":7,"column":64,"nodeType":"124","messageId":"125","endLine":7,"endColumn":71},{"ruleId":"158","severity":1,"message":"159","line":25,"column":29,"nodeType":"160","endLine":25,"endColumn":137},{"ruleId":"149","severity":1,"message":"161","line":39,"column":58,"nodeType":"151","messageId":"152","endLine":39,"endColumn":60},{"ruleId":"127","severity":1,"message":"162","line":53,"column":68,"nodeType":"129","endLine":53,"endColumn":70,"suggestions":"163"},{"ruleId":"158","severity":1,"message":"159","line":52,"column":37,"nodeType":"160","endLine":52,"endColumn":73},{"ruleId":"158","severity":1,"message":"159","line":24,"column":37,"nodeType":"160","endLine":24,"endColumn":106},{"ruleId":"127","severity":1,"message":"164","line":8,"column":8,"nodeType":"129","endLine":8,"endColumn":10,"suggestions":"165"},{"ruleId":"122","severity":1,"message":"153","line":1,"column":17,"nodeType":"124","messageId":"125","endLine":1,"endColumn":26},{"ruleId":"122","severity":1,"message":"166","line":8,"column":5,"nodeType":"124","messageId":"125","endLine":8,"endColumn":15},"@typescript-eslint/no-unused-vars","'Utils' is defined but never used.","Identifier","unusedVar","'his' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["167"],"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"'setFocuses' is assigned a value but never used.","'setInProgress' is assigned a value but never used.","'resendOtp' is assigned a value but never used.",["168"],["169"],"'bgChatImg' is defined but never used.","'Modal' is defined but never used.","'scrollDate' is assigned a value but never used.","'hoverTimer' is assigned a value but never used.","'setHoverTimer' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'Ref' is defined but never used.","'useRef' is defined but never used.","'namasteImg' is defined but never used.","'changed' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'getProfile' and 'userContextGet'. Either include them or remove the dependency array.",["170"],"React Hook useEffect has a missing dependency: 'userContext.get'. Either include it or remove the dependency array.",["171"],"'useHistory' is defined but never used.",{"desc":"172","fix":"173"},"no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [history]",{"range":"178","text":"179"},"Update the dependencies array to be: [getProfile, userContextGet]",{"range":"180","text":"181"},"Update the dependencies array to be: [userContext.get]",{"range":"182","text":"183"},[1063,1065],"[history]",[2671,2673],"[getProfile, userContextGet]",[312,314],"[userContext.get]"]