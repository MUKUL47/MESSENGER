[{"/home/mukul/mukul/qmc/messenger/messenger/src/components/main.tsx":"1","/home/mukul/mukul/qmc/messenger/messenger/src/components/login/login.tsx":"2","/home/mukul/mukul/qmc/messenger/messenger/src/shared/components/backdrop/backdrop.tsx":"3","/home/mukul/mukul/qmc/messenger/messenger/src/shared/material-modules.ts":"4","/home/mukul/mukul/qmc/messenger/messenger/src/shared/components/otp/otp.tsx":"5","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/chatsection/chatsection.tsx":"6","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/chatsection/friends/friends.tsx":"7","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/chatsection/chatarea/ui/chatarearender.tsx":"8","/home/mukul/mukul/qmc/messenger/messenger/src/shared/server.ts":"9","/home/mukul/mukul/qmc/messenger/messenger/src/shared/components/toast/toast.tsx":"10","/home/mukul/mukul/qmc/messenger/messenger/src/shared/utils.ts":"11","/home/mukul/mukul/qmc/messenger/messenger/src/components/contexts/userContext.tsx":"12","/home/mukul/mukul/qmc/messenger/messenger/src/components/profile/renderer.tsx":"13","/home/mukul/mukul/qmc/messenger/messenger/src/components/profile/profile.tsx":"14","/home/mukul/mukul/qmc/messenger/messenger/src/shared/routes.ts":"15","/home/mukul/mukul/qmc/messenger/messenger/src/components/login/renderer.tsx":"16","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/chatsection/friends/ui/friendsrender.tsx":"17","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/home.tsx":"18","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/homeui/homerenderer.tsx":"19","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/navbar/navbar.tsx":"20","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/navbar/ui/navbarRenderer.tsx":"21","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/requests/requests.tsx":"22","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/requests/requestrenderer.tsx":"23","/home/mukul/mukul/qmc/messenger/messenger/src/components/thirdpartylogin/thridpartyredirection.tsx":"24","/home/mukul/mukul/qmc/messenger/messenger/src/components/contexts/socketContext.tsx":"25","/home/mukul/mukul/qmc/messenger/messenger/src/components/contexts/chatContext.tsx":"26"},{"size":2780,"mtime":1607521789869,"results":"27","hashOfConfig":"28"},{"size":3300,"mtime":1607253473189,"results":"29","hashOfConfig":"28"},{"size":323,"mtime":1606861580361,"results":"30","hashOfConfig":"28"},{"size":3053,"mtime":1607202022279,"results":"31","hashOfConfig":"28"},{"size":4842,"mtime":1606861580361,"results":"32","hashOfConfig":"28"},{"size":709,"mtime":1607278897627,"results":"33","hashOfConfig":"28"},{"size":142,"mtime":1606861580361,"results":"34","hashOfConfig":"28"},{"size":6604,"mtime":1607175552267,"results":"35","hashOfConfig":"28"},{"size":8864,"mtime":1607530531313,"results":"36","hashOfConfig":"28"},{"size":617,"mtime":1607273082314,"results":"37","hashOfConfig":"28"},{"size":1887,"mtime":1607276042033,"results":"38","hashOfConfig":"28"},{"size":522,"mtime":1607274333799,"results":"39","hashOfConfig":"28"},{"size":3447,"mtime":1606943579866,"results":"40","hashOfConfig":"28"},{"size":2769,"mtime":1607272998723,"results":"41","hashOfConfig":"28"},{"size":374,"mtime":1607253895448,"results":"42","hashOfConfig":"28"},{"size":2877,"mtime":1606861580361,"results":"43","hashOfConfig":"28"},{"size":1544,"mtime":1607213669707,"results":"44","hashOfConfig":"28"},{"size":223,"mtime":1607274487187,"results":"45","hashOfConfig":"28"},{"size":1374,"mtime":1607270196565,"results":"46","hashOfConfig":"28"},{"size":1177,"mtime":1607288016480,"results":"47","hashOfConfig":"28"},{"size":3575,"mtime":1607275092591,"results":"48","hashOfConfig":"28"},{"size":6284,"mtime":1607538713578,"results":"49","hashOfConfig":"28"},{"size":7353,"mtime":1607537501562,"results":"50","hashOfConfig":"28"},{"size":1300,"mtime":1607253941354,"results":"51","hashOfConfig":"28"},{"size":1028,"mtime":1607287789868,"results":"52","hashOfConfig":"28"},{"size":515,"mtime":1607270217829,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1c7yglx",{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"59"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"59"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"59"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"59"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"59"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"59"},"/home/mukul/mukul/qmc/messenger/messenger/src/components/main.tsx",["123"],"/home/mukul/mukul/qmc/messenger/messenger/src/components/login/login.tsx",["124"],"import React, { useEffect, useReducer, useContext } from 'react';\nimport BackdropLoader from '../../shared/components/backdrop/backdrop';\nimport Otp from '../../shared/components/otp/otp';\nimport Api from '../../shared/server';\nimport Utils, { toggleLoader, toastMessage, setGlobalToggleFunc } from '../../shared/utils';\nimport LoginUi from './renderer';\nimport { useHistory } from \"react-router-dom\";\nimport Routes from '../../shared/routes';\nimport { UserContext } from '../contexts/userContext';\nexport default function Login() {\n    const userContext: any = useContext(UserContext);\n    const history = useHistory();\n    const [toggle, setToggle] = useReducer(setGlobalToggleFunc,\n        { redirect: true, otpReady: false, emailMobile: '', otp: '', isLoading: false })\n    useEffect(() => {\n        document.title = 'Messenger';\n        if (localStorage.length === 0) {\n            document.title = 'Messenger - Login';\n            setToggle({ redirect: false })\n        } else {\n            //redirect\n            history.push(Routes.home)\n        }\n    }, []);\n    const onEmailMobile = async (data: any) => {\n        try {\n            if (data.thirdParty === 'google') {\n                window.location.href = Api.googleOauth;\n                return;\n            }\n            setToggle({ isLoading: true, otpReady: false })\n            await Api.generateOtp(data, false);\n            setToggle({ emailMobile: data, otpReady: true, isLoading: false })\n            toastMessage.next({ type: true, message: `OTP sent to <strong>${data}</strong>`, duration: 3000 })\n        } catch (e) {\n            setToggle({ isLoading: false })\n            toastMessage.next({ type: false, message: Utils.parseError(e), duration: 2000 })\n        }\n    }\n\n    const submitOtp = async (otp: string) => {\n        try {\n            toggleLoader.next(true);\n            const response: any = await Api.verifyOtp(otp, toggle.emailMobile);\n            setToggle({ otp: otp, otpReady: false });\n            toggleLoader.next(false);\n            localStorage.setItem('id', toggle.emailMobile);\n            localStorage.setItem('secret', response.data.message);\n            if (response.status === 201) {\n                userContext.set({\n                    user: toggle.emailMobile,\n                    name: '',\n                    blob: null\n                });\n                history.push({ pathname: '/profile', state: { header: 'Complete your profile', identity: toggle.emailMobile } })\n                return\n            }\n            userContext.set({ user: toggle.emailMobile });\n            history.push({ pathname: '/home' })\n        } catch (e) {\n            toggleLoader.next(false);\n            const currErr = Utils.parseError(e);\n            toastMessage.next({ type: false, message: Utils.globalDefaultError !== currErr ? currErr : 'Invalid OTP', duration: 2000 })\n        }\n    }\n    const otp = toggle.otpReady ?\n        <Otp verifyOtp={submitOtp} resend={() => onEmailMobile(toggle.emailMobile)} cancelOtp={() => setToggle({ otpReady: false })} /> : null;\n    const jsx =\n        !toggle.redirect ?\n            <>\n                <LoginUi onEmailMobile={onEmailMobile} {...toggle} />\n                {otp}\n            </> :\n            <BackdropLoader open={toggle.redirect} />\n    return (jsx)\n}",["125","126"],"/home/mukul/mukul/qmc/messenger/messenger/src/shared/components/backdrop/backdrop.tsx",[],"/home/mukul/mukul/qmc/messenger/messenger/src/shared/material-modules.ts",[],["127","128"],"/home/mukul/mukul/qmc/messenger/messenger/src/shared/components/otp/otp.tsx",["129","130","131"],"import React, { createRef, useEffect, useState } from 'react';\nimport './otp.scss'\nimport {\n    Dialog, Button, ReplayIcon, CloseIcon, CheckCircleOutlineIcon\n} from '../../material-modules';\nexport default function Otp(props: any) {\n    const { verifyOtp, resend } = props;\n    const [focusOn, setFocusOn] = useState(0)\n    const [values, setValues] = useState(({ 0: '', 1: '', 2: '', 3: '', 4: '', 5: '' } as any))\n    const [focuses, setFocuses] = useState((Array(6).fill(true).map(_ => createRef()) as any))\n    const [otpValid, setOtpValid] = useState(('' as any))\n    const [inProgress, setInProgress] = useState(false)\n    const onClic = (e: any) => {\n        setFocusOn(e)\n    }\n    useEffect(() => {\n        const otp = Object.values(values).map(v => v).join('')\n        if (`${otp}`.length === 6) {\n            setOtpValid(otp)\n            return;\n        }\n        setOtpValid(null)\n    }, [values])\n\n    const resendOtp = (e: any) => {\n    }\n\n    const onKeyU = (e: any, i: number) => {\n        if (e.key <= 9 || e.key >= 0) {\n            if (i < 5) {\n                setFocusOn(i + 1)\n                focuses[i + 1].current.focus()\n            }\n        }\n    }\n    const verify = () => {\n        if (!otpValid || inProgress) { return }\n        verifyOtp(otpValid);\n    }\n    const onKeyP = (e: any, i: number) => {\n        if (e.keyCode === 13) {\n            verify()\n            return;\n        }\n        if (e.keyCode === 8 && (focusOn) > 0) {\n            const cV: any = { ...values }\n            cV[i] = ''\n            setValues(cV)\n            if (values[i] === '') {\n                setFocusOn(focusOn - 1)\n                focuses[focusOn - 1].current.focus()\n            }\n        }\n    }\n\n    const onChang = (e: any, i: number) => {\n        const val = `${e.target.value}`;\n        if (!isNaN(Number(val))) {\n            const cV: any = { ...values }\n            cV[i] = val.length === 1 ? val : val.charAt(val.length - 1)\n            setValues(cV)\n        }\n    }\n    const isEnabled = otpValid && !inProgress\n    return (\n        <div className='otp-parent'>\n            <Dialog\n                open={true}>\n                <div className='otp-modal'>\n                    <div className='goBack'>\n                        {\n                            !inProgress ?\n                                <CloseIcon className=\"close-otp\" onClick={e => {\n                                    if (!inProgress) { props.cancelOtp() }\n                                }} /> :\n                                null\n                        }\n\n                    </div>\n                    <div className=\"otp-title\">\n                        Enter OTP\n                    </div>\n                    <div className=\"otp-input\">\n                        {Array(6).fill(true).map((v, i) => {\n                            return <input\n                                className='otp-inp'\n                                key={i}\n                                ref={focuses[i]}\n                                id={`otp-inp-${i}`}\n                                // autoFocus={i == focusOn}\n                                onClick={e => onClic(i)}\n                                onKeyPress={e => onKeyU(e, i)}\n                                value={values[i]}\n                                onKeyDown={e => onKeyP(e, i)}\n                                onChange={e => onChang(e, i)}\n                                onFocus={e => e.target.select()}\n                                autoFocus={i === 0}\n                            />\n                        })}\n                    </div>\n                    <div className=\"otp-btns\">\n                        <span className='otp-verify'>\n                            <Button\n                                variant=\"contained\"\n                                className={isEnabled ? 'otp-verify-btn' : 'otp-verify-btn bg-empty-dis'}\n                                onClick={verify}\n                                disabled={!isEnabled}\n                            >\n                                Verify\n                                <CheckCircleOutlineIcon className=\"icon\" />\n                            </Button>\n                        </span>\n                        <span className='otp-resend'>\n                            <Button\n                                variant=\"contained\"\n                                className={!inProgress ? 'otp-resend-btn' : 'otp-resend-btn bg-empty-dis'}\n                                disabled={inProgress}\n                                onClick={resend}\n                            >\n                                Resend\n                                <ReplayIcon className=\"icon\" />\n                            </Button>\n                        </span>\n                    </div>\n                </div>\n            </Dialog>\n        </div>)\n}",["132","133"],"/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/chatsection/chatsection.tsx",["134","135","136"],"import React, { useContext, useEffect } from 'react';\nimport { SENT_EVENTS } from '../../../../shared/models/socketevents';\nimport { eventEmitter } from '../../../../shared/utils';\nimport { SocketContext } from '../../../contexts/socketContext';\nimport ChatSectionRender from './ui/chatsectionrender';\nexport default function ChatSection() {\n    const socket: any = useContext(SocketContext);\n    useEffect(() => {\n        // eventEmitter.subscribe(response => {\n        //     console.log('response.event-',response.event)\n        //     console.log('response.event-', response.params)\n        // })\n        // socket.sendEvent(SENT_EVENTS.REFRESH_FRIEND_LIST)\n    }, [])\n    return (<ChatSectionRender />)\n}",["137","138"],"/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/chatsection/friends/friends.tsx",[],"/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/chatsection/chatarea/ui/chatarearender.tsx",["139","140","141","142","143","144","145"],"import React, { useEffect, useReducer, useState } from 'react';\nimport './chatarea.scss'\nimport bgChatImg from '../../../../../../assets/bg-chat.jpg'\nimport { TextField, SendIcon, Modal, Dialog } from '../../../../../../shared/material-modules';\nimport Utils, { setGlobalToggleFunc } from '../../../../../../shared/utils';\nconst convos = 'e 1960s w relele rel e  es w relele rel e  e relase of Les w reelele rel e  es w relele rel e  e relase of Les w relele rel s w releelele rel e  es w relele rel e  e relase of Les w relele rel s w releelele rel e  es w relele rel e  e  w relele rel e  e relas w relele rel e  e relas w relele rel e  e relas w relele rel e  e relasrelase of Les w relele rel s w relelele rel s w relele rel e  e relase of Lee  e relase of Les w relele rel e  e relase of Les w relele rel e  e relase of Le rerelele rel e  es w relele rel e  e relase of Les w reelele rel e  es w relele rel e  e relase of Les w relele rel s w releelele rel e  es w relele rel e  e relase of Les w relele rel s w releelele rel e  es w relele rel e  e  w relele rel e  e relas w relele rel e  e relas w relele rel e  e relas w relele rel e  e relasrelase of Les w relele rel s w relelele rel s w relele rel e  e relase of Lee  e relase of Les w relele rel e  e relase of Les w relele rel e  e relase of Le rerelele rel e  es w relele rel e  e relase of Les w reelele rel e  es w relele rel e  e relase of Les w relele rel s w releelele rel e  es w relele rel e  e relase of Les w relele rel s w releelele rel e  es w relele rel e  e  w relele rel e  e relas w relele rel e  e relas w relele rel e  e relas w relele rel e  e relasrelase of Les w relele rel s w relelele rel s w relele rel e  e relase of Lee  e relase of Les w relele rel e  e relase of Les w relele rel e  e relase of Le relase of Letraset s'\n\nexport default function ChatAreaRender() {\n    return (\n        <div className=\"chatarearender-layout\">\n            <div className=\"chatting-area\"><Chats /></div>\n            <div className=\"submit-message\">\n                <TextField\n                    id=\"outlined-basic\"\n                    placeholder=\"Enter Message\"\n                    variant=\"outlined\"\n                    className=\"message-inp\"\n                />\n                <SendIcon className=\"send-icon\" />\n            </div>\n        </div>)\n}\nfunction Chats() {\n    const [showMessage, toggleMessage] = useState<any>({ open: false, message: '' });\n    const showMessageToggle = (message: string): void => toggleMessage({ open: true, message: message });\n    const [scrollDate, setScrollDate] = useReducer(setGlobalToggleFunc, { open: false, val: '', id: '' });\n    const [hoverTimer, setHoverTimer] = useState<any>(null);\n    let newChunk: string = '';\n    useEffect(() => {\n        return //performance issues optimize it\n        (document.querySelector('.chatting-area') as any).addEventListener('scroll', () => {\n            const elements: any = [...(document.getElementsByClassName('chatarea--when') as any)];\n            if (elements && elements.length > 0) {\n                let min = Infinity;\n                let elem = -1;\n                elements.forEach((el: any, idx: number) => {\n                    const dif = 110 - Number(`${el.getClientRects()[0].y}`);\n                    if (dif >= 0 && dif < min) {\n                        min = dif;\n                        elem = idx;\n                    }\n                });\n                const dateText = (document.getElementsByClassName(elements[elem].className)[0]?.children[0] as any).innerText;\n                setScrollDate({ val: dateText, id: elem, open: true });\n                // setTimeout(() => {\n                //     setScrollDate({ open: false })\n                // }, 500);\n            }\n        });\n    }, [])\n    return <>\n        {/* {\n            scrollDate.open ?\n                <div className='fixed-date'>\n                    <div className=\"c-when-free\">{scrollDate.val}</div>\n                </div> :\n                null\n        } */}\n\n        <div className=\"chatarea\" id='chatarea'>\n            {\n                Array(12).fill(1).map((c: any, i) => {\n                    const dir = i % 2 === 0 ? 'left' : 'right';\n                    const tipClass = `c-tip ${dir === 'left' ? 'c-tip-left' : 'c-tip-right'}`;\n                    const chatClass = `chat-chunk ${dir === 'left' ? 'chatarea-type__left' : 'chatarea-type__right'}`;\n                    const tip = newChunk != dir ? (<div className={tipClass}><Msgc /></div>) : null;\n                    newChunk = dir;\n                    return (\n                        <div key={i}>\n                            <div className={`chatarea--when chatdate__${i}`}>\n                                <p\n                                // className={`c-when ${scrollDate?.open && scrollDate.id == i ? 'c-when__hide' : ''}`}\n                                >\n                                    {`Today ${i}`}\n                                </p>\n                            </div>\n                            <div className={tip ? 'chat-mg-t' : ''}>\n                                <div className={chatClass}>\n                                    {\n                                        convos.length > Utils.MAX_MESSAGE_LEN ?\n                                            <>\n                                                {`${convos.substring(0, Utils.MAX_MESSAGE_LEN)} ... `}\n                                                <span className='chat--readmore' onClick={e => showMessageToggle(convos)}>\n                                                    <strong>Read more</strong>\n                                                </span>\n                                            </> :\n                                            convos} {tip}\n                                    <div className=\"chat--time\">23:59</div>\n                                </div>\n                            </div>\n                        </div>\n\n                    )\n                })\n            }\n            <FullMessage {...showMessage} close={() => toggleMessage({ open: false })} />\n        </div>\n    </>\n\n}\n\nfunction Msgc() {\n    return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 8 13\" width=\"8\" height=\"13\"><path opacity=\".13\" fill=\"#0000000\" d=\"M1.533 3.568L8 12.193V1H2.812C1.042 1 .474 2.156 1.533 3.568z\"></path><path fill=\"currentColor\" d=\"M1.533 2.568L8 11.193V0H2.812C1.042 0 .474 1.156 1.533 2.568z\"></path></svg>\n}\n\nfunction FullMessage(props: any) {\n    const { open, message, close } = props;\n    return <Dialog open={open} onClose={close}>\n        {message}\n    </Dialog>\n\n}","/home/mukul/mukul/qmc/messenger/messenger/src/shared/server.ts",[],"/home/mukul/mukul/qmc/messenger/messenger/src/shared/components/toast/toast.tsx",["146"],"import React, { useEffect, useState } from 'react';\nimport { Snackbar } from '../../material-modules';\nimport './toast.scss'\nexport default function ToastMessage(props: any) {\n    const { type, message, rand } = props;\n    const [toast, setToast] = useState(false);\n    useEffect(() => {\n        if (message == null) return;\n        setToast(true)\n        setTimeout(() => setToast(false), 2500)\n    }, [rand])\n    return <Snackbar open={toast}>\n        <div className={type ? 'toast-message success-message' : 'toast-message error-message'} dangerouslySetInnerHTML={{ __html: `${message}` }}></div>\n    </Snackbar>\n}","/home/mukul/mukul/qmc/messenger/messenger/src/shared/utils.ts",[],"/home/mukul/mukul/qmc/messenger/messenger/src/components/contexts/userContext.tsx",["147"],"/home/mukul/mukul/qmc/messenger/messenger/src/components/profile/renderer.tsx",["148","149","150","151","152","153"],"import React, { createRef, Ref, useEffect, useRef } from 'react';\nimport './profile.scss'\nimport namasteImg from '../../assets/namaste.png'\nimport emptyProfile from '../../assets/emptyProfile.webp';\nimport { TextField, Button, CircularProgress } from '../../shared/material-modules';\nexport default function ProfileRenderer(props: any) {\n    const { loading, name, user, setForm, updateProfile, blob, changed } = props;\n    const fileInp = (createRef() as any);\n    const setProfileImage = (evt: any) => {\n        var f = evt.target.files[0];\n        if (f) {\n            const r = new FileReader();\n            r.onload = (e: any) => setForm({ blob: e.target.result, changed: true })\n            r.readAsDataURL(f);\n        }\n    }\n    return (\n        <>\n            <input type='file' hidden id='hidden-file' ref={fileInp} onChange={setProfileImage} />\n            <div className=\"profile-layout\">\n                <p id='heading'>My Profile</p>\n                <div className=\"profile\">\n                    <div className=\"profile-form\">\n                        <div className=\"profile-img\">\n                            <img src={blob ? blob : emptyProfile} width=\"100px\" height=\"100px\" onClick={e => fileInp.current.click()} />\n                            {\n                                blob ?\n                                    <div className=\"remove-img\" onClick={e => setForm({ blob: null, changed: true })}>x</div>\n                                    : null\n                            }\n                        </div>\n                        <div className=\"profile-name form-inp\">\n                            <div id='inp-text'><strong>Name</strong></div>\n                            <TextField\n                                id=\"outlined-basic\"\n                                placeholder=\"Name\"\n                                variant=\"outlined\"\n                                className=\"input-text\"\n                                disabled={loading}\n                                value={name || ''}\n                                onChange={e => setForm({ name: e.target.value, changed: true })}\n                            />\n                        </div>\n                        <div className=\"profile-emailMobile form-inp\">\n                            <div id='inp-text'><strong>Email or Mobile</strong></div>\n                            <TextField\n                                id=\"outlined-basic\"\n                                placeholder=\"Email or Mobile\"\n                                variant=\"outlined\"\n                                className=\"input-text\"\n                                disabled={true}\n                                value={user || ''}\n                            />\n                        </div>\n                        <div className=\"submit-profile\">\n                            <Button variant=\"contained\" color=\"primary\"\n                                disabled={loading}\n                                onClick={e => updateProfile()}\n                            >\n                                {\n                                    loading ?\n                                        <CircularProgress className=\"submit-profile__loader\" /> :\n                                        'Submit'\n                                }\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}","/home/mukul/mukul/qmc/messenger/messenger/src/components/profile/profile.tsx",["154","155"],"import React, { useContext, useEffect, useReducer } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Routes from '../../shared/routes';\nimport Api from '../../shared/server';\nimport Utils, { setGlobalToggleFunc, toastMessage } from '../../shared/utils';\nimport { UserContext } from '../contexts/userContext';\nimport ProfileRenderer from './renderer';\nexport default function Profile() {\n    const history = useHistory();\n    const userContext: any = useContext(UserContext);\n    const userContextGet = userContext.get;\n    const stateData = { loading: true, name: '', blob: null, user: localStorage.getItem('id'), changed: false };\n    const [state, setState] = useReducer(setGlobalToggleFunc, stateData);\n    const updateProfile = async () => {\n        try {\n            setState({ loading: true })\n            await Api.updateProfile(state.name, state.blob);\n            setState({ loading: false, changed: false })\n            userContext.set({ name: state.name, blob: state.blob })\n            toastMessage.next({ type: true, message: 'Profile updated successfully' });\n            history.push(Routes.home)\n        } catch (e) {\n            setState({ loading: false })\n            toastMessage.next({ type: false, message: Utils.parseError(e), duration: 2000 })\n        }\n    }\n    const getProfile = async () => {\n        document.title = 'Messenger - Profile';\n        if (localStorage.length === 0) {\n            history.push(Routes.login);\n        }\n        else if (!userContextGet.name) {\n            try {\n                setState({ loading: true })\n                const profileResponse: any = await Api.getProfile('_');\n                const profile = profileResponse.data && profileResponse.data[0] ? profileResponse.data[0] : null;\n                setState({ loading: false })\n                if (profile) {\n                    const blob = `${profile.image_blob}` == 'null' ? null : profile.image_blob;\n                    userContext.set({ user: profile.identity, name: profile.name, blob: blob })\n                    setState({ loading: false, name: profile.name, blob: blob, user: profile.identity })\n                } else {\n                    toastMessage.next({ type: false, message: 'Profile not set' })\n                }\n            } catch (e) {\n                setState({ loading: false })\n                toastMessage.next({ type: false, message: Utils.parseError(e), duration: 2000 })\n            }\n        } else {\n            setState({ loading: false, name: userContextGet.name, blob: userContextGet.blob, user: userContextGet.user })\n        }\n    }\n    useEffect(() => { getProfile(); console.log(userContextGet) }, [])\n    return (<ProfileRenderer {...state} updateProfile={updateProfile} setForm={setState} />)\n}","/home/mukul/mukul/qmc/messenger/messenger/src/shared/routes.ts",[],"/home/mukul/mukul/qmc/messenger/messenger/src/components/login/renderer.tsx",["156"],"import React, { useState } from 'react';\nimport namasteImg from '../../assets/namaste.png'\nimport googleImg from '../../assets/google.png'\nimport './login.scss'\nimport { TextField, Button, CircularProgress } from '../../shared/material-modules';\nimport Utils from '../../shared/utils';\nexport default function LoginUi(props: any) {\n    const { onEmailMobile, isLoading } = props;\n    const [emailMobile, setEmailMobile] = useState<String>('');\n    return (\n        <>\n            <div className=\"login\">\n                <div className=\"login-layout\">\n                    <div className=\"login-img margin-auto\">\n                        <img src={namasteImg} alt=\"namaste\" width=\"150px\" height=\"150px\" />\n                    </div>\n                    <div className=\"login-form margin-auto\">\n                        <div className=\"mob-logo\" style={{ display: 'none' }}>\n                            <img src={namasteImg} alt=\"namaste\" width=\"100px\" height=\"100px\" />\n                        </div>\n                        <div className=\"form\">\n                            <TextField\n                                id=\"outlined-basic\"\n                                placeholder=\"Email or Mobile\"\n                                variant=\"outlined\"\n                                className=\"input-text\"\n                                onChange={e => setEmailMobile(e.target.value)}\n                            />\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className=\"submit\"\n                                onClick={e => onEmailMobile(emailMobile)}\n                                disabled={!Utils.validateEmailMobile(emailMobile.trim()) || isLoading}\n                            >\n                                {\n                                    isLoading ?\n                                    <CircularProgress className=\"submit__loader\"/>\n                                    : 'Submit' \n                                }\n                            </Button>\n                            <div>\n                                <Button\n                                    variant=\"contained\"\n                                    className=\"continue-google\"\n                                    onClick={e => onEmailMobile({ thirdParty: 'google' })}\n                                    disabled={isLoading}\n                                >\n                                    Google\n                                </Button>\n                                <span className=\"google-img\">\n                                    <img src={googleImg} width=\"20px\" />\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>)\n}","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/chatsection/friends/ui/friendsrender.tsx",["157"],"/home/mukul/mukul/qmc/messenger/messenger/src/components/home/home.tsx",["158","159","160"],"/home/mukul/mukul/qmc/messenger/messenger/src/components/home/homeui/homerenderer.tsx",["161","162"],"import React, { useContext, useEffect } from 'react';\nimport ChatSection from '../components/chatsection/chatsection';\nimport Navbar from '../components/navbar/navbar';\nimport './home.scss'\nimport {\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport Routes from '../../../shared/routes';\nimport Requests from '../components/requests/requests';\nimport SocketContextData from '../../contexts/socketContext';\nimport ChatContextData from '../../contexts/chatContext';\nexport default function HomeRenderer(props: any) {\n    return (\n        <div className=\"home-layout\">\n            <div className=\"navbar\">\n                <Navbar />\n            </div>\n            <SocketContextData>\n                <ChatContextData>\n                    <Switch>\n                        <Route exact path={Routes.home} component={() =>\n                            <div className=\"chatsection\" >\n                                <ChatSection />\n                            </div>\n                        }></Route>\n                        <Route exact path={Routes.requests} component={() =>\n                            <div className=\"request-section\">\n                                <Requests />\n                            </div>\n                        }></Route>\n                    </Switch>\n                </ChatContextData>\n            </SocketContextData>\n        </div>\n    )\n}","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/navbar/navbar.tsx",["163","164","165","166","167"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Routes from '../../../../shared/routes';\nimport Api from '../../../../shared/server';\nimport Utils, { toastMessage } from '../../../../shared/utils';\nimport { UserContext } from '../../../contexts/userContext';\nimport NavRenderer from './ui/navbarRenderer';\nexport default function Navbar() {\n    const userContext: any = useContext(UserContext);\n    const pushHistory = useHistory();\n    const logout = (): void => {\n        localStorage.clear();\n        pushHistory.push(Routes.login)\n    }\n    const updateProfile = (): void => {\n        Api.getProfile('_').then((response: any) => {\n            const profile = response?.data[0] ? response.data[0] : null;\n            if (profile) {\n                const blob = `${profile.image_blob}` == 'null' ? null : profile.image_blob;\n                userContext.set({ user: profile.identity, name: profile.name, blob: blob })\n            }\n        })\n    }\n    useEffect(() => {\n        if (!userContext.get.name) {\n            updateProfile();\n        }\n    }, [])\n    return (<NavRenderer onLogout={logout} />)\n}","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/navbar/ui/navbarRenderer.tsx",["168","169","170","171","172","173"],"import React, { useContext, useEffect, useReducer } from 'react';\nimport './navbar.scss'\nimport emptyProfile from '../../../../../assets/emptyProfile.webp';\nimport { SearchIcon, EmojiPeopleIcon, MeetingRoomIcon, Drawer, PersonIcon, HomeIcon } from '../../../../../shared/material-modules';\nimport Friends from '../../chatsection/friends/friends';\nimport { setGlobalToggleFunc } from '../../../../../shared/utils';\nimport { Link, useHistory } from 'react-router-dom';\nimport Routes from '../../../../../shared/routes';\nimport { UserContext } from '../../../../contexts/userContext';\nexport default function NavRenderer(props: any) {\n    const userContext: any = useContext(UserContext);\n    const { onLogout } = props;\n    const navigate = useHistory();\n    const [toggle, setToggle] = useReducer(setGlobalToggleFunc, { friendsDrawer: false, navBar: 'home' });\n    const closeDrawer = () => setToggle({ friendsDrawer: false });\n    const showFriendDrawer = () => {\n        if (window.innerWidth > 700) return;\n        setToggle({ friendsDrawer: true })\n    };\n    const closeAutoDrawer = () => {\n        if (window.innerWidth >= 700) {\n            closeDrawer()\n        }\n    }\n    useEffect(() => {\n        const path: string[] = window.location.pathname.split('/');\n        setToggle({ navBar: path[path.length - 1] })\n        window.addEventListener('resize', closeAutoDrawer);\n        return () => window.removeEventListener('resize', closeAutoDrawer)\n    }, []);\n    const onNavSelect = (type: string) => {\n        setToggle({ navBar: type });\n        const url = `${type == 'home' || type == 'profile' ? `/${type}` : `${Routes.home}/${type}`}`;\n        if (url === window.location.pathname) return\n        navigate.push(url)\n    }\n    return (\n        <div className=\"navrender-layout\">\n            <div className=\"navB\">\n                <img\n                    id='myprof-img'\n                    src={userContext.get.blob ? userContext.get.blob : emptyProfile}\n                    width=\"50px\"\n                    height=\"50px\"\n                    onClick={e => showFriendDrawer()}\n                />\n            </div>\n            <div\n                className={calcC(toggle.navBar, 'home')}\n                onClick={() => onNavSelect('home')}\n            >\n                <HomeIcon />\n                <div id='nav-text'>Home</div>\n            </div>\n            <div className={calcC(toggle.navBar, 'profile')}\n                onClick={() => onNavSelect('profile')}\n            >\n                <PersonIcon />\n                <div id='nav-text'>Profile</div>\n            </div>\n            <div\n                className={calcC(toggle.navBar, 'requests')}\n                onClick={() => onNavSelect('requests')}\n            >\n                <EmojiPeopleIcon />\n                <div id='nav-text'>Search</div>\n            </div>\n            <div\n                onClick={onLogout}\n                className={calcC(toggle.navBar, 'logout')}\n            >\n                <MeetingRoomIcon />\n                <div id='nav-text'>Logout</div>\n            </div>\n            <FriendDrawer {...toggle} closeDrawer={closeDrawer} />\n        </div >\n    )\n}\n\nfunction FriendDrawer(props: any) {\n    const { friendsDrawer, closeDrawer } = props;\n    return (\n        <div className=\"FriendDrawer\">\n            <Drawer anchor='left' open={friendsDrawer} onClose={e => closeDrawer()}>\n                <Friends />\n            </Drawer>\n        </div>\n    )\n}\n\nfunction calcC(navBar: string, type: string) {\n    return `nav-btns ${navBar === type ? 'nav-btn__selected' : ''}`\n}","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/requests/requests.tsx",["174","175","176","177","178","179","180"],"/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/requests/requestrenderer.tsx",["181","182","183","184"],"/home/mukul/mukul/qmc/messenger/messenger/src/components/thirdpartylogin/thridpartyredirection.tsx",["185","186"],"import React from 'react'\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Api from '../../shared/server';\nimport Routes from '../../shared/routes';\nexport class ThirdPartyLogin extends React.Component {\n    constructor(props: any) {\n        super(props)\n    }\n    componentDidMount() {\n        const url = window.location.href.split('#')[1].split('&')\n        const accessToken = url.filter(a => a.split('=')[0] == 'access_token')[0].split('=')[1]\n        this.storeIdentity(accessToken)\n    }\n\n    async storeIdentity(accessToken: any) {\n        try {\n            const response = await Api.thirdPartyAuthorization('google', accessToken)\n            localStorage.setItem('id', response.data.identity);\n            localStorage.setItem('secret', response.data.message);\n            if (response.status === 201) {\n                (this.props as any).history.push({ pathname: Routes.profile })\n                return;\n            }\n            (this.props as any).history.push({ pathname: Routes.home })\n        } catch (e) {\n            (this.props as any).history.push({ pathname: Routes.login })\n        }\n    }\n\n    render() {\n        return (<Backdrop open={true}><CircularProgress color=\"inherit\" /></Backdrop>)\n    }\n}","/home/mukul/mukul/qmc/messenger/messenger/src/components/contexts/socketContext.tsx",["187","188","189","190","191","192"],"/home/mukul/mukul/qmc/messenger/messenger/src/components/contexts/chatContext.tsx",["193"],"\nimport React, { useEffect, useReducer, createContext } from 'react';\nimport { setGlobalToggleFunc } from '../../shared/utils';\nexport const ChatContext = createContext<any>({} as any);\nexport default function ChatContextData(props: any) {\n    //global chat area logic\n    const [toggle, setToggle] = useReducer(setGlobalToggleFunc, {});\n    const value = { get: toggle, set: setToggle };\n    return (\n        <ChatContext.Provider value={value}>\n            {props.children}\n        </ChatContext.Provider>\n    )\n}",{"ruleId":null,"fatal":true,"severity":2,"message":"194","line":17,"column":12},{"ruleId":"195","severity":1,"message":"196","line":24,"column":8,"nodeType":"197","endLine":24,"endColumn":10,"suggestions":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","replacedBy":"202"},{"ruleId":"199","replacedBy":"203"},{"ruleId":"201","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":10,"column":21,"nodeType":"207","messageId":"208","endLine":10,"endColumn":31},{"ruleId":"205","severity":1,"message":"209","line":12,"column":24,"nodeType":"207","messageId":"208","endLine":12,"endColumn":37},{"ruleId":"205","severity":1,"message":"210","line":25,"column":11,"nodeType":"207","messageId":"208","endLine":25,"endColumn":20},{"ruleId":"199","replacedBy":"211"},{"ruleId":"201","replacedBy":"212"},{"ruleId":"205","severity":1,"message":"213","line":2,"column":10,"nodeType":"207","messageId":"208","endLine":2,"endColumn":21},{"ruleId":"205","severity":1,"message":"214","line":3,"column":10,"nodeType":"207","messageId":"208","endLine":3,"endColumn":22},{"ruleId":"205","severity":1,"message":"215","line":7,"column":11,"nodeType":"207","messageId":"208","endLine":7,"endColumn":22},{"ruleId":"199","replacedBy":"216"},{"ruleId":"201","replacedBy":"217"},{"ruleId":"205","severity":1,"message":"218","line":3,"column":8,"nodeType":"207","messageId":"208","endLine":3,"endColumn":17},{"ruleId":"205","severity":1,"message":"219","line":4,"column":31,"nodeType":"207","messageId":"208","endLine":4,"endColumn":36},{"ruleId":"205","severity":1,"message":"220","line":26,"column":12,"nodeType":"207","messageId":"208","endLine":26,"endColumn":22},{"ruleId":"205","severity":1,"message":"221","line":27,"column":12,"nodeType":"207","messageId":"208","endLine":27,"endColumn":22},{"ruleId":"205","severity":1,"message":"222","line":27,"column":24,"nodeType":"207","messageId":"208","endLine":27,"endColumn":37},{"ruleId":"223","severity":1,"message":"224","line":31,"column":9,"nodeType":"225","messageId":"226","endLine":49,"endColumn":12},{"ruleId":"227","severity":1,"message":"228","line":66,"column":42,"nodeType":"229","messageId":"230","endLine":66,"endColumn":44},{"ruleId":"195","severity":1,"message":"231","line":11,"column":8,"nodeType":"197","endLine":11,"endColumn":14,"suggestions":"232"},{"ruleId":"205","severity":1,"message":"233","line":2,"column":17,"nodeType":"207","messageId":"208","endLine":2,"endColumn":26},{"ruleId":"205","severity":1,"message":"234","line":1,"column":28,"nodeType":"207","messageId":"208","endLine":1,"endColumn":31},{"ruleId":"205","severity":1,"message":"233","line":1,"column":33,"nodeType":"207","messageId":"208","endLine":1,"endColumn":42},{"ruleId":"205","severity":1,"message":"235","line":1,"column":44,"nodeType":"207","messageId":"208","endLine":1,"endColumn":50},{"ruleId":"205","severity":1,"message":"236","line":3,"column":8,"nodeType":"207","messageId":"208","endLine":3,"endColumn":18},{"ruleId":"205","severity":1,"message":"237","line":7,"column":64,"nodeType":"207","messageId":"208","endLine":7,"endColumn":71},{"ruleId":"238","severity":1,"message":"239","line":25,"column":29,"nodeType":"240","endLine":25,"endColumn":137},{"ruleId":"227","severity":1,"message":"241","line":39,"column":58,"nodeType":"229","messageId":"230","endLine":39,"endColumn":60},{"ruleId":"195","severity":1,"message":"242","line":53,"column":68,"nodeType":"197","endLine":53,"endColumn":70,"suggestions":"243"},{"ruleId":"238","severity":1,"message":"239","line":52,"column":37,"nodeType":"240","endLine":52,"endColumn":73},{"ruleId":"238","severity":1,"message":"239","line":24,"column":37,"nodeType":"240","endLine":24,"endColumn":107},{"ruleId":"205","severity":1,"message":"244","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":27},{"ruleId":"205","severity":1,"message":"233","line":1,"column":29,"nodeType":"207","messageId":"208","endLine":1,"endColumn":38},{"ruleId":"205","severity":1,"message":"245","line":2,"column":10,"nodeType":"207","messageId":"208","endLine":2,"endColumn":21},{"ruleId":"205","severity":1,"message":"244","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":27},{"ruleId":"205","severity":1,"message":"233","line":1,"column":29,"nodeType":"207","messageId":"208","endLine":1,"endColumn":38},{"ruleId":"205","severity":1,"message":"246","line":1,"column":40,"nodeType":"207","messageId":"208","endLine":1,"endColumn":48},{"ruleId":"205","severity":1,"message":"247","line":5,"column":8,"nodeType":"207","messageId":"208","endLine":5,"endColumn":13},{"ruleId":"205","severity":1,"message":"248","line":5,"column":17,"nodeType":"207","messageId":"208","endLine":5,"endColumn":29},{"ruleId":"227","severity":1,"message":"241","line":19,"column":54,"nodeType":"229","messageId":"230","endLine":19,"endColumn":56},{"ruleId":"195","severity":1,"message":"249","line":28,"column":8,"nodeType":"197","endLine":28,"endColumn":10,"suggestions":"250"},{"ruleId":"205","severity":1,"message":"251","line":4,"column":10,"nodeType":"207","messageId":"208","endLine":4,"endColumn":20},{"ruleId":"205","severity":1,"message":"252","line":7,"column":10,"nodeType":"207","messageId":"208","endLine":7,"endColumn":14},{"ruleId":"195","severity":1,"message":"253","line":30,"column":8,"nodeType":"197","endLine":30,"endColumn":10,"suggestions":"254"},{"ruleId":"227","severity":1,"message":"241","line":33,"column":29,"nodeType":"229","messageId":"230","endLine":33,"endColumn":31},{"ruleId":"227","severity":1,"message":"241","line":33,"column":47,"nodeType":"229","messageId":"230","endLine":33,"endColumn":49},{"ruleId":"238","severity":1,"message":"239","line":40,"column":17,"nodeType":"240","endLine":46,"endColumn":19},{"ruleId":"205","severity":1,"message":"255","line":1,"column":10,"nodeType":"207","messageId":"208","endLine":1,"endColumn":18},{"ruleId":"205","severity":1,"message":"244","line":2,"column":17,"nodeType":"207","messageId":"208","endLine":2,"endColumn":27},{"ruleId":"205","severity":1,"message":"246","line":2,"column":52,"nodeType":"207","messageId":"208","endLine":2,"endColumn":60},{"ruleId":"205","severity":1,"message":"256","line":3,"column":10,"nodeType":"207","messageId":"208","endLine":3,"endColumn":23},{"ruleId":"205","severity":1,"message":"257","line":4,"column":8,"nodeType":"207","messageId":"208","endLine":4,"endColumn":20},{"ruleId":"205","severity":1,"message":"258","line":77,"column":11,"nodeType":"207","messageId":"208","endLine":77,"endColumn":21},{"ruleId":"195","severity":1,"message":"259","line":127,"column":8,"nodeType":"197","endLine":127,"endColumn":10,"suggestions":"260"},{"ruleId":"205","severity":1,"message":"244","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":27},{"ruleId":"205","severity":1,"message":"261","line":3,"column":46,"nodeType":"207","messageId":"208","endLine":3,"endColumn":62},{"ruleId":"195","severity":1,"message":"262","line":35,"column":8,"nodeType":"197","endLine":35,"endColumn":36,"suggestions":"263"},{"ruleId":"227","severity":1,"message":"241","line":88,"column":68,"nodeType":"229","messageId":"230","endLine":88,"endColumn":70},{"ruleId":"264","severity":1,"message":"265","line":7,"column":5,"nodeType":"266","messageId":"267","endLine":9,"endColumn":6},{"ruleId":"227","severity":1,"message":"241","line":12,"column":61,"nodeType":"229","messageId":"230","endLine":12,"endColumn":63},{"ruleId":"205","severity":1,"message":"214","line":3,"column":10,"nodeType":"207","messageId":"208","endLine":3,"endColumn":22},{"ruleId":"205","severity":1,"message":"268","line":3,"column":45,"nodeType":"207","messageId":"208","endLine":3,"endColumn":57},{"ruleId":"205","severity":1,"message":"269","line":4,"column":8,"nodeType":"207","messageId":"208","endLine":4,"endColumn":10},{"ruleId":"205","severity":1,"message":"270","line":5,"column":8,"nodeType":"207","messageId":"208","endLine":5,"endColumn":11},{"ruleId":"205","severity":1,"message":"271","line":5,"column":15,"nodeType":"207","messageId":"208","endLine":5,"endColumn":18},{"ruleId":"205","severity":1,"message":"272","line":9,"column":20,"nodeType":"207","messageId":"208","endLine":9,"endColumn":29},{"ruleId":"205","severity":1,"message":"233","line":2,"column":17,"nodeType":"207","messageId":"208","endLine":2,"endColumn":26},"Parsing error: '=' expected.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["273"],"no-native-reassign",["274"],"no-negated-in-lhs",["275"],["274"],["275"],"@typescript-eslint/no-unused-vars","'setFocuses' is assigned a value but never used.","Identifier","unusedVar","'setInProgress' is assigned a value but never used.","'resendOtp' is assigned a value but never used.",["274"],["275"],"'SENT_EVENTS' is defined but never used.","'eventEmitter' is defined but never used.","'socket' is assigned a value but never used.",["274"],["275"],"'bgChatImg' is defined but never used.","'Modal' is defined but never used.","'scrollDate' is assigned a value but never used.","'hoverTimer' is assigned a value but never used.","'setHoverTimer' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'message'. Either include it or remove the dependency array.",["276"],"'useEffect' is defined but never used.","'Ref' is defined but never used.","'useRef' is defined but never used.","'namasteImg' is defined but never used.","'changed' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'getProfile' and 'userContextGet'. Either include them or remove the dependency array.",["277"],"'useContext' is defined but never used.","'UserContext' is defined but never used.","'useState' is defined but never used.","'Utils' is defined but never used.","'toastMessage' is defined but never used.","React Hook useEffect has missing dependencies: 'updateProfile' and 'userContext.get.name'. Either include them or remove the dependency array.",["278"],"'SearchIcon' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'closeAutoDrawer'. Either include it or remove the dependency array.",["279"],"'userInfo' is defined but never used.","'combineLatest' is defined but never used.","'ToastMessage' is defined but never used.","'onResponse' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'sentRequests'. Either include it or remove the dependency array.",["280"],"'CircularProgress' is defined but never used.","React Hook useEffect has a missing dependency: 'inQueue'. Either include it or remove the dependency array. You can also do a functional update 'setQueue(i => ...)' if you only need 'inQueue' in the 'setQueue' call.",["281"],"@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'socketEvents' is defined but never used.","'io' is defined but never used.","'Api' is defined but never used.","'url' is defined but never used.","'setToggle' is assigned a value but never used.",{"desc":"282","fix":"283"},"no-global-assign","no-unsafe-negation",{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},"Update the dependencies array to be: [history]",{"range":"296","text":"297"},"Update the dependencies array to be: [message, rand]",{"range":"298","text":"299"},"Update the dependencies array to be: [getProfile, userContextGet]",{"range":"300","text":"301"},"Update the dependencies array to be: [updateProfile, userContext.get.name]",{"range":"302","text":"303"},"Update the dependencies array to be: [closeAutoDrawer]",{"range":"304","text":"305"},"Update the dependencies array to be: [sentRequests]",{"range":"306","text":"307"},"Update the dependencies array to be: [inQueue, requestData.requestInQueue]",{"range":"308","text":"309"},[1063,1065],"[history]",[403,409],"[message, rand]",[2671,2673],"[getProfile, userContextGet]",[1125,1127],"[updateProfile, userContext.get.name]",[1462,1464],"[closeAutoDrawer]",[6068,6070],"[sentRequests]",[1484,1512],"[inQueue, requestData.requestInQueue]"]