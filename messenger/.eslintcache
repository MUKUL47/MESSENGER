[{"/home/mukul/mukul/qmc/messenger/messenger/src/components/main.tsx":"1","/home/mukul/mukul/qmc/messenger/messenger/src/components/login/login.tsx":"2","/home/mukul/mukul/qmc/messenger/messenger/src/shared/components/backdrop/backdrop.tsx":"3","/home/mukul/mukul/qmc/messenger/messenger/src/shared/material-modules.ts":"4","/home/mukul/mukul/qmc/messenger/messenger/src/shared/components/otp/otp.tsx":"5","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/chatsection/chatsection.tsx":"6","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/chatsection/friends/friends.tsx":"7","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/chatsection/chatarea/ui/chatarearender.tsx":"8","/home/mukul/mukul/qmc/messenger/messenger/src/shared/server.ts":"9","/home/mukul/mukul/qmc/messenger/messenger/src/shared/components/toast/toast.tsx":"10","/home/mukul/mukul/qmc/messenger/messenger/src/shared/utils.ts":"11","/home/mukul/mukul/qmc/messenger/messenger/src/components/contexts/userContext.tsx":"12","/home/mukul/mukul/qmc/messenger/messenger/src/components/profile/renderer.tsx":"13","/home/mukul/mukul/qmc/messenger/messenger/src/components/profile/profile.tsx":"14","/home/mukul/mukul/qmc/messenger/messenger/src/shared/routes.ts":"15","/home/mukul/mukul/qmc/messenger/messenger/src/components/login/renderer.tsx":"16","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/chatsection/friends/ui/friendsrender.tsx":"17","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/home.tsx":"18","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/homeui/homerenderer.tsx":"19","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/navbar/navbar.tsx":"20","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/navbar/ui/navbarRenderer.tsx":"21","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/search/search.tsx":"22","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/requests/requests.tsx":"23","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/requests/requestrenderer.tsx":"24"},{"size":2563,"mtime":1607174340915,"results":"25","hashOfConfig":"26"},{"size":3161,"mtime":1606940822122,"results":"27","hashOfConfig":"26"},{"size":323,"mtime":1606861580361,"results":"28","hashOfConfig":"26"},{"size":3053,"mtime":1607202022279,"results":"29","hashOfConfig":"26"},{"size":4842,"mtime":1606861580361,"results":"30","hashOfConfig":"26"},{"size":158,"mtime":1606861580361,"results":"31","hashOfConfig":"26"},{"size":142,"mtime":1606861580361,"results":"32","hashOfConfig":"26"},{"size":6604,"mtime":1607175552267,"results":"33","hashOfConfig":"26"},{"size":8498,"mtime":1606940504995,"results":"34","hashOfConfig":"26"},{"size":408,"mtime":1606863035779,"results":"35","hashOfConfig":"26"},{"size":1590,"mtime":1607089734390,"results":"36","hashOfConfig":"26"},{"size":538,"mtime":1607170910810,"results":"37","hashOfConfig":"26"},{"size":3447,"mtime":1606943579866,"results":"38","hashOfConfig":"26"},{"size":2769,"mtime":1606943427400,"results":"39","hashOfConfig":"26"},{"size":370,"mtime":1607173367644,"results":"40","hashOfConfig":"26"},{"size":2877,"mtime":1606861580361,"results":"41","hashOfConfig":"26"},{"size":1544,"mtime":1607175499682,"results":"42","hashOfConfig":"26"},{"size":368,"mtime":1607170922078,"results":"43","hashOfConfig":"26"},{"size":1438,"mtime":1607175122317,"results":"44","hashOfConfig":"26"},{"size":528,"mtime":1607208181780,"results":"45","hashOfConfig":"26"},{"size":3746,"mtime":1607208166660,"results":"46","hashOfConfig":"26"},{"size":119,"mtime":1607172830309,"results":"47","hashOfConfig":"26"},{"size":174,"mtime":1607197538808,"results":"48","hashOfConfig":"26"},{"size":2968,"mtime":1607207219735,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},"1c7yglx",{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"77"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"77"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"65"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/mukul/mukul/qmc/messenger/messenger/src/components/main.tsx",["110","111"],"import React, { useEffect, useReducer } from 'react';\nimport {\n    BrowserRouter,\n    Switch,\n    Route,\n    Redirect,\n    useHistory,\n} from \"react-router-dom\";\nimport Routes from '../shared/routes';\nimport Utils, { toastMessage, toggleLoader, setGlobalToggleFunc } from '../shared/utils';\nimport BackdropLoader from '../shared/components/backdrop/backdrop';\nimport ToastMessage from '../shared/components/toast/toast';\nimport Login from './login/login';\nimport Home from './home/home';\nimport Profile from './profile/profile';\nimport UserContextData from './contexts/userContext';\nimport Api from '../shared/server';\nexport default function Main() {\n    Api.initApiInterceptor();\n    const his = useHistory();\n    const [globalToggle, setGlobalToggle] = useReducer(setGlobalToggleFunc, { toast: { type: '', message: '' }, isLoading: false });\n    useEffect(() => {\n        const toastUnsub = toastMessage.subscribe((data: any) => {\n            if (data.logout) {\n                localStorage.clear();\n                window.location.href = Routes.default;\n            }\n            setGlobalToggle({ toast: { type: data.type, message: data.message } });\n            setTimeout(() => setGlobalToggle({ toast: { type: '', message: false } }), (data.duration | 2500))\n        })\n        const toggleUnsub = toggleLoader.subscribe((bool: boolean) => { setGlobalToggle({ isLoading: bool }) });\n        return () => {\n            toastUnsub.unsubscribe();\n            toggleUnsub.unsubscribe();\n        }\n    }, [])\n    const defaultRedirect = () => <Redirect to={Routes.login} />;\n    const globalDefaultComponents = (\n        <>\n            <BackdropLoader open={globalToggle.isLoading} />\n            { globalToggle.toast && globalToggle.toast.message ? <ToastMessage message={globalToggle.toast.message} type={globalToggle.toast.type} /> : null}\n        </>)\n    const routes =\n        <>\n            {globalDefaultComponents}\n            <UserContextData>\n                <BrowserRouter>\n                    <Switch>\n                        <Route path={Routes.login} component={Login}></Route>\n                        <Route path={Routes.home} component={Home}></Route>\n                        <Route path={Routes.profile} component={Profile}></Route>\n                        <Route path={Routes.notFound} component={defaultRedirect}></Route>\n                        <Route path={Routes.default} component={defaultRedirect}></Route>\n                    </Switch>\n                </BrowserRouter>\n            </UserContextData>\n        </>\n    return (routes);\n}",["112","113"],"/home/mukul/mukul/qmc/messenger/messenger/src/components/login/login.tsx",["114"],"import React, { useEffect, useReducer, useContext } from 'react';\nimport BackdropLoader from '../../shared/components/backdrop/backdrop';\nimport Otp from '../../shared/components/otp/otp';\nimport Api from '../../shared/server';\nimport Utils, { toggleLoader, toastMessage, setGlobalToggleFunc } from '../../shared/utils';\nimport LoginUi from './renderer';\nimport { useHistory } from \"react-router-dom\";\nimport Routes from '../../shared/routes';\nimport { UserContext } from '../contexts/userContext';\nexport default function Login() {\n    const userContext: any = useContext(UserContext);\n    const history = useHistory();\n    const [toggle, setToggle] = useReducer(setGlobalToggleFunc,\n        { redirect: true, otpReady: false, emailMobile: '', otp: '', isLoading: false })\n    useEffect(() => {\n        document.title = 'Messenger';\n        if (localStorage.length === 0) {\n            document.title = 'Messenger - Login';\n            setToggle({ redirect: false })\n        } else {\n            //redirect\n            history.push(Routes.home)\n        }\n    }, []);\n    const onEmailMobile = async (data: String) => {\n        try {\n            setToggle({ isLoading: true, otpReady: false })\n            await Api.generateOtp(data, false);\n            setToggle({ emailMobile: data, otpReady: true, isLoading: false })\n            toastMessage.next({ type: true, message: `OTP sent to <strong>${data}</strong>`, duration: 3000 })\n        } catch (e) {\n            setToggle({ isLoading: false })\n            toastMessage.next({ type: false, message: Utils.parseError(e), duration: 2000 })\n        }\n    }\n\n    const submitOtp = async (otp: string) => {\n        try {\n            toggleLoader.next(true);\n            const response: any = await Api.verifyOtp(otp, toggle.emailMobile);\n            setToggle({ otp: otp, otpReady: false });\n            toggleLoader.next(false);\n            localStorage.setItem('id', toggle.emailMobile);\n            localStorage.setItem('secret', response.data.message);\n            if (response.status === 201) {\n                userContext.set({\n                    user: toggle.emailMobile,\n                    name: '',\n                    blob: null\n                });\n                history.push({ pathname: '/profile', state: { header: 'Complete your profile', identity: toggle.emailMobile } })\n                return\n            }\n            userContext.set({ user: toggle.emailMobile });\n            history.push({ pathname: '/home' })\n        } catch (e) {\n            toggleLoader.next(false);\n            const currErr = Utils.parseError(e);\n            toastMessage.next({ type: false, message: Utils.globalDefaultError !== currErr ? currErr : 'Invalid OTP', duration: 2000 })\n        }\n    }\n    const otp = toggle.otpReady ?\n        <Otp verifyOtp={submitOtp} resend={() => onEmailMobile(toggle.emailMobile)} cancelOtp={() => setToggle({ otpReady: false })} /> : null;\n    const jsx =\n        !toggle.redirect ?\n            <>\n                <LoginUi onEmailMobile={onEmailMobile} {...toggle} />\n                {otp}\n            </> :\n            <BackdropLoader open={toggle.redirect} />\n    return (jsx)\n}",["115","116"],"/home/mukul/mukul/qmc/messenger/messenger/src/shared/components/backdrop/backdrop.tsx",[],"/home/mukul/mukul/qmc/messenger/messenger/src/shared/material-modules.ts",[],"/home/mukul/mukul/qmc/messenger/messenger/src/shared/components/otp/otp.tsx",["117","118","119"],"import React, { createRef, useEffect, useState } from 'react';\nimport './otp.scss'\nimport {\n    Dialog, Button, ReplayIcon, CloseIcon, CheckCircleOutlineIcon\n} from '../../material-modules';\nexport default function Otp(props: any) {\n    const { verifyOtp, resend } = props;\n    const [focusOn, setFocusOn] = useState(0)\n    const [values, setValues] = useState(({ 0: '', 1: '', 2: '', 3: '', 4: '', 5: '' } as any))\n    const [focuses, setFocuses] = useState((Array(6).fill(true).map(_ => createRef()) as any))\n    const [otpValid, setOtpValid] = useState(('' as any))\n    const [inProgress, setInProgress] = useState(false)\n    const onClic = (e: any) => {\n        setFocusOn(e)\n    }\n    useEffect(() => {\n        const otp = Object.values(values).map(v => v).join('')\n        if (`${otp}`.length === 6) {\n            setOtpValid(otp)\n            return;\n        }\n        setOtpValid(null)\n    }, [values])\n\n    const resendOtp = (e: any) => {\n    }\n\n    const onKeyU = (e: any, i: number) => {\n        if (e.key <= 9 || e.key >= 0) {\n            if (i < 5) {\n                setFocusOn(i + 1)\n                focuses[i + 1].current.focus()\n            }\n        }\n    }\n    const verify = () => {\n        if (!otpValid || inProgress) { return }\n        verifyOtp(otpValid);\n    }\n    const onKeyP = (e: any, i: number) => {\n        if (e.keyCode === 13) {\n            verify()\n            return;\n        }\n        if (e.keyCode === 8 && (focusOn) > 0) {\n            const cV: any = { ...values }\n            cV[i] = ''\n            setValues(cV)\n            if (values[i] === '') {\n                setFocusOn(focusOn - 1)\n                focuses[focusOn - 1].current.focus()\n            }\n        }\n    }\n\n    const onChang = (e: any, i: number) => {\n        const val = `${e.target.value}`;\n        if (!isNaN(Number(val))) {\n            const cV: any = { ...values }\n            cV[i] = val.length === 1 ? val : val.charAt(val.length - 1)\n            setValues(cV)\n        }\n    }\n    const isEnabled = otpValid && !inProgress\n    return (\n        <div className='otp-parent'>\n            <Dialog\n                open={true}>\n                <div className='otp-modal'>\n                    <div className='goBack'>\n                        {\n                            !inProgress ?\n                                <CloseIcon className=\"close-otp\" onClick={e => {\n                                    if (!inProgress) { props.cancelOtp() }\n                                }} /> :\n                                null\n                        }\n\n                    </div>\n                    <div className=\"otp-title\">\n                        Enter OTP\n                    </div>\n                    <div className=\"otp-input\">\n                        {Array(6).fill(true).map((v, i) => {\n                            return <input\n                                className='otp-inp'\n                                key={i}\n                                ref={focuses[i]}\n                                id={`otp-inp-${i}`}\n                                // autoFocus={i == focusOn}\n                                onClick={e => onClic(i)}\n                                onKeyPress={e => onKeyU(e, i)}\n                                value={values[i]}\n                                onKeyDown={e => onKeyP(e, i)}\n                                onChange={e => onChang(e, i)}\n                                onFocus={e => e.target.select()}\n                                autoFocus={i === 0}\n                            />\n                        })}\n                    </div>\n                    <div className=\"otp-btns\">\n                        <span className='otp-verify'>\n                            <Button\n                                variant=\"contained\"\n                                className={isEnabled ? 'otp-verify-btn' : 'otp-verify-btn bg-empty-dis'}\n                                onClick={verify}\n                                disabled={!isEnabled}\n                            >\n                                Verify\n                                <CheckCircleOutlineIcon className=\"icon\" />\n                            </Button>\n                        </span>\n                        <span className='otp-resend'>\n                            <Button\n                                variant=\"contained\"\n                                className={!inProgress ? 'otp-resend-btn' : 'otp-resend-btn bg-empty-dis'}\n                                disabled={inProgress}\n                                onClick={resend}\n                            >\n                                Resend\n                                <ReplayIcon className=\"icon\" />\n                            </Button>\n                        </span>\n                    </div>\n                </div>\n            </Dialog>\n        </div>)\n}",["120","121"],"/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/chatsection/chatsection.tsx",[],"/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/chatsection/friends/friends.tsx",[],"/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/chatsection/chatarea/ui/chatarearender.tsx",["122","123","124","125","126","127","128"],"/home/mukul/mukul/qmc/messenger/messenger/src/shared/server.ts",[],"/home/mukul/mukul/qmc/messenger/messenger/src/shared/components/toast/toast.tsx",["129"],"import React, { useEffect } from 'react';\nimport { Snackbar } from '../../material-modules';\nimport './toast.scss'\nexport default function ToastMessage(props: any) {\n    const { type, message } = props;\n    return <Snackbar open={true}>\n        <div className={type ? 'toast-message success-message' : 'toast-message error-message'} dangerouslySetInnerHTML={{ __html: `${message}` }}></div>\n    </Snackbar>\n}",["130","131"],"/home/mukul/mukul/qmc/messenger/messenger/src/shared/utils.ts",[],"/home/mukul/mukul/qmc/messenger/messenger/src/components/contexts/userContext.tsx",["132"],"/home/mukul/mukul/qmc/messenger/messenger/src/components/profile/renderer.tsx",["133","134","135","136","137","138"],"import React, { createRef, Ref, useEffect, useRef } from 'react';\nimport './profile.scss'\nimport namasteImg from '../../assets/namaste.png'\nimport emptyProfile from '../../assets/emptyProfile.webp';\nimport { TextField, Button, CircularProgress } from '../../shared/material-modules';\nexport default function ProfileRenderer(props: any) {\n    const { loading, name, user, setForm, updateProfile, blob, changed } = props;\n    const fileInp = (createRef() as any);\n    const setProfileImage = (evt: any) => {\n        var f = evt.target.files[0];\n        if (f) {\n            const r = new FileReader();\n            r.onload = (e: any) => setForm({ blob: e.target.result, changed: true })\n            r.readAsDataURL(f);\n        }\n    }\n    return (\n        <>\n            <input type='file' hidden id='hidden-file' ref={fileInp} onChange={setProfileImage} />\n            <div className=\"profile-layout\">\n                <p id='heading'>My Profile</p>\n                <div className=\"profile\">\n                    <div className=\"profile-form\">\n                        <div className=\"profile-img\">\n                            <img src={blob ? blob : emptyProfile} width=\"100px\" height=\"100px\" onClick={e => fileInp.current.click()} />\n                            {\n                                blob ?\n                                    <div className=\"remove-img\" onClick={e => setForm({ blob: null, changed: true })}>x</div>\n                                    : null\n                            }\n                        </div>\n                        <div className=\"profile-name form-inp\">\n                            <div id='inp-text'><strong>Name</strong></div>\n                            <TextField\n                                id=\"outlined-basic\"\n                                placeholder=\"Name\"\n                                variant=\"outlined\"\n                                className=\"input-text\"\n                                disabled={loading}\n                                value={name || ''}\n                                onChange={e => setForm({ name: e.target.value, changed: true })}\n                            />\n                        </div>\n                        <div className=\"profile-emailMobile form-inp\">\n                            <div id='inp-text'><strong>Email or Mobile</strong></div>\n                            <TextField\n                                id=\"outlined-basic\"\n                                placeholder=\"Email or Mobile\"\n                                variant=\"outlined\"\n                                className=\"input-text\"\n                                disabled={true}\n                                value={user || ''}\n                            />\n                        </div>\n                        <div className=\"submit-profile\">\n                            <Button variant=\"contained\" color=\"primary\"\n                                disabled={loading}\n                                onClick={e => updateProfile()}\n                            >\n                                {\n                                    loading ?\n                                        <CircularProgress className=\"submit-profile__loader\" /> :\n                                        'Submit'\n                                }\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}","/home/mukul/mukul/qmc/messenger/messenger/src/components/profile/profile.tsx",["139","140"],"import React, { useContext, useEffect, useReducer } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Routes from '../../shared/routes';\nimport Api from '../../shared/server';\nimport Utils, { setGlobalToggleFunc, toastMessage } from '../../shared/utils';\nimport { UserContext } from '../contexts/userContext';\nimport ProfileRenderer from './renderer';\nexport default function Profile() {\n    const history = useHistory();\n    const userContext: any = useContext(UserContext);\n    const userContextGet = userContext.get;\n    const stateData = { loading: true, name: '', blob: null, user: localStorage.getItem('id'), changed: false };\n    const [state, setState] = useReducer(setGlobalToggleFunc, stateData);\n    const updateProfile = async () => {\n        try {\n            setState({ loading: true })\n            await Api.updateProfile(state.name, state.blob);\n            setState({ loading: false, changed: false })\n            userContext.set({ name: state.name, blob: state.blob })\n            toastMessage.next({ type: true, message: 'Profile updated successfully' });\n            history.push(Routes.home)\n        } catch (e) {\n            setState({ loading: false })\n            toastMessage.next({ type: false, message: Utils.parseError(e), duration: 2000 })\n        }\n    }\n    const getProfile = async () => {\n        document.title = 'Messenger - Profile';\n        if (localStorage.length === 0) {\n            history.push(Routes.login);\n        }\n        else if (!userContextGet.name) {\n            try {\n                setState({ loading: true })\n                const profileResponse: any = await Api.getProfile('_');\n                const profile = profileResponse.data && profileResponse.data[0] ? profileResponse.data[0] : null;\n                setState({ loading: false })\n                if (profile) {\n                    const blob = `${profile.image_blob}` == 'null' ? null : profile.image_blob;\n                    userContext.set({ user: profile.identity, name: profile.name, blob: blob })\n                    setState({ loading: false, name: profile.name, blob: blob, user: profile.identity })\n                } else {\n                    toastMessage.next({ type: false, message: 'Profile not set' })\n                }\n            } catch (e) {\n                setState({ loading: false })\n                toastMessage.next({ type: false, message: Utils.parseError(e), duration: 2000 })\n            }\n        } else {\n            setState({ loading: false, name: userContextGet.name, blob: userContextGet.blob, user: userContextGet.user })\n        }\n    }\n    useEffect(() => { getProfile(); console.log(userContextGet) }, [])\n    return (<ProfileRenderer {...state} updateProfile={updateProfile} setForm={setState} />)\n}","/home/mukul/mukul/qmc/messenger/messenger/src/shared/routes.ts",[],"/home/mukul/mukul/qmc/messenger/messenger/src/components/login/renderer.tsx",["141"],"import React, { useState } from 'react';\nimport namasteImg from '../../assets/namaste.png'\nimport googleImg from '../../assets/google.png'\nimport './login.scss'\nimport { TextField, Button, CircularProgress } from '../../shared/material-modules';\nimport Utils from '../../shared/utils';\nexport default function LoginUi(props: any) {\n    const { onEmailMobile, isLoading } = props;\n    const [emailMobile, setEmailMobile] = useState<String>('');\n    return (\n        <>\n            <div className=\"login\">\n                <div className=\"login-layout\">\n                    <div className=\"login-img margin-auto\">\n                        <img src={namasteImg} alt=\"namaste\" width=\"150px\" height=\"150px\" />\n                    </div>\n                    <div className=\"login-form margin-auto\">\n                        <div className=\"mob-logo\" style={{ display: 'none' }}>\n                            <img src={namasteImg} alt=\"namaste\" width=\"100px\" height=\"100px\" />\n                        </div>\n                        <div className=\"form\">\n                            <TextField\n                                id=\"outlined-basic\"\n                                placeholder=\"Email or Mobile\"\n                                variant=\"outlined\"\n                                className=\"input-text\"\n                                onChange={e => setEmailMobile(e.target.value)}\n                            />\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className=\"submit\"\n                                onClick={e => onEmailMobile(emailMobile)}\n                                disabled={!Utils.validateEmailMobile(emailMobile.trim()) || isLoading}\n                            >\n                                {\n                                    isLoading ?\n                                    <CircularProgress className=\"submit__loader\"/>\n                                    : 'Submit' \n                                }\n                            </Button>\n                            <div>\n                                <Button\n                                    variant=\"contained\"\n                                    className=\"continue-google\"\n                                    onClick={e => onEmailMobile({ thirdParty: 'google' })}\n                                    disabled={isLoading}\n                                >\n                                    Google\n                                </Button>\n                                <span className=\"google-img\">\n                                    <img src={googleImg} width=\"20px\" />\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>)\n}","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/chatsection/friends/ui/friendsrender.tsx",["142"],"import React from 'react';\nimport './friends.scss'\nimport emptyProfile from '../../../../../../assets/emptyProfile.webp';\nimport { TextField, SearchIcon } from '../../../../../../shared/material-modules';\nexport default function FriendsRender() {\n    return (\n        <div className=\"friendsrender-layout\">\n            <div className=\"search-friends pad-b-10\">\n                <div className=\"search-txt\">Search</div>\n                <TextField\n                    id=\"outlined-basic\"\n                    placeholder=\"Search Friends\"\n                    variant=\"outlined\"\n                    className=\"search-inp\"\n                />\n                <SearchIcon className=\"search-icon\" />\n            </div>\n            <div className=\"search-results\">\n                {\n                    Array(102).fill(1).map((v, i) => {\n                        return (\n                            <div className=\"friend-fragment mar-b-10\" key={i}>\n                                <div className=\"profile-pic\">\n                                    <img id=\"profile-pic\" src={emptyProfile} width=\"50px\" height=\"50px\" />\n                                </div>\n                                <div className=\"profile-details\">\n                                    <div id='p-name'>Mukul </div>\n                                    <div id='frnd-status'><strong>ACTIVE</strong></div>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        </div>)\n}","/home/mukul/mukul/qmc/messenger/messenger/src/components/home/home.tsx",["143"],"/home/mukul/mukul/qmc/messenger/messenger/src/components/home/homeui/homerenderer.tsx",["144","145","146","147","148"],"/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/navbar/navbar.tsx",["149"],"/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/navbar/ui/navbarRenderer.tsx",["150","151","152","153"],"/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/search/search.tsx",["154","155"],"/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/requests/requests.tsx",["156","157"],"/home/mukul/mukul/qmc/messenger/messenger/src/components/home/components/requests/requestrenderer.tsx",["158","159","160"],{"ruleId":"161","severity":1,"message":"162","line":10,"column":8,"nodeType":"163","messageId":"164","endLine":10,"endColumn":13},{"ruleId":"161","severity":1,"message":"165","line":20,"column":11,"nodeType":"163","messageId":"164","endLine":20,"endColumn":14},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":24,"column":8,"nodeType":"172","endLine":24,"endColumn":10,"suggestions":"173"},{"ruleId":"166","replacedBy":"174"},{"ruleId":"168","replacedBy":"175"},{"ruleId":"161","severity":1,"message":"176","line":10,"column":21,"nodeType":"163","messageId":"164","endLine":10,"endColumn":31},{"ruleId":"161","severity":1,"message":"177","line":12,"column":24,"nodeType":"163","messageId":"164","endLine":12,"endColumn":37},{"ruleId":"161","severity":1,"message":"178","line":25,"column":11,"nodeType":"163","messageId":"164","endLine":25,"endColumn":20},{"ruleId":"166","replacedBy":"179"},{"ruleId":"168","replacedBy":"180"},{"ruleId":"161","severity":1,"message":"181","line":3,"column":8,"nodeType":"163","messageId":"164","endLine":3,"endColumn":17},{"ruleId":"161","severity":1,"message":"182","line":4,"column":31,"nodeType":"163","messageId":"164","endLine":4,"endColumn":36},{"ruleId":"161","severity":1,"message":"183","line":26,"column":12,"nodeType":"163","messageId":"164","endLine":26,"endColumn":22},{"ruleId":"161","severity":1,"message":"184","line":27,"column":12,"nodeType":"163","messageId":"164","endLine":27,"endColumn":22},{"ruleId":"161","severity":1,"message":"185","line":27,"column":24,"nodeType":"163","messageId":"164","endLine":27,"endColumn":37},{"ruleId":"186","severity":1,"message":"187","line":31,"column":9,"nodeType":"188","messageId":"189","endLine":49,"endColumn":12},{"ruleId":"190","severity":1,"message":"191","line":66,"column":42,"nodeType":"192","messageId":"193","endLine":66,"endColumn":44},{"ruleId":"161","severity":1,"message":"194","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":26},{"ruleId":"166","replacedBy":"195"},{"ruleId":"168","replacedBy":"196"},{"ruleId":"161","severity":1,"message":"194","line":2,"column":17,"nodeType":"163","messageId":"164","endLine":2,"endColumn":26},{"ruleId":"161","severity":1,"message":"197","line":1,"column":28,"nodeType":"163","messageId":"164","endLine":1,"endColumn":31},{"ruleId":"161","severity":1,"message":"194","line":1,"column":33,"nodeType":"163","messageId":"164","endLine":1,"endColumn":42},{"ruleId":"161","severity":1,"message":"198","line":1,"column":44,"nodeType":"163","messageId":"164","endLine":1,"endColumn":50},{"ruleId":"161","severity":1,"message":"199","line":3,"column":8,"nodeType":"163","messageId":"164","endLine":3,"endColumn":18},{"ruleId":"161","severity":1,"message":"200","line":7,"column":64,"nodeType":"163","messageId":"164","endLine":7,"endColumn":71},{"ruleId":"201","severity":1,"message":"202","line":25,"column":29,"nodeType":"203","endLine":25,"endColumn":137},{"ruleId":"190","severity":1,"message":"204","line":39,"column":58,"nodeType":"192","messageId":"193","endLine":39,"endColumn":60},{"ruleId":"170","severity":1,"message":"205","line":53,"column":68,"nodeType":"172","endLine":53,"endColumn":70,"suggestions":"206"},{"ruleId":"201","severity":1,"message":"202","line":52,"column":37,"nodeType":"203","endLine":52,"endColumn":73},{"ruleId":"201","severity":1,"message":"202","line":24,"column":37,"nodeType":"203","endLine":24,"endColumn":107},{"ruleId":"170","severity":1,"message":"207","line":8,"column":8,"nodeType":"172","endLine":8,"endColumn":10,"suggestions":"208"},{"ruleId":"161","severity":1,"message":"194","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":26},{"ruleId":"161","severity":1,"message":"209","line":8,"column":5,"nodeType":"163","messageId":"164","endLine":8,"endColumn":15},{"ruleId":"161","severity":1,"message":"210","line":9,"column":5,"nodeType":"163","messageId":"164","endLine":9,"endColumn":18},{"ruleId":"161","severity":1,"message":"211","line":11,"column":8,"nodeType":"163","messageId":"164","endLine":11,"endColumn":22},{"ruleId":"161","severity":1,"message":"212","line":16,"column":13,"nodeType":"163","messageId":"164","endLine":16,"endColumn":19},{"ruleId":"161","severity":1,"message":"213","line":7,"column":11,"nodeType":"163","messageId":"164","endLine":7,"endColumn":22},{"ruleId":"161","severity":1,"message":"214","line":4,"column":10,"nodeType":"163","messageId":"164","endLine":4,"endColumn":20},{"ruleId":"170","severity":1,"message":"215","line":31,"column":8,"nodeType":"172","endLine":31,"endColumn":10,"suggestions":"216"},{"ruleId":"161","severity":1,"message":"217","line":32,"column":11,"nodeType":"163","messageId":"164","endLine":32,"endColumn":22},{"ruleId":"201","severity":1,"message":"202","line":39,"column":17,"nodeType":"203","endLine":45,"endColumn":19},{"ruleId":"161","severity":1,"message":"218","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":27},{"ruleId":"161","severity":1,"message":"194","line":1,"column":29,"nodeType":"163","messageId":"164","endLine":1,"endColumn":38},{"ruleId":"161","severity":1,"message":"218","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":27},{"ruleId":"161","severity":1,"message":"194","line":1,"column":29,"nodeType":"163","messageId":"164","endLine":1,"endColumn":38},{"ruleId":"161","severity":1,"message":"218","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":27},{"ruleId":"161","severity":1,"message":"194","line":1,"column":29,"nodeType":"163","messageId":"164","endLine":1,"endColumn":38},{"ruleId":"201","severity":1,"message":"202","line":35,"column":37,"nodeType":"203","endLine":35,"endColumn":61},"@typescript-eslint/no-unused-vars","'Utils' is defined but never used.","Identifier","unusedVar","'his' is assigned a value but never used.","no-native-reassign",["219"],"no-negated-in-lhs",["220"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["221"],["219"],["220"],"'setFocuses' is assigned a value but never used.","'setInProgress' is assigned a value but never used.","'resendOtp' is assigned a value but never used.",["219"],["220"],"'bgChatImg' is defined but never used.","'Modal' is defined but never used.","'scrollDate' is assigned a value but never used.","'hoverTimer' is assigned a value but never used.","'setHoverTimer' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useEffect' is defined but never used.",["219"],["220"],"'Ref' is defined but never used.","'useRef' is defined but never used.","'namasteImg' is defined but never used.","'changed' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'getProfile' and 'userContextGet'. Either include them or remove the dependency array.",["222"],"React Hook useEffect has a missing dependency: 'userContext.get'. Either include it or remove the dependency array.",["223"],"'useHistory' is defined but never used.","'BrowserRouter' is defined but never used.","'BackdropLoader' is defined but never used.","'navBar' is assigned a value but never used.","'userContext' is assigned a value but never used.","'SearchIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'closeAutoDrawer'. Either include it or remove the dependency array.",["224"],"'onNavSelect' is assigned a value but never used.","'useContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},"Update the dependencies array to be: [history]",{"range":"233","text":"234"},"Update the dependencies array to be: [getProfile, userContextGet]",{"range":"235","text":"236"},"Update the dependencies array to be: [userContext.get]",{"range":"237","text":"238"},"Update the dependencies array to be: [closeAutoDrawer]",{"range":"239","text":"240"},[1063,1065],"[history]",[2671,2673],"[getProfile, userContextGet]",[312,314],"[userContext.get]",[1383,1385],"[closeAutoDrawer]"]